"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[9350],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),o=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=o(r),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||n;return r?a.createElement(h,l(l({ref:t},p),{},{components:r})):a.createElement(h,l({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var o=2;o<n;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6396:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return p},default:function(){return m}});var a=r(7462),i=r(3366),n=(r(7294),r(3905)),l=["components"],c={title:"Class DbString",sidebar_label:"DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"},s="Class DbString",o={unversionedId:"api/ServiceStack.OrmLite.Dapper/DbString",id:"api/ServiceStack.OrmLite.Dapper/DbString",title:"Class DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/DbString.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/DbString",permalink:"/api/ServiceStack.OrmLite.Dapper/DbString",tags:[],version:"current",frontMatter:{title:"Class DbString",sidebar_label:"DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"},sidebar:"apiSidebar",previous:{title:"CustomPropertyTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/CustomPropertyTypeMap"},next:{title:"DefaultTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap"}},p=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"IsAnsiDefault",id:"isansidefault",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"IsAnsi",id:"isansi",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"IsFixedLength",id:"isfixedlength",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"Length",id:"length",children:[{value:"View Source",id:"view-source-4",children:[],level:6}],level:3},{value:"Value",id:"value",children:[{value:"View Source",id:"view-source-5",children:[],level:6}],level:3}],level:2},{value:"Fields",id:"fields",children:[{value:"DefaultLength",id:"defaultlength",children:[{value:"View Source",id:"view-source-6",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"AddParameter(IDbCommand, String)",id:"addparameteridbcommand-string",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],u={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-dbstring"},"Class DbString"),(0,n.kt)("p",null,"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"),(0,n.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L9"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class DbString : SqlMapper.ICustomQueryParameter\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"isansidefault"},"IsAnsiDefault"),(0,n.kt)("p",null,"Default value for IsAnsi."),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L14"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool IsAnsiDefault { get; set; }\n")),(0,n.kt)("h3",{id:"isansi"},"IsAnsi"),(0,n.kt)("p",null,"Ansi vs Unicode"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L34"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool IsAnsi { get; set; }\n")),(0,n.kt)("h3",{id:"isfixedlength"},"IsFixedLength"),(0,n.kt)("p",null,"Fixed length"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L38"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool IsFixedLength { get; set; }\n")),(0,n.kt)("h3",{id:"length"},"Length"),(0,n.kt)("p",null,"Length of the string -1 for max"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L42"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int Length { get; set; }\n")),(0,n.kt)("h3",{id:"value"},"Value"),(0,n.kt)("p",null,"The value of the string"),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L46"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string Value { get; set; }\n")),(0,n.kt)("h2",{id:"fields"},"Fields"),(0,n.kt)("h3",{id:"defaultlength"},"DefaultLength"),(0,n.kt)("p",null,"A value to set the default value of strings\ngoing through Dapper. Default is 4000, any value larger than this\nfield will not have the default value applied."),(0,n.kt)("h6",{id:"view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L21"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public const int DefaultLength = 4000\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"addparameteridbcommand-string"},"AddParameter(IDbCommand, String)"),(0,n.kt)("p",null,"Add the parameter to the command... internal use only"),(0,n.kt)("h6",{id:"view-source-7"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L52"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddParameter(IDbCommand command, string name)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbCommand")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"command"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"name"))))),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter"},"ServiceStack.OrmLite.Dapper.SqlMapper.ICustomQueryParameter"))))}m.isMDXComponent=!0}}]);