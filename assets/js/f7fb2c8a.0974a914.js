"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[49350],{26396:function(e,t,i){i.r(t),i.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return m}});var a=i(83117),c=(i(67294),i(3905)),n=i(1954);const r={title:"Class DbString",sidebar_label:"DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> DbString',s={unversionedId:"api/ServiceStack.OrmLite.Dapper/DbString",id:"api/ServiceStack.OrmLite.Dapper/DbString",title:"Class DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/DbString.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/DbString",permalink:"/api/ServiceStack.OrmLite.Dapper/DbString",draft:!1,tags:[],version:"current",frontMatter:{title:"Class DbString",sidebar_label:"DbString",description:"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"},sidebar:"apiSidebar",previous:{title:"CustomPropertyTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/CustomPropertyTypeMap"},next:{title:"DefaultTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap"}},l={},m=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> IsAnsiDefault',id:"-isansidefault",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> IsAnsi',id:"-isansi",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> IsFixedLength',id:"-isfixedlength",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Length',id:"-length",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Value',id:"-value",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Fields",id:"fields",level:2},{value:'<Icon icon="codicon:symbol-field" className="symbol-field" /> DefaultLength',id:"-defaultlength",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddParameter(IDbCommand, String)',id:"-addparameteridbcommand-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Implements",id:"implements",level:2}],d={toc:m};function p(e){let{components:t,...i}=e;return(0,c.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"-dbstring"},(0,c.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," DbString"),(0,c.kt)("p",null,"This class represents a SQL string, it can be used if you need to denote your parameter is a Char vs VarChar vs nVarChar vs nChar"),(0,c.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,c.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L9"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class DbString : object, SqlMapper.ICustomQueryParameter\n")),(0,c.kt)("h2",{id:"properties"},"Properties"),(0,c.kt)("h3",{id:"-isansidefault"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," IsAnsiDefault"),(0,c.kt)("p",null,"Default value for IsAnsi."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L14"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool IsAnsiDefault { get; set; }\n")),(0,c.kt)("h3",{id:"-isansi"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," IsAnsi"),(0,c.kt)("p",null,"Ansi vs Unicode"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L34"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool IsAnsi { get; set; }\n")),(0,c.kt)("h3",{id:"-isfixedlength"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," IsFixedLength"),(0,c.kt)("p",null,"Fixed length"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L38"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool IsFixedLength { get; set; }\n")),(0,c.kt)("h3",{id:"-length"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Length"),(0,c.kt)("p",null,"Length of the string -1 for max"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L42"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int Length { get; set; }\n")),(0,c.kt)("h3",{id:"-value"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Value"),(0,c.kt)("p",null,"The value of the string"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L46"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string Value { get; set; }\n")),(0,c.kt)("h2",{id:"fields"},"Fields"),(0,c.kt)("h3",{id:"-defaultlength"},(0,c.kt)(n.JO,{icon:"codicon:symbol-field",className:"symbol-field",mdxType:"Icon"})," DefaultLength"),(0,c.kt)("p",null,"A value to set the default value of strings\ngoing through Dapper. Default is 4000, any value larger than this\nfield will not have the default value applied."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L21"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public const int DefaultLength = null\n")),(0,c.kt)("h2",{id:"methods"},"Methods"),(0,c.kt)("h3",{id:"-addparameteridbcommand-string"},(0,c.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddParameter(IDbCommand, String)"),(0,c.kt)("p",null,"Add the parameter to the command... internal use only"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DbString.cs#L52"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddParameter(IDbCommand command, string name)\n")),(0,c.kt)("h5",{id:"parameters"},"Parameters"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("inlineCode",{parentName:"td"},"IDbCommand")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"command"))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("inlineCode",{parentName:"td"},"System.String")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"name"))))),(0,c.kt)("h2",{id:"implements"},"Implements"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter"},"ServiceStack.OrmLite.Dapper.SqlMapper.ICustomQueryParameter"))))}p.isMDXComponent=!0}}]);