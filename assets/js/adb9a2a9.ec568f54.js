"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[22234],{86413:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return r},toc:function(){return s}});var i=a(83117),n=(a(67294),a(3905)),o=a(1954);const c={title:"Interface IValidator",sidebar_label:"IValidator",description:"Defines a validator for a particular type."},l='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IValidator',r={unversionedId:"api/ServiceStack.FluentValidation/IValidator",id:"api/ServiceStack.FluentValidation/IValidator",title:"Interface IValidator",description:"Defines a validator for a particular type.",source:"@site/docs/api/ServiceStack.FluentValidation/IValidator.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/IValidator",permalink:"/api/ServiceStack.FluentValidation/IValidator",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IValidator",sidebar_label:"IValidator",description:"Defines a validator for a particular type."},sidebar:"apiSidebar",previous:{title:"IValidationRule",permalink:"/api/ServiceStack.FluentValidation/IValidationRule"},next:{title:"IValidatorDescriptor",permalink:"/api/ServiceStack.FluentValidation/IValidatorDescriptor"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Validate(IValidationContext)',id:"-validateivalidationcontext",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ValidateAsync(IValidationContext, CancellationToken)',id:"-validateasyncivalidationcontext-cancellationtoken",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CreateDescriptor()',id:"-createdescriptor",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CanValidateInstancesOfType(Type)',id:"-canvalidateinstancesoftypetype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-2",level:5}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-ivalidator"},(0,n.kt)(o.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IValidator"),(0,n.kt)("p",null,"Defines a validator for a particular type."),(0,n.kt)("h6",{id:"assembly-servicestackdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L57"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IValidator\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-validateivalidationcontext"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Validate(IValidationContext)"),(0,n.kt)("p",null,"Validates the specified instance."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L63"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"ValidationResult Validate(IValidationContext context)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Results/ValidationResult"},"ServiceStack.FluentValidation.Results.ValidationResult"),": A ValidationResult object contains any validation failures."),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"context")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A ValidationContext")))),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-validateasyncivalidationcontext-cancellationtoken"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ValidateAsync(IValidationContext, CancellationToken)"),(0,n.kt)("p",null,"Validates the specified instance asynchronously."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L71"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Task<ValidationResult> ValidateAsync(IValidationContext context, CancellationToken cancellation = default(CancellationToken))\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<ServiceStack.FluentValidation.Results.ValidationResult>"),": A ValidationResult object contains any validation failures."),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"context")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A ValidationContext")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.CancellationToken")," | ",(0,n.kt)("em",{parentName:"p"},"cancellation")," | Cancellation token"),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-createdescriptor"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CreateDescriptor()"),(0,n.kt)("p",null,"Creates a hook to access various meta data properties"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L77"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IValidatorDescriptor CreateDescriptor()\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation/IValidatorDescriptor"},"ServiceStack.FluentValidation.IValidatorDescriptor"),": A IValidatorDescriptor object which contains methods to access metadata"),(0,n.kt)("h3",{id:"-canvalidateinstancesoftypetype"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CanValidateInstancesOfType(Type)"),(0,n.kt)("p",null,"Checks to see whether the validator can validate objects of the specified type"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L82"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"bool CanValidateInstancesOfType(Type type)\n")),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Boolean")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type"))))))}m.isMDXComponent=!0}}]);