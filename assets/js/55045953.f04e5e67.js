"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[1488],{95572:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return u}});var i=a(83117),l=(a(67294),a(3905)),n=a(1954);const r={title:"Class MultiRuleSetValidatorSelector",sidebar_label:"MultiRuleSetValidatorSelector"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> MultiRuleSetValidatorSelector',c={unversionedId:"api/ServiceStack.Validation/MultiRuleSetValidatorSelector",id:"api/ServiceStack.Validation/MultiRuleSetValidatorSelector",title:"Class MultiRuleSetValidatorSelector",description:"",source:"@site/docs/api/ServiceStack.Validation/MultiRuleSetValidatorSelector.md",sourceDirName:"api/ServiceStack.Validation",slug:"/api/ServiceStack.Validation/MultiRuleSetValidatorSelector",permalink:"/api/ServiceStack.Validation/MultiRuleSetValidatorSelector",draft:!1,tags:[],version:"current",frontMatter:{title:"Class MultiRuleSetValidatorSelector",sidebar_label:"MultiRuleSetValidatorSelector"},sidebar:"apiSidebar",previous:{title:"ModifyValidationRulesService",permalink:"/api/ServiceStack.Validation/ModifyValidationRulesService"},next:{title:"ValidationError",permalink:"/api/ServiceStack.Validation/ValidationError"}},d={},u=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CanExecute(IValidationRule, String, IValidationContext)',id:"-canexecuteivalidationrule-string-ivalidationcontext",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Implements",id:"implements",level:2}],s={toc:u};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,i.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"-multirulesetvalidatorselector"},(0,l.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," MultiRuleSetValidatorSelector"),(0,l.kt)("h6",{id:"assembly-servicestackdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/Validation/MultiRuleSetValidatorSelector.cs#L7"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class MultiRuleSetValidatorSelector : IValidatorSelector\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"-canexecuteivalidationrule-string-ivalidationcontext"},(0,l.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CanExecute(IValidationRule, String, IValidationContext)"),(0,l.kt)("p",null,"Determines whether or not a rule should execute."),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/Validation/MultiRuleSetValidatorSelector.cs#L25"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool CanExecute(IValidationRule rule, string propertyPath, IValidationContext context)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Boolean"),": Whether or not the validator can execute."),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationRule"},"ServiceStack.FluentValidation.IValidationRule")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"rule")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The rule")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.String")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"propertyPath")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Property path (eg Customer.Address.Line1)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"context")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Contextual information")))),(0,l.kt)("h2",{id:"implements"},"Implements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.FluentValidation.Internal/IValidatorSelector"},"ServiceStack.FluentValidation.Internal.IValidatorSelector"))))}m.isMDXComponent=!0}}]);