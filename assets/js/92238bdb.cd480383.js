"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[33485],{2211:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var i=a(83117),n=(a(67294),a(3905)),o=a(1954);const l={title:"Interface IValidatorInterceptor",sidebar_label:"IValidatorInterceptor",description:"Specifies an interceptor that can be used to provide hooks that will be called before and after MVC validation occurs."},r='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IValidatorInterceptor',c={unversionedId:"api/ServiceStack.FluentValidation.Mvc/IValidatorInterceptor",id:"api/ServiceStack.FluentValidation.Mvc/IValidatorInterceptor",title:"Interface IValidatorInterceptor",description:"Specifies an interceptor that can be used to provide hooks that will be called before and after MVC validation occurs.",source:"@site/docs/api/ServiceStack.FluentValidation.Mvc/IValidatorInterceptor.md",sourceDirName:"api/ServiceStack.FluentValidation.Mvc",slug:"/api/ServiceStack.FluentValidation.Mvc/IValidatorInterceptor",permalink:"/api/ServiceStack.FluentValidation.Mvc/IValidatorInterceptor",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IValidatorInterceptor",sidebar_label:"IValidatorInterceptor",description:"Specifies an interceptor that can be used to provide hooks that will be called before and after MVC validation occurs."},sidebar:"apiSidebar",previous:{title:"FluentValidationPropertyValidator",permalink:"/api/ServiceStack.FluentValidation.Mvc/FluentValidationPropertyValidator"},next:{title:"RuleSetForClientSideMessagesAttribute",permalink:"/api/ServiceStack.FluentValidation.Mvc/RuleSetForClientSideMessagesAttribute"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.Mvc.dll",id:"assembly-servicestackmvcdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> BeforeMvcValidation(ControllerContext, IValidationContext)',id:"-beforemvcvalidationcontrollercontext-ivalidationcontext",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AfterMvcValidation(ControllerContext, IValidationContext, ValidationResult)',id:"-aftermvcvalidationcontrollercontext-ivalidationcontext-validationresult",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5}],u={toc:s};function p(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,i.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-ivalidatorinterceptor"},(0,n.kt)(o.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IValidatorInterceptor"),(0,n.kt)("p",null,"Specifies an interceptor that can be used to provide hooks that will be called before and after MVC validation occurs."),(0,n.kt)("h6",{id:"assembly-servicestackmvcdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Mvc.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/IValidatorInterceptor.cs#L9"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IValidatorInterceptor\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-beforemvcvalidationcontrollercontext-ivalidationcontext"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," BeforeMvcValidation(ControllerContext, IValidationContext)"),(0,n.kt)("p",null,"Invoked before MVC validation takes place which allows the ValidationContext to be customized prior to validation.\nIt should return a ValidationContext object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/IValidatorInterceptor.cs#L17"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IValidationContext BeforeMvcValidation(ControllerContext controllerContext, IValidationContext validationContext)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext"),": Validation Context"),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"ControllerContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"controllerContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Controller Context")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")," | ",(0,n.kt)("em",{parentName:"p"},"validationContext")," | Validation Context"),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-aftermvcvalidationcontrollercontext-ivalidationcontext-validationresult"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AfterMvcValidation(ControllerContext, IValidationContext, ValidationResult)"),(0,n.kt)("p",null,"Invoked after MVC validation takes place which allows the result to be customized.\nIt should return a ValidationResult."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/IValidatorInterceptor.cs#L27"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"ValidationResult AfterMvcValidation(ControllerContext controllerContext, IValidationContext validationContext, ValidationResult result)\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Results/ValidationResult"},"ServiceStack.FluentValidation.Results.ValidationResult"),": Validation Context"),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"ControllerContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"controllerContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Controller Context")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")," | ",(0,n.kt)("em",{parentName:"p"},"validationContext")," | Validation Context"),(0,n.kt)("p",null," |\n| ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Results/ValidationResult"},"ServiceStack.FluentValidation.Results.ValidationResult")," | ",(0,n.kt)("em",{parentName:"p"},"result")," | The result of validation."),(0,n.kt)("p",null," |"))}p.isMDXComponent=!0}}]);