"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[21059],{49924:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return c},metadata:function(){return r},toc:function(){return d}});var i=a(83117),l=(a(67294),a(3905)),n=a(1954);const c={title:"Class RulesetValidatorSelector",sidebar_label:"RulesetValidatorSelector",description:"Selects validators that belong to the specified rulesets."},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> RulesetValidatorSelector',r={unversionedId:"api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector",id:"api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector",title:"Class RulesetValidatorSelector",description:"Selects validators that belong to the specified rulesets.",source:"@site/docs/api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector.md",sourceDirName:"api/ServiceStack.FluentValidation.Internal",slug:"/api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector",permalink:"/api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector",draft:!1,tags:[],version:"current",frontMatter:{title:"Class RulesetValidatorSelector",sidebar_label:"RulesetValidatorSelector",description:"Selects validators that belong to the specified rulesets."},sidebar:"apiSidebar",previous:{title:"RuleBuilder<T, TProperty>",permalink:"/api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`"},next:{title:"ValidationStrategy<T>",permalink:"/api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`"}},s={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> RuleSets',id:"-rulesets",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Fields",id:"fields",level:2},{value:'<Icon icon="codicon:symbol-field" className="symbol-field" /> DefaultRuleSetName',id:"-defaultrulesetname",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:'<Icon icon="codicon:symbol-field" className="symbol-field" /> WildcardRuleSetName',id:"-wildcardrulesetname",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CanExecute(IValidationRule, String, IValidationContext)',id:"-canexecuteivalidationrule-string-ivalidationcontext",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IsIncludeRule(IValidationRule)',id:"-isincluderuleivalidationrule",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Implements",id:"implements",level:2}],u={toc:d};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"-rulesetvalidatorselector"},(0,l.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RulesetValidatorSelector"),(0,l.kt)("p",null,"Selects validators that belong to the specified rulesets."),(0,l.kt)("h6",{id:"assembly-servicestackdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L11"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class RulesetValidatorSelector : IValidatorSelector\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"-rulesets"},(0,l.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," RuleSets"),(0,l.kt)("p",null,"Rule sets"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L19"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string[] RuleSets { get; }\n")),(0,l.kt)("h2",{id:"fields"},"Fields"),(0,l.kt)("h3",{id:"-defaultrulesetname"},(0,l.kt)(n.JO,{icon:"codicon:symbol-field",className:"symbol-field",mdxType:"Icon"})," DefaultRuleSetName"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L13"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public const string DefaultRuleSetName = "default"\n')),(0,l.kt)("h3",{id:"-wildcardrulesetname"},(0,l.kt)(n.JO,{icon:"codicon:symbol-field",className:"symbol-field",mdxType:"Icon"})," WildcardRuleSetName"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L14"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public const string WildcardRuleSetName = "*"\n')),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"-canexecuteivalidationrule-string-ivalidationcontext"},(0,l.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CanExecute(IValidationRule, String, IValidationContext)"),(0,l.kt)("p",null,"Determines whether or not a rule should execute."),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L35"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public virtual bool CanExecute(IValidationRule rule, string propertyPath, IValidationContext context)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Boolean"),": Whether or not the validator can execute."),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationRule"},"ServiceStack.FluentValidation.IValidationRule")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"rule")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The rule")))),(0,l.kt)("p",null," |\n| ",(0,l.kt)("inlineCode",{parentName:"p"},"System.String")," | ",(0,l.kt)("em",{parentName:"p"},"propertyPath")," | Property path (eg Customer.Address.Line1)"),(0,l.kt)("p",null," |\n| ",(0,l.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation/IValidationContext"},"ServiceStack.FluentValidation.IValidationContext")," | ",(0,l.kt)("em",{parentName:"p"},"context")," | Contextual information"),(0,l.kt)("p",null," |"),(0,l.kt)("h3",{id:"-isincluderuleivalidationrule"},(0,l.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IsIncludeRule(IValidationRule)"),(0,l.kt)("p",null,"Checks if the rule is an IncludeRule"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RulesetValidatorSelector.cs#L82"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected bool IsIncludeRule(IValidationRule rule)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Boolean")),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidationRule"},"ServiceStack.FluentValidation.IValidationRule")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"rule"))))),(0,l.kt)("h2",{id:"implements"},"Implements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.FluentValidation.Internal/IValidatorSelector"},"ServiceStack.FluentValidation.Internal.IValidatorSelector"))))}m.isMDXComponent=!0}}]);