"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[56157],{53693:function(e,t,i){i.r(t),i.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return r},metadata:function(){return o},toc:function(){return p}});var a=i(83117),s=(i(67294),i(3905)),n=i(1954);const r={title:"Interface IHasResponseFilter",sidebar_label:"IHasResponseFilter",description:"This interface can be implemented by an attribute which adds an response filter for the specific response DTO the attribute marked."},c='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IHasResponseFilter',o={unversionedId:"api/ServiceStack.Web/IHasResponseFilter",id:"api/ServiceStack.Web/IHasResponseFilter",title:"Interface IHasResponseFilter",description:"This interface can be implemented by an attribute which adds an response filter for the specific response DTO the attribute marked.",source:"@site/docs/api/ServiceStack.Web/IHasResponseFilter.md",sourceDirName:"api/ServiceStack.Web",slug:"/api/ServiceStack.Web/IHasResponseFilter",permalink:"/api/ServiceStack.Web/IHasResponseFilter",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IHasResponseFilter",sidebar_label:"IHasResponseFilter",description:"This interface can be implemented by an attribute which adds an response filter for the specific response DTO the attribute marked."},sidebar:"apiSidebar",previous:{title:"IHasRequestFilterAsync",permalink:"/api/ServiceStack.Web/IHasRequestFilterAsync"},next:{title:"IHasResponseFilterAsync",permalink:"/api/ServiceStack.Web/IHasResponseFilterAsync"}},l={},p=[{value:"<strong>Assembly</strong>: ServiceStack.Interfaces.dll",id:"assembly-servicestackinterfacesdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ResponseFilter(IRequest, IResponse, Object)',id:"-responsefilterirequest-iresponse-object",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5}],d={toc:p};function m(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"-ihasresponsefilter"},(0,s.kt)(n.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IHasResponseFilter"),(0,s.kt)("p",null,"This interface can be implemented by an attribute\nwhich adds an response filter for the specific response DTO the attribute marked."),(0,s.kt)("h6",{id:"assembly-servicestackinterfacesdll"},(0,s.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Interfaces.dll"),(0,s.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,s.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Web/IHasResponseFilter.cs#L25"}," ",(0,s.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IHasResponseFilter : IResponseFilterBase\n")),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("h3",{id:"-responsefilterirequest-iresponse-object"},(0,s.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ResponseFilter(IRequest, IResponse, Object)"),(0,s.kt)("p",null,"The response filter is executed after the service"),(0,s.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,s.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Web/IHasResponseFilter.cs#L32"}," ",(0,s.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void ResponseFilter(IRequest req, IResponse res, object response)\n")),(0,s.kt)("h5",{id:"parameters"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("a",{parentName:"td",href:"../ServiceStack.Web/IRequest"},"ServiceStack.Web.IRequest")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("em",{parentName:"td"},"req")),(0,s.kt)("td",{parentName:"tr",align:"left"},"The http request wrapper")))),(0,s.kt)("p",null," |\n| ",(0,s.kt)("a",{parentName:"p",href:"../ServiceStack.Web/IResponse"},"ServiceStack.Web.IResponse")," | ",(0,s.kt)("em",{parentName:"p"},"res")," | The http response wrapper"),(0,s.kt)("p",null," |\n| ",(0,s.kt)("inlineCode",{parentName:"p"},"System.Object")," | ",(0,s.kt)("em",{parentName:"p"},"response")," |  |"))}m.isMDXComponent=!0}}]);