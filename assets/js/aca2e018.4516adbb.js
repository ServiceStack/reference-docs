"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[5779],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return u}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),o=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=o(r),u=n,k=s["".concat(c,".").concat(u)]||s[u]||d[u]||l;return r?a.createElement(k,p(p({ref:t},m),{},{components:r})):a.createElement(k,p({ref:t},m))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,p=new Array(l);p[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var o=2;o<l;o++)p[o]=r[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},2144:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return m},default:function(){return s}});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),p=["components"],i={title:"Interface SqlMapper.ITypeHandler",sidebar_label:"SqlMapper.ITypeHandler",description:"Implement this interface to perform custom type-based parameter handling and value parsing"},c="Interface SqlMapper.ITypeHandler",o={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeHandler",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeHandler",title:"Interface SqlMapper.ITypeHandler",description:"Implement this interface to perform custom type-based parameter handling and value parsing",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeHandler.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeHandler",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeHandler",tags:[],version:"current",frontMatter:{title:"Interface SqlMapper.ITypeHandler",sidebar_label:"SqlMapper.ITypeHandler",description:"Implement this interface to perform custom type-based parameter handling and value parsing"},sidebar:"apiSidebar",previous:{title:"SqlMapper.IParameterLookup",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.IParameterLookup"},next:{title:"SqlMapper.ITypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeMap"}},m=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"SetValue(IDbDataParameter, Object)",id:"setvalueidbdataparameter-object",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"Parse(Type, Object)",id:"parsetype-object",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3}],level:2}],d={toc:m};function s(e){var t=e.components,r=(0,n.Z)(e,p);return(0,l.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"interface-sqlmapperitypehandler"},"Interface SqlMapper.ITypeHandler"),(0,l.kt)("p",null,"Implement this interface to perform custom type-based parameter handling and value parsing"),(0,l.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.ITypeHandler.cs#L11"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface ITypeHandler\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"setvalueidbdataparameter-object"},"SetValue(IDbDataParameter, Object)"),(0,l.kt)("p",null,"Assign the value of a parameter before a command executes"),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.ITypeHandler.cs#L18"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void SetValue(IDbDataParameter parameter, object value)\n")),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Data.IDbDataParameter")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"parameter")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The parameter to configure")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Parameter value")))),(0,l.kt)("h3",{id:"parsetype-object"},"Parse(Type, Object)"),(0,l.kt)("p",null,"Parse a database value back to a typed value"),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.ITypeHandler.cs#L26"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"object Parse(Type destinationType, object value)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Object"),": The typed value"),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"destinationType")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The type to parse to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The value from the database")))))}s.isMDXComponent=!0}}]);