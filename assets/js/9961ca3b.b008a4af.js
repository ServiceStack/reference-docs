"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[35265],{88284:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var a=n(83117),i=(n(67294),n(3905)),r=n(1954);const l={title:"Class OrmLiteWriteExpressionsApiLegacy",sidebar_label:"OrmLiteWriteExpressionsApiLegacy"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> OrmLiteWriteExpressionsApiLegacy',c={unversionedId:"api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",id:"api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",title:"Class OrmLiteWriteExpressionsApiLegacy",description:"db.UpdateOnly(new Person { FirstName = &quot;JJ&quot; }, ev =&gt; ev.Update(p =&gt; p.FirstName).Where(x =&gt; x.FirstName == &quot;Jimi&quot;));",source:"@site/docs/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy.md",sourceDirName:"api/ServiceStack.OrmLite.Legacy",slug:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",permalink:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",draft:!1,tags:[],version:"current",frontMatter:{title:"Class OrmLiteWriteExpressionsApiLegacy",sidebar_label:"OrmLiteWriteExpressionsApiLegacy"},sidebar:"apiSidebar",previous:{title:"OrmLiteWriteExpressionsApiAsyncLegacy",permalink:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiAsyncLegacy"},next:{title:"ServiceStack.OrmLite.MySql",permalink:"/api/ServiceStack.OrmLite.MySql/"}},s={},m=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> InsertOnly&lt;T&gt;(IDbConnection, T, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)',id:"-insertonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> UpdateOnly&lt;T&gt;(IDbConnection, T, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)',id:"-updateonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> UpdateFmt&lt;T&gt;(IDbConnection, String, String)',id:"-updatefmttidbconnection-string-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> UpdateFmt(IDbConnection, String, String, String)',id:"-updatefmtidbconnection-string-string-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> DeleteFmt&lt;T&gt;(IDbConnection, String)',id:"-deletefmttidbconnection-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> DeleteFmt(IDbConnection, String, String)',id:"-deletefmtidbconnection-string-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Delete&lt;T&gt;(IDbConnection, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)',id:"-deletetidbconnection-funcsqlexpressiont-sqlexpressiont",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> InsertOnly&lt;T&gt;(IDbConnection, T, SqlExpression&lt;T&gt;)',id:"-insertonlytidbconnection-t-sqlexpressiont",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8",level:6},{value:"Parameters",id:"parameters-7",level:5},{value:"Type Parameters",id:"type-parameters-5",level:5}],d={toc:m};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-ormlitewriteexpressionsapilegacy"},(0,i.kt)(r.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," OrmLiteWriteExpressionsApiLegacy"),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L6"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class OrmLiteWriteExpressionsApiLegacy : object\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"-insertonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," InsertOnly","<","T",">","(IDbConnection, T, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,i.kt)("p",null,"Insert only fields in POCO specified by the SqlExpression lambda. E.g:\n","<","p",">","db.InsertOnly(new Person { FirstName = ",'"',"Amy",'"',", Age = 27 }, q =",">"," q.Insert(p =",">"," new { p.FirstName, p.Age }))","<","/p",">"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L12"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void InsertOnly<T>(this IDbConnection dbConn, T obj, Func<SqlExpression<T>, SqlExpression<T>> onlyFields)\n")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"obj"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"onlyFields"))))),(0,i.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-updateonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," UpdateOnly","<","T",">","(IDbConnection, T, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,i.kt)("p",null,"Use an SqlExpression to select which fields to update and construct the where expression, E.g: "),(0,i.kt)("p",null,"db.UpdateOnly(new Person { FirstName = ",'"',"JJ",'"'," }, ev =",">"," ev.Update(p =",">"," p.FirstName).Where(x =",">"," x.FirstName == ",'"',"Jimi",'"',"));\nUPDATE ",'"',"Person",'"'," SET ",'"',"FirstName",'"'," = ","'","JJ","'"," WHERE (",'"',"FirstName",'"'," = ","'","Jimi","'",")"),(0,i.kt)("p",null,"What","'","s not in the update expression doesn","'","t get updated. No where expression updates all rows. E.g:"),(0,i.kt)("p",null,"db.UpdateOnly(new Person { FirstName = ",'"',"JJ",'"',", LastName = ",'"',"Hendo",'"'," }, ev =",">"," ev.Update(p =",">"," p.FirstName));\nUPDATE ",'"',"Person",'"'," SET ",'"',"FirstName",'"'," = ","'","JJ","'"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L29"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int UpdateOnly<T>(this IDbConnection dbConn, T model, Func<SqlExpression<T>, SqlExpression<T>> onlyFields)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"model"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"onlyFields"))))),(0,i.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-updatefmttidbconnection-string-string"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," UpdateFmt","<","T",">","(IDbConnection, String, String)"),(0,i.kt)("p",null,"Flexible Update method to succinctly execute a free-text update statement using optional params. E.g:"),(0,i.kt)("p",null,"db.Update","<","Person",">","(set:",'"',"FirstName = {0}",'"',".Params(",'"',"JJ",'"',"), where:",'"',"LastName = {0}",'"',".Params(",'"',"Hendrix",'"',"));\nUPDATE ",'"',"Person",'"'," SET FirstName = ","'","JJ","'"," WHERE LastName = ","'","Hendrix","'"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L41"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int UpdateFmt<T>(this IDbConnection dbConn, string set = null, string where = null)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"set"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"where"))))),(0,i.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-updatefmtidbconnection-string-string-string"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," UpdateFmt(IDbConnection, String, String, String)"),(0,i.kt)("p",null,"Flexible Update method to succinctly execute a free-text update statement using optional params. E.g."),(0,i.kt)("p",null,"db.Update(table:",'"',"Person",'"',", set: ",'"',"FirstName = {0}",'"',".Params(",'"',"JJ",'"',"), where: ",'"',"LastName = {0}",'"',".Params(",'"',"Hendrix",'"',"));\nUPDATE ",'"',"Person",'"'," SET FirstName = ","'","JJ","'"," WHERE LastName = ","'","Hendrix","'"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L53"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int UpdateFmt(this IDbConnection dbConn, string table = null, string set = null, string where = null)\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"table"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"set"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"where"))))),(0,i.kt)("h3",{id:"-deletefmttidbconnection-string"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," DeleteFmt","<","T",">","(IDbConnection, String)"),(0,i.kt)("p",null,"Flexible Delete method to succinctly execute a delete statement using free-text where expression. E.g."),(0,i.kt)("p",null,"db.Delete","<","Person",">","(where:",'"',"Age = {0}",'"',".Params(27));\nDELETE FROM ",'"',"Person",'"'," WHERE Age = 27"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L65"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteFmt<T>(this IDbConnection dbConn, string where = null)\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"where"))))),(0,i.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-deletefmtidbconnection-string-string"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," DeleteFmt(IDbConnection, String, String)"),(0,i.kt)("p",null,"Flexible Delete method to succinctly execute a delete statement using free-text where expression. E.g."),(0,i.kt)("p",null,"db.Delete(table:",'"',"Person",'"',", where: ",'"',"Age = {0}",'"',".Params(27));\nDELETE FROM ",'"',"Person",'"'," WHERE Age = 27"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L77"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteFmt(this IDbConnection dbConn, string table = null, string where = null)\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"table"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"where"))))),(0,i.kt)("h3",{id:"-deletetidbconnection-funcsqlexpressiont-sqlexpressiont"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Delete","<","T",">","(IDbConnection, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,i.kt)("p",null,"Delete the rows that matches the where expression, e.g:"),(0,i.kt)("p",null,"db.Delete","<","Person",">","(ev =",">"," ev.Where(p =",">"," p.Age == 27));\nDELETE FROM ",'"',"Person",'"'," WHERE (",'"',"Age",'"'," = 27)"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L89"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, Func<SqlExpression<T>, SqlExpression<T>> where)\n")),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h5",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"where"))))),(0,i.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-insertonlytidbconnection-t-sqlexpressiont"},(0,i.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," InsertOnly","<","T",">","(IDbConnection, T, SqlExpression","<","T",">",")"),(0,i.kt)("p",null,"Using an SqlExpression to only Insert the fields specified, e.g:"),(0,i.kt)("p",null,"db.InsertOnly(new Person { FirstName = ",'"',"Amy",'"'," }, q =",">"," q.Insert(p =",">"," new { p.FirstName }));\nINSERT INTO ",'"',"Person",'"'," (",'"',"FirstName",'"',") VALUES (","'","Amy","'",");"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L101"}," ",(0,i.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void InsertOnly<T>(this IDbConnection dbConn, T obj, SqlExpression<T> onlyFields)\n")),(0,i.kt)("h5",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbConnection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"dbConn"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"obj"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/SqlExpression%60T%60"},"ServiceStack.OrmLite.SqlExpression","<","T",">")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"onlyFields"))))),(0,i.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))))}p.isMDXComponent=!0}}]);