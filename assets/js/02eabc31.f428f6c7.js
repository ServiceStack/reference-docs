"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[3295],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return p}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),c=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),k=c(a),p=r,N=k["".concat(m,".").concat(p)]||k[p]||s[p]||l;return a?n.createElement(N,i(i({ref:t},d),{},{components:a})):n.createElement(N,i({ref:t},d))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},49149:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return c}});var n=a(83117),r=(a(67294),a(3905));const l={title:"Class OrmLiteWriteApiAsync",sidebar_label:"OrmLiteWriteApiAsync"},i="Class OrmLiteWriteApiAsync",o={unversionedId:"api/ServiceStack.OrmLite/OrmLiteWriteApiAsync",id:"api/ServiceStack.OrmLite/OrmLiteWriteApiAsync",title:"Class OrmLiteWriteApiAsync",description:"Assembly: ServiceStack.OrmLite.dll",source:"@site/docs/api/ServiceStack.OrmLite/OrmLiteWriteApiAsync.md",sourceDirName:"api/ServiceStack.OrmLite",slug:"/api/ServiceStack.OrmLite/OrmLiteWriteApiAsync",permalink:"/api/ServiceStack.OrmLite/OrmLiteWriteApiAsync",draft:!1,tags:[],version:"current",frontMatter:{title:"Class OrmLiteWriteApiAsync",sidebar_label:"OrmLiteWriteApiAsync"},sidebar:"apiSidebar",previous:{title:"OrmLiteWriteApi",permalink:"/api/ServiceStack.OrmLite/OrmLiteWriteApi"},next:{title:"OrmLiteWriteCommandExtensions",permalink:"/api/ServiceStack.OrmLite/OrmLiteWriteCommandExtensions"}},m={},c=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Methods",id:"methods",level:2},{value:"ExecuteSqlAsync(IDbConnection, String, CancellationToken)",id:"executesqlasyncidbconnection-string-cancellationtoken",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"ExecuteSqlAsync(IDbConnection, String, Object, CancellationToken)",id:"executesqlasyncidbconnection-string-object-cancellationtoken",level:3},{value:"View Source",id:"view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, T, Boolean, Boolean, CancellationToken)",id:"insertasynctidbconnection-t-boolean-boolean-cancellationtoken",level:3},{value:"View Source",id:"view-source-3",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;, Boolean, Boolean, CancellationToken)",id:"insertasynctidbconnection-t-actionidbcommand-boolean-boolean-cancellationtoken",level:3},{value:"View Source",id:"view-source-4",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;, Boolean, CancellationToken)",id:"insertasynctidbconnection-dictionarystring-object-boolean-cancellationtoken",level:3},{value:"View Source",id:"view-source-5",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, Dictionary&lt;String, Object&gt;, Boolean, CancellationToken)",id:"insertasynctidbconnection-actionidbcommand-dictionarystring-object-boolean-cancellationtoken",level:3},{value:"View Source",id:"view-source-6",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, CancellationToken, T[])",id:"insertasynctidbconnection-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-7",level:6},{value:"Returns",id:"returns-6",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, T[])",id:"insertasynctidbconnection-t",level:3},{value:"View Source",id:"view-source-8",level:6},{value:"Returns",id:"returns-7",level:5},{value:"Parameters",id:"parameters-7",level:5},{value:"Type Parameters",id:"type-parameters-5",level:5},{value:"InsertAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, CancellationToken, T[])",id:"insertasynctidbconnection-actionidbcommand-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-9",level:6},{value:"Returns",id:"returns-8",level:5},{value:"Parameters",id:"parameters-8",level:5},{value:"Type Parameters",id:"type-parameters-6",level:5},{value:"InsertUsingDefaultsAsync&lt;T&gt;(IDbConnection, T[], CancellationToken)",id:"insertusingdefaultsasynctidbconnection-t-cancellationtoken",level:3},{value:"View Source",id:"view-source-10",level:6},{value:"Returns",id:"returns-9",level:5},{value:"Parameters",id:"parameters-9",level:5},{value:"Type Parameters",id:"type-parameters-7",level:5},{value:"InsertIntoSelectAsync&lt;T&gt;(IDbConnection, ISqlExpression, CancellationToken)",id:"insertintoselectasynctidbconnection-isqlexpression-cancellationtoken",level:3},{value:"View Source",id:"view-source-11",level:6},{value:"Returns",id:"returns-10",level:5},{value:"Parameters",id:"parameters-10",level:5},{value:"Type Parameters",id:"type-parameters-8",level:5},{value:"InsertIntoSelectAsync&lt;T&gt;(IDbConnection, ISqlExpression, Action&lt;IDbCommand&gt;, CancellationToken)",id:"insertintoselectasynctidbconnection-isqlexpression-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-12",level:6},{value:"Returns",id:"returns-11",level:5},{value:"Parameters",id:"parameters-11",level:5},{value:"Type Parameters",id:"type-parameters-9",level:5},{value:"InsertAllAsync&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, CancellationToken)",id:"insertallasynctidbconnection-ienumerablet-cancellationtoken",level:3},{value:"View Source",id:"view-source-13",level:6},{value:"Returns",id:"returns-12",level:5},{value:"Parameters",id:"parameters-12",level:5},{value:"Type Parameters",id:"type-parameters-10",level:5},{value:"InsertAllAsync&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, Action&lt;IDbCommand&gt;, CancellationToken)",id:"insertallasynctidbconnection-ienumerablet-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-14",level:6},{value:"Returns",id:"returns-13",level:5},{value:"Parameters",id:"parameters-13",level:5},{value:"Type Parameters",id:"type-parameters-11",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;, CancellationToken)",id:"updateasynctidbconnection-t-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-15",level:6},{value:"Returns",id:"returns-14",level:5},{value:"Parameters",id:"parameters-14",level:5},{value:"Type Parameters",id:"type-parameters-12",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;, Action&lt;IDbCommand&gt;, CancellationToken)",id:"updateasynctidbconnection-dictionarystring-object-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-16",level:6},{value:"Returns",id:"returns-15",level:5},{value:"Parameters",id:"parameters-15",level:5},{value:"Type Parameters",id:"type-parameters-13",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, CancellationToken, T[])",id:"updateasynctidbconnection-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-17",level:6},{value:"Returns",id:"returns-16",level:5},{value:"Parameters",id:"parameters-16",level:5},{value:"Type Parameters",id:"type-parameters-14",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, T[])",id:"updateasynctidbconnection-t",level:3},{value:"View Source",id:"view-source-18",level:6},{value:"Returns",id:"returns-17",level:5},{value:"Parameters",id:"parameters-17",level:5},{value:"Type Parameters",id:"type-parameters-15",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, CancellationToken, T[])",id:"updateasynctidbconnection-actionidbcommand-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-19",level:6},{value:"Returns",id:"returns-18",level:5},{value:"Parameters",id:"parameters-18",level:5},{value:"Type Parameters",id:"type-parameters-16",level:5},{value:"UpdateAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, T[])",id:"updateasynctidbconnection-actionidbcommand-t",level:3},{value:"View Source",id:"view-source-20",level:6},{value:"Returns",id:"returns-19",level:5},{value:"Parameters",id:"parameters-19",level:5},{value:"Type Parameters",id:"type-parameters-17",level:5},{value:"UpdateAllAsync&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, Action&lt;IDbCommand&gt;, CancellationToken)",id:"updateallasynctidbconnection-ienumerablet-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-21",level:6},{value:"Returns",id:"returns-20",level:5},{value:"Parameters",id:"parameters-20",level:5},{value:"Type Parameters",id:"type-parameters-18",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, Object, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deleteasynctidbconnection-object-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-22",level:6},{value:"Returns",id:"returns-21",level:5},{value:"Parameters",id:"parameters-21",level:5},{value:"Type Parameters",id:"type-parameters-19",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deleteasynctidbconnection-dictionarystring-object-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-23",level:6},{value:"Returns",id:"returns-22",level:5},{value:"Parameters",id:"parameters-22",level:5},{value:"Type Parameters",id:"type-parameters-20",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deleteasynctidbconnection-t-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-24",level:6},{value:"Returns",id:"returns-23",level:5},{value:"Parameters",id:"parameters-23",level:5},{value:"Type Parameters",id:"type-parameters-21",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, CancellationToken, T[])",id:"deleteasynctidbconnection-actionidbcommand-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-25",level:6},{value:"Returns",id:"returns-24",level:5},{value:"Parameters",id:"parameters-24",level:5},{value:"Type Parameters",id:"type-parameters-22",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, T[])",id:"deleteasynctidbconnection-actionidbcommand-t",level:3},{value:"View Source",id:"view-source-26",level:6},{value:"Returns",id:"returns-25",level:5},{value:"Parameters",id:"parameters-25",level:5},{value:"Type Parameters",id:"type-parameters-23",level:5},{value:"DeleteNonDefaultsAsync&lt;T&gt;(IDbConnection, T, CancellationToken)",id:"deletenondefaultsasynctidbconnection-t-cancellationtoken",level:3},{value:"View Source",id:"view-source-27",level:6},{value:"Returns",id:"returns-26",level:5},{value:"Parameters",id:"parameters-26",level:5},{value:"Type Parameters",id:"type-parameters-24",level:5},{value:"DeleteNonDefaultsAsync&lt;T&gt;(IDbConnection, CancellationToken, T[])",id:"deletenondefaultsasynctidbconnection-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-28",level:6},{value:"Returns",id:"returns-27",level:5},{value:"Parameters",id:"parameters-27",level:5},{value:"Type Parameters",id:"type-parameters-25",level:5},{value:"DeleteNonDefaultsAsync&lt;T&gt;(IDbConnection, T[])",id:"deletenondefaultsasynctidbconnection-t",level:3},{value:"View Source",id:"view-source-29",level:6},{value:"Returns",id:"returns-28",level:5},{value:"Parameters",id:"parameters-28",level:5},{value:"Type Parameters",id:"type-parameters-26",level:5},{value:"DeleteByIdAsync&lt;T&gt;(IDbConnection, Object, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deletebyidasynctidbconnection-object-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-30",level:6},{value:"Returns",id:"returns-29",level:5},{value:"Parameters",id:"parameters-29",level:5},{value:"Type Parameters",id:"type-parameters-27",level:5},{value:"DeleteByIdAsync&lt;T&gt;(IDbConnection, Object, UInt64, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deletebyidasynctidbconnection-object-uint64-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-31",level:6},{value:"Returns",id:"returns-30",level:5},{value:"Parameters",id:"parameters-30",level:5},{value:"Type Parameters",id:"type-parameters-28",level:5},{value:"DeleteByIdsAsync&lt;T&gt;(IDbConnection, IEnumerable, Action&lt;IDbCommand&gt;, CancellationToken)",id:"deletebyidsasynctidbconnection-ienumerable-actionidbcommand-cancellationtoken",level:3},{value:"View Source",id:"view-source-32",level:6},{value:"Returns",id:"returns-31",level:5},{value:"Parameters",id:"parameters-31",level:5},{value:"Type Parameters",id:"type-parameters-29",level:5},{value:"DeleteAllAsync&lt;T&gt;(IDbConnection, CancellationToken)",id:"deleteallasynctidbconnection-cancellationtoken",level:3},{value:"View Source",id:"view-source-33",level:6},{value:"Returns",id:"returns-32",level:5},{value:"Parameters",id:"parameters-32",level:5},{value:"Type Parameters",id:"type-parameters-30",level:5},{value:"DeleteAllAsync(IDbConnection, Type, CancellationToken)",id:"deleteallasyncidbconnection-type-cancellationtoken",level:3},{value:"View Source",id:"view-source-34",level:6},{value:"Returns",id:"returns-33",level:5},{value:"Parameters",id:"parameters-33",level:5},{value:"DeleteAsync&lt;T&gt;(IDbConnection, String, Object, CancellationToken)",id:"deleteasynctidbconnection-string-object-cancellationtoken",level:3},{value:"View Source",id:"view-source-35",level:6},{value:"Returns",id:"returns-34",level:5},{value:"Parameters",id:"parameters-34",level:5},{value:"Type Parameters",id:"type-parameters-31",level:5},{value:"DeleteAsync(IDbConnection, Type, String, Object, CancellationToken)",id:"deleteasyncidbconnection-type-string-object-cancellationtoken",level:3},{value:"View Source",id:"view-source-36",level:6},{value:"Returns",id:"returns-35",level:5},{value:"Parameters",id:"parameters-35",level:5},{value:"SaveAsync&lt;T&gt;(IDbConnection, T, Boolean, CancellationToken)",id:"saveasynctidbconnection-t-boolean-cancellationtoken",level:3},{value:"View Source",id:"view-source-37",level:6},{value:"Returns",id:"returns-36",level:5},{value:"Parameters",id:"parameters-36",level:5},{value:"Type Parameters",id:"type-parameters-32",level:5},{value:"SaveAsync&lt;T&gt;(IDbConnection, CancellationToken, T[])",id:"saveasynctidbconnection-cancellationtoken-t",level:3},{value:"View Source",id:"view-source-38",level:6},{value:"Returns",id:"returns-37",level:5},{value:"Parameters",id:"parameters-37",level:5},{value:"Type Parameters",id:"type-parameters-33",level:5},{value:"SaveAsync&lt;T&gt;(IDbConnection, T[])",id:"saveasynctidbconnection-t",level:3},{value:"View Source",id:"view-source-39",level:6},{value:"Returns",id:"returns-38",level:5},{value:"Parameters",id:"parameters-38",level:5},{value:"Type Parameters",id:"type-parameters-34",level:5},{value:"SaveAllAsync&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, CancellationToken)",id:"saveallasynctidbconnection-ienumerablet-cancellationtoken",level:3},{value:"View Source",id:"view-source-40",level:6},{value:"Returns",id:"returns-39",level:5},{value:"Parameters",id:"parameters-39",level:5},{value:"Type Parameters",id:"type-parameters-35",level:5},{value:"SaveAllReferencesAsync&lt;T&gt;(IDbConnection, T, CancellationToken)",id:"saveallreferencesasynctidbconnection-t-cancellationtoken",level:3},{value:"View Source",id:"view-source-41",level:6},{value:"Returns",id:"returns-40",level:5},{value:"Parameters",id:"parameters-40",level:5},{value:"Type Parameters",id:"type-parameters-36",level:5},{value:"SaveReferencesAsync&lt;T, TRef&gt;(IDbConnection, CancellationToken, T, TRef[])",id:"savereferencesasynct-trefidbconnection-cancellationtoken-t-tref",level:3},{value:"View Source",id:"view-source-42",level:6},{value:"Returns",id:"returns-41",level:5},{value:"Parameters",id:"parameters-41",level:5},{value:"Type Parameters",id:"type-parameters-37",level:5},{value:"SaveReferencesAsync&lt;T, TRef&gt;(IDbConnection, T, TRef[])",id:"savereferencesasynct-trefidbconnection-t-tref",level:3},{value:"View Source",id:"view-source-43",level:6},{value:"Returns",id:"returns-42",level:5},{value:"Parameters",id:"parameters-42",level:5},{value:"Type Parameters",id:"type-parameters-38",level:5},{value:"SaveReferencesAsync&lt;T, TRef&gt;(IDbConnection, T, List&lt;TRef&gt;, CancellationToken)",id:"savereferencesasynct-trefidbconnection-t-listtref-cancellationtoken",level:3},{value:"View Source",id:"view-source-44",level:6},{value:"Returns",id:"returns-43",level:5},{value:"Parameters",id:"parameters-43",level:5},{value:"Type Parameters",id:"type-parameters-39",level:5},{value:"SaveReferencesAsync&lt;T, TRef&gt;(IDbConnection, T, IEnumerable&lt;TRef&gt;, CancellationToken)",id:"savereferencesasynct-trefidbconnection-t-ienumerabletref-cancellationtoken",level:3},{value:"View Source",id:"view-source-45",level:6},{value:"Returns",id:"returns-44",level:5},{value:"Parameters",id:"parameters-44",level:5},{value:"Type Parameters",id:"type-parameters-40",level:5},{value:"GetRowVersionAsync&lt;T&gt;(IDbConnection, Object, CancellationToken)",id:"getrowversionasynctidbconnection-object-cancellationtoken",level:3},{value:"View Source",id:"view-source-46",level:6},{value:"Returns",id:"returns-45",level:5},{value:"Parameters",id:"parameters-45",level:5},{value:"Type Parameters",id:"type-parameters-41",level:5},{value:"GetRowVersionAsync(IDbConnection, Type, Object, CancellationToken)",id:"getrowversionasyncidbconnection-type-object-cancellationtoken",level:3},{value:"View Source",id:"view-source-47",level:6},{value:"Returns",id:"returns-46",level:5},{value:"Parameters",id:"parameters-46",level:5},{value:"ExecuteProcedureAsync&lt;T&gt;(IDbConnection, T, CancellationToken)",id:"executeprocedureasynctidbconnection-t-cancellationtoken",level:3},{value:"View Source",id:"view-source-48",level:6},{value:"Returns",id:"returns-47",level:5},{value:"Parameters",id:"parameters-47",level:5},{value:"Type Parameters",id:"type-parameters-42",level:5}],d={toc:c};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"class-ormlitewriteapiasync"},"Class OrmLiteWriteApiAsync"),(0,r.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,r.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,r.kt)("h6",{id:"view-source"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L17"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class OrmLiteWriteApiAsync\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"executesqlasyncidbconnection-string-cancellationtoken"},"ExecuteSqlAsync(IDbConnection, String, CancellationToken)"),(0,r.kt)("p",null,"Execute any arbitrary raw SQL."),(0,r.kt)("h6",{id:"view-source-1"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L23"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> ExecuteSqlAsync(this IDbConnection dbConn, string sql, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows affected"),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sql"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h3",{id:"executesqlasyncidbconnection-string-object-cancellationtoken"},"ExecuteSqlAsync(IDbConnection, String, Object, CancellationToken)"),(0,r.kt)("p",null,"Execute any arbitrary raw SQL with db params."),(0,r.kt)("h6",{id:"view-source-2"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L32"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> ExecuteSqlAsync(this IDbConnection dbConn, string sql, object dbParams, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows affected"),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sql"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbParams"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h3",{id:"insertasynctidbconnection-t-boolean-boolean-cancellationtoken"},"InsertAsync","<","T",">","(IDbConnection, T, Boolean, Boolean, CancellationToken)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Person { Id = 1, FirstName = ",'"',"Jimi }, selectIdentity:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-3"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L41"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertAsync<T>(this IDbConnection dbConn, T obj, bool selectIdentity = false, bool enableIdentityInsert = false, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"enableIdentityInsert"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-t-actionidbcommand-boolean-boolean-cancellationtoken"},"InsertAsync","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",", Boolean, Boolean, CancellationToken)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Person { Id = 1, FirstName = ",'"',"Jimi }, selectIdentity:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-4"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L51"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertAsync<T>(this IDbConnection dbConn, T obj, Action<IDbCommand> commandFilter, bool selectIdentity = false, bool enableIdentityInsert = false, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"enableIdentityInsert"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-dictionarystring-object-boolean-cancellationtoken"},"InsertAsync","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",", Boolean, CancellationToken)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi }, selectIdentity:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-5"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L60"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertAsync<T>(this IDbConnection dbConn, Dictionary<string, object> obj, bool selectIdentity = false, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-actionidbcommand-dictionarystring-object-boolean-cancellationtoken"},"InsertAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", Dictionary","<","String, Object",">",", Boolean, CancellationToken)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi }, dbCmd =",">"," applyFilter(dbCmd))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-6"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L69"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, Dictionary<string, object> obj, bool selectIdentity = false, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-cancellationtoken-t"},"InsertAsync","<","T",">","(IDbConnection, CancellationToken, T[])"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.InsertAsync(new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","               new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-7"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L80"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertAsync<T>(this IDbConnection dbConn, CancellationToken token, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-t"},"InsertAsync","<","T",">","(IDbConnection, T[])"),(0,r.kt)("h6",{id:"view-source-8"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L84"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertAsync<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertasynctidbconnection-actionidbcommand-cancellationtoken-t"},"InsertAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", CancellationToken, T[])"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction and modify populated IDbCommand with a commandFilter. E.g:\n","<","p",">","db.InsertAsync(dbCmd =",">"," applyFilter(dbCmd), token, ","<","/p",">","\n","<","p",">","               new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","               new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-9"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L95"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, CancellationToken token, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-6"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertusingdefaultsasynctidbconnection-t-cancellationtoken"},"InsertUsingDefaultsAsync","<","T",">","(IDbConnection, T[], CancellationToken)"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction using Table default values when defined. E.g:\n","<","p",">","db.InsertUsingDefaultsAsync(new Person { FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"'," },","<","/p",">","\n","<","p",">","                            new Person { FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"'," })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-10"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L105"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertUsingDefaultsAsync<T>(this IDbConnection dbConn, T[] objs, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-7"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertintoselectasynctidbconnection-isqlexpression-cancellationtoken"},"InsertIntoSelectAsync","<","T",">","(IDbConnection, ISqlExpression, CancellationToken)"),(0,r.kt)("p",null,"Insert results from SELECT SqlExpression, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","db.InsertIntoSelectAsync","<","Contact",">","(db.From","<","Person",">","().Select(x =",">"," new { x.Id, Surname == x.LastName }))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-11"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L114"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertIntoSelectAsync<T>(this IDbConnection dbConn, ISqlExpression query, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/ISqlExpression"},"ServiceStack.OrmLite.ISqlExpression")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"query"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-8"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertintoselectasynctidbconnection-isqlexpression-actionidbcommand-cancellationtoken"},"InsertIntoSelectAsync","<","T",">","(IDbConnection, ISqlExpression, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Insert results from SELECT SqlExpression, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","db.InsertIntoSelectAsync","<","Contact",">","(db.From","<","Person",">","().Select(x =",">"," new { x.Id, Surname == x.LastName }))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-12"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L123"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<long> InsertIntoSelectAsync<T>(this IDbConnection dbConn, ISqlExpression query, Action<IDbCommand> commandFilter, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int64>")),(0,r.kt)("h5",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/ISqlExpression"},"ServiceStack.OrmLite.ISqlExpression")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"query"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-9"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertallasynctidbconnection-ienumerablet-cancellationtoken"},"InsertAllAsync","<","T",">","(IDbConnection, IEnumerable","<","T",">",", CancellationToken)"),(0,r.kt)("p",null,"Insert a collection of POCOs in a transaction. E.g:\n","<","p",">","db.InsertAllAsync(new[] { new Person { Id = 9, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-13"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L133"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertAllAsync<T>(this IDbConnection dbConn, IEnumerable<T> objs, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-10"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertallasynctidbconnection-ienumerablet-actionidbcommand-cancellationtoken"},"InsertAllAsync","<","T",">","(IDbConnection, IEnumerable","<","T",">",", Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Insert a collection of POCOs in a transaction and modify populated IDbCommand with a commandFilter. E.g:\n","<","p",">","db.InsertAllAsync(new[] { new Person { Id = 9, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 } },","<","/p",">","\n","<","p",">","                  dbCmd =",">"," applyFilter(dbCmd))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-14"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L143"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task InsertAllAsync<T>(this IDbConnection dbConn, IEnumerable<T> objs, Action<IDbCommand> commandFilter, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-11"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-t-actionidbcommand-cancellationtoken"},"UpdateAsync","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Updates 1 POCO. All fields are updated except for the PrimaryKey which is used as the identity selector. E.g:\n","<","p",">","db.Update(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-15"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L152"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, T obj, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-12"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-dictionarystring-object-actionidbcommand-cancellationtoken"},"UpdateAsync","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",", Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Updates 1 POCO. All fields are updated except for the PrimaryKey which is used as the identity selector. E.g:\n","<","p",">","db.Update(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi",'"',", ",'["',"Age",'"]'," = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-16"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L161"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, Dictionary<string, object> obj, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-13"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-cancellationtoken-t"},"UpdateAsync","<","T",">","(IDbConnection, CancellationToken, T[])"),(0,r.kt)("p",null,"Updates 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.Update(new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-17"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L171"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, CancellationToken token, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-14"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-t"},"UpdateAsync","<","T",">","(IDbConnection, T[])"),(0,r.kt)("h6",{id:"view-source-18"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L175"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-15"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-actionidbcommand-cancellationtoken-t"},"UpdateAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", CancellationToken, T[])"),(0,r.kt)("h6",{id:"view-source-19"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L179"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, CancellationToken token, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-16"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateasynctidbconnection-actionidbcommand-t"},"UpdateAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", T[])"),(0,r.kt)("h6",{id:"view-source-20"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L183"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-17"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updateallasynctidbconnection-ienumerablet-actionidbcommand-cancellationtoken"},"UpdateAllAsync","<","T",">","(IDbConnection, IEnumerable","<","T",">",", Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Updates 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.UpdateAllAsync(new[] { new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-21"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L192"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> UpdateAllAsync<T>(this IDbConnection dbConn, IEnumerable<T> objs, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-18"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-object-actionidbcommand-cancellationtoken"},"DeleteAsync","<","T",">","(IDbConnection, Object, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete rows using an anonymous type filter. E.g:\n","<","p",">","db.DeleteAsync","<","Person",">","(new { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-22"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L202"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, object anonFilter, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-19"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-dictionarystring-object-actionidbcommand-cancellationtoken"},"DeleteAsync","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",", Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete rows using an Object Dictionary filters. E.g:\n","<","p",">","db.DeleteAsync","<","Person",">","(new Dictionary","<","string,object",">"," { ",'["',"FirstName",'"]'," = ",'"',"Jimi",'"',", ",'["',"Age",'"]'," = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-23"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L213"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, Dictionary<string, object> filters, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"filters"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-20"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-t-actionidbcommand-cancellationtoken"},"DeleteAsync","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete 1 row using all fields in the commandFilter. E.g:\n","<","p",">","db.DeleteAsync(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-24"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L224"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, T allFieldsFilter, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"allFieldsFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-21"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-actionidbcommand-cancellationtoken-t"},"DeleteAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", CancellationToken, T[])"),(0,r.kt)("p",null,"Delete 1 or more rows in a transaction using all fields in the commandFilter. E.g:\n","<","p",">","db.DeleteAsync(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-25"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L234"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken), params T[] allFieldsFilters)\n")),(0,r.kt)("h5",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"allFieldsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-22"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-actionidbcommand-t"},"DeleteAsync","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", T[])"),(0,r.kt)("h6",{id:"view-source-26"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L239"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter = null, params T[] allFieldsFilters)\n")),(0,r.kt)("h5",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"allFieldsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-23"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletenondefaultsasynctidbconnection-t-cancellationtoken"},"DeleteNonDefaultsAsync","<","T",">","(IDbConnection, T, CancellationToken)"),(0,r.kt)("p",null,"Delete 1 or more rows using only field with non-default values in the commandFilter. E.g:\n","<","p",">","db.DeleteNonDefaultsAsync(new Person { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-27"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L250"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteNonDefaultsAsync<T>(this IDbConnection dbConn, T nonDefaultsFilter, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"nonDefaultsFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-24"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletenondefaultsasynctidbconnection-cancellationtoken-t"},"DeleteNonDefaultsAsync","<","T",">","(IDbConnection, CancellationToken, T[])"),(0,r.kt)("p",null,"Delete 1 or more rows in a transaction using only field with non-default values in the commandFilter. E.g:\n","<","p",">","db.DeleteNonDefaultsAsync(new Person { FirstName = ",'"',"Jimi",'"',", Age = 27 },\nnew Person { FirstName = ",'"',"Janis",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-28"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L261"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteNonDefaultsAsync<T>(this IDbConnection dbConn, CancellationToken token, params T[] nonDefaultsFilters)\n")),(0,r.kt)("h5",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"nonDefaultsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-25"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletenondefaultsasynctidbconnection-t"},"DeleteNonDefaultsAsync","<","T",">","(IDbConnection, T[])"),(0,r.kt)("h6",{id:"view-source-29"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L265"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteNonDefaultsAsync<T>(this IDbConnection dbConn, params T[] nonDefaultsFilters)\n")),(0,r.kt)("h5",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"nonDefaultsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-26"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidasynctidbconnection-object-actionidbcommand-cancellationtoken"},"DeleteByIdAsync","<","T",">","(IDbConnection, Object, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete 1 row by the PrimaryKey. E.g:\n","<","p",">","db.DeleteByIdAsync","<","Person",">","(1)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-30"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L275"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteByIdAsync<T>(this IDbConnection dbConn, object id, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-27"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidasynctidbconnection-object-uint64-actionidbcommand-cancellationtoken"},"DeleteByIdAsync","<","T",">","(IDbConnection, Object, UInt64, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete 1 row by the PrimaryKey where the rowVersion matches the optimistic concurrency field.\nWill throw ","<",'exception cref="!:OptimisticConcurrencyException"',">","RowModifiedException","<","/exception",">"," if the\nrow does not exist or has a different row version.\nE.g: ","<","p",">","db.DeleteByIdAsync","<","Person",">","(1)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-31"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L287"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task DeleteByIdAsync<T>(this IDbConnection dbConn, object id, ulong rowVersion, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.UInt64")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"rowVersion"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-28"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidsasynctidbconnection-ienumerable-actionidbcommand-cancellationtoken"},"DeleteByIdsAsync","<","T",">","(IDbConnection, IEnumerable, Action","<","IDbCommand",">",", CancellationToken)"),(0,r.kt)("p",null,"Delete all rows identified by the PrimaryKeys. E.g:\n","<","p",">","db.DeleteByIdsAsync","<","Person",">","(new[] { 1, 2, 3 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-32"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L298"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteByIdsAsync<T>(this IDbConnection dbConn, IEnumerable idValues, Action<IDbCommand> commandFilter = null, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.IEnumerable")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"idValues"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-29"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteallasynctidbconnection-cancellationtoken"},"DeleteAllAsync","<","T",">","(IDbConnection, CancellationToken)"),(0,r.kt)("p",null,"Delete all rows in the generic table type. E.g:\n","<","p",">","db.DeleteAllAsync","<","Person",">","()","<","/p",">"),(0,r.kt)("h6",{id:"view-source-33"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L309"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAllAsync<T>(this IDbConnection dbConn, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-30"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteallasyncidbconnection-type-cancellationtoken"},"DeleteAllAsync(IDbConnection, Type, CancellationToken)"),(0,r.kt)("p",null,"Delete all rows in the runtime table type. E.g:\n","<","p",">","db.DeleteAllAsync(typeof(Person))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-34"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L319"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAllAsync(this IDbConnection dbConn, Type tableType, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-33"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"tableType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h3",{id:"deleteasynctidbconnection-string-object-cancellationtoken"},"DeleteAsync","<","T",">","(IDbConnection, String, Object, CancellationToken)"),(0,r.kt)("p",null,"Delete rows using sqlfilter, e.g:\n","<","p",">","db.DeleteAsync","<","Person",">","(",'"',"FirstName = @FirstName AND Age = @Age",'"',", new { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-35"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L328"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync<T>(this IDbConnection dbConn, string sqlFilter, object anonType, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-34"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sqlFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-31"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteasyncidbconnection-type-string-object-cancellationtoken"},"DeleteAsync(IDbConnection, Type, String, Object, CancellationToken)"),(0,r.kt)("p",null,"Delete rows using sqlfilter and Runtime Type, e.g:\n","<","p",">","db.DeleteAsync(typeof(Person), ",'"',"FirstName = @FirstName AND Age = @Age",'"',", new { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-36"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L337"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> DeleteAsync(this IDbConnection dbConn, Type tableType, string sqlFilter, object anonType, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-35"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"tableType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sqlFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h3",{id:"saveasynctidbconnection-t-boolean-cancellationtoken"},"SaveAsync","<","T",">","(IDbConnection, T, Boolean, CancellationToken)"),(0,r.kt)("p",null,"Insert a new row or update existing row. Returns true if a new row was inserted.\nOptional references param decides whether to save all related references as well. E.g:\n","<","p",">","db.SaveAsync(customer, references:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-37"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L348"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static async Task<bool> SaveAsync<T>(this IDbConnection dbConn, T obj, bool references = false, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Boolean>"),": true if a row was inserted; false if it was updated"),(0,r.kt)("h5",{id:"parameters-36"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"references"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-32"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"saveasynctidbconnection-cancellationtoken-t"},"SaveAsync","<","T",">","(IDbConnection, CancellationToken, T[])"),(0,r.kt)("p",null,"Insert new rows or update existing rows. Return number of rows added E.g:\n","<","p",">","db.SaveAsync(new Person { Id = 10, FirstName = ",'"',"Amy",'"',", LastName = ",'"',"Winehouse",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-38"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L371"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> SaveAsync<T>(this IDbConnection dbConn, CancellationToken token, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows added"),(0,r.kt)("h5",{id:"parameters-37"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-33"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"saveasynctidbconnection-t"},"SaveAsync","<","T",">","(IDbConnection, T[])"),(0,r.kt)("h6",{id:"view-source-39"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L375"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> SaveAsync<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-38"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>")),(0,r.kt)("h5",{id:"parameters-38"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-34"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"saveallasynctidbconnection-ienumerablet-cancellationtoken"},"SaveAllAsync","<","T",">","(IDbConnection, IEnumerable","<","T",">",", CancellationToken)"),(0,r.kt)("p",null,"Insert new rows or update existing rows. Return number of rows added E.g:\n","<","p",">","db.SaveAllAsync(new [] { new Person { Id = 10, FirstName = ",'"',"Amy",'"',", LastName = ",'"',"Winehouse",'"',", Age = 27 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-40"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L385"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<int> SaveAllAsync<T>(this IDbConnection dbConn, IEnumerable<T> objs, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-39"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Int32>"),": number of rows added"),(0,r.kt)("h5",{id:"parameters-39"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-35"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"saveallreferencesasynctidbconnection-t-cancellationtoken"},"SaveAllReferencesAsync","<","T",">","(IDbConnection, T, CancellationToken)"),(0,r.kt)("p",null,"Populates all related references on the instance with its primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveAllReferences(customer)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-41"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L394"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task SaveAllReferencesAsync<T>(this IDbConnection dbConn, T instance, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-40"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-40"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-36"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"savereferencesasynct-trefidbconnection-cancellationtoken-t-tref"},"SaveReferencesAsync","<","T, TRef",">","(IDbConnection, CancellationToken, T, TRef[])"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReference(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-42"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L403"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task SaveReferencesAsync<T, TRef>(this IDbConnection dbConn, CancellationToken token, T instance, params TRef[] refs)\n")),(0,r.kt)("h5",{id:"returns-41"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-41"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<TRef>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))))),(0,r.kt)("h5",{id:"type-parameters-37"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"savereferencesasynct-trefidbconnection-t-tref"},"SaveReferencesAsync","<","T, TRef",">","(IDbConnection, T, TRef[])"),(0,r.kt)("h6",{id:"view-source-43"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L407"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task SaveReferencesAsync<T, TRef>(this IDbConnection dbConn, T instance, params TRef[] refs)\n")),(0,r.kt)("h5",{id:"returns-42"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-42"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<TRef>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))))),(0,r.kt)("h5",{id:"type-parameters-38"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"savereferencesasynct-trefidbconnection-t-listtref-cancellationtoken"},"SaveReferencesAsync","<","T, TRef",">","(IDbConnection, T, List","<","TRef",">",", CancellationToken)"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReference(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-44"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L416"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task SaveReferencesAsync<T, TRef>(this IDbConnection dbConn, T instance, List<TRef> refs, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-43"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-43"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.List<<TRef>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-39"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"savereferencesasynct-trefidbconnection-t-ienumerabletref-cancellationtoken"},"SaveReferencesAsync","<","T, TRef",">","(IDbConnection, T, IEnumerable","<","TRef",">",", CancellationToken)"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReferences(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-45"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L425"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task SaveReferencesAsync<T, TRef>(this IDbConnection dbConn, T instance, IEnumerable<TRef> refs, CancellationToken token)\n")),(0,r.kt)("h5",{id:"returns-44"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-44"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<TRef>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-40"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"getrowversionasynctidbconnection-object-cancellationtoken"},"GetRowVersionAsync","<","T",">","(IDbConnection, Object, CancellationToken)"),(0,r.kt)("h6",{id:"view-source-46"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L430"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<object> GetRowVersionAsync<T>(this IDbConnection dbConn, object id, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-45"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Object>")),(0,r.kt)("h5",{id:"parameters-45"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-41"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"getrowversionasyncidbconnection-type-object-cancellationtoken"},"GetRowVersionAsync(IDbConnection, Type, Object, CancellationToken)"),(0,r.kt)("h6",{id:"view-source-47"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L435"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task<object> GetRowVersionAsync(this IDbConnection dbConn, Type modelType, object id, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-46"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<System.Object>")),(0,r.kt)("h5",{id:"parameters-46"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"modelType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h3",{id:"executeprocedureasynctidbconnection-t-cancellationtoken"},"ExecuteProcedureAsync","<","T",">","(IDbConnection, T, CancellationToken)"),(0,r.kt)("h6",{id:"view-source-48"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApiAsync.cs#L441"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Task ExecuteProcedureAsync<T>(this IDbConnection dbConn, T obj, CancellationToken token = default(CancellationToken))\n")),(0,r.kt)("h5",{id:"returns-47"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,r.kt)("h5",{id:"parameters-47"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Threading.CancellationToken")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"token"))))),(0,r.kt)("h5",{id:"type-parameters-42"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))))}s.isMDXComponent=!0}}]);