"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[35088],{61038:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return s}});var i=a(83117),o=(a(67294),a(3905)),n=a(1954);const r={title:"Class AutoMapping",sidebar_label:"AutoMapping",description:"Customize ServiceStack AutoMapping Behavior"},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> AutoMapping',l={unversionedId:"api/ServiceStack/AutoMapping",id:"api/ServiceStack/AutoMapping",title:"Class AutoMapping",description:"Customize ServiceStack AutoMapping Behavior",source:"@site/docs/api/ServiceStack/AutoMapping.md",sourceDirName:"api/ServiceStack",slug:"/api/ServiceStack/AutoMapping",permalink:"/api/ServiceStack/AutoMapping",draft:!1,tags:[],version:"current",frontMatter:{title:"Class AutoMapping",sidebar_label:"AutoMapping",description:"Customize ServiceStack AutoMapping Behavior"},sidebar:"apiSidebar",previous:{title:"AutoMapAttribute",permalink:"/api/ServiceStack/AutoMapAttribute"},next:{title:"AutoMappingUtils",permalink:"/api/ServiceStack/AutoMappingUtils"}},p={},s=[{value:"<strong>Assembly</strong>: ServiceStack.Text.dll",id:"assembly-servicestacktextdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> RegisterConverter&lt;From, To&gt;(Func&lt;From, To&gt;)',id:"-registerconverterfrom-tofuncfrom-to",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IgnoreMapping&lt;From, To&gt;()',id:"-ignoremappingfrom-to",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IgnoreMapping(Type, Type)',id:"-ignoremappingtype-type",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> RegisterPopulator&lt;Target, Source&gt;(Action&lt;Target, Source&gt;)',id:"-registerpopulatortarget-sourceactiontarget-source",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5}],m={toc:s};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-automapping"},(0,o.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," AutoMapping"),(0,o.kt)("p",null,"Customize ServiceStack AutoMapping Behavior"),(0,o.kt)("h6",{id:"assembly-servicestacktextdll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Text.dll"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/AutoMappingUtils.cs#L23"}," ",(0,o.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class AutoMapping\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"-registerconverterfrom-tofuncfrom-to"},(0,o.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," RegisterConverter","<","From, To",">","(Func","<","From, To",">",")"),(0,o.kt)("p",null,"Register Type to Type AutoMapping converter"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/AutoMappingUtils.cs#L28"}," ",(0,o.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void RegisterConverter<From, To>(Func<From, To> converter)\n")),(0,o.kt)("h5",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Func<<From>,<To>>")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"converter"))))),(0,o.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"From")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"To"))),(0,o.kt)("h3",{id:"-ignoremappingfrom-to"},(0,o.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IgnoreMapping","<","From, To",">","()"),(0,o.kt)("p",null,"Ignore Type to Type Mapping (including collections containing them)"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/AutoMappingUtils.cs#L37"}," ",(0,o.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void IgnoreMapping<From, To>()\n")),(0,o.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"From")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"To"))),(0,o.kt)("h3",{id:"-ignoremappingtype-type"},(0,o.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IgnoreMapping(Type, Type)"),(0,o.kt)("p",null,"Ignore Type to Type Mapping (including collections containing them)"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/AutoMappingUtils.cs#L42"}," ",(0,o.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void IgnoreMapping(Type fromType, Type toType)\n")),(0,o.kt)("h5",{id:"parameters-1"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"fromType"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"toType"))))),(0,o.kt)("h3",{id:"-registerpopulatortarget-sourceactiontarget-source"},(0,o.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," RegisterPopulator","<","Target, Source",">","(Action","<","Target, Source",">",")"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/AutoMappingUtils.cs#L48"}," ",(0,o.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void RegisterPopulator<Target, Source>(Action<Target, Source> populator)\n")),(0,o.kt)("h5",{id:"parameters-2"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"System.Action<<Target>,<Source>>")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"populator"))))),(0,o.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Target")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Source"))))}u.isMDXComponent=!0}}]);