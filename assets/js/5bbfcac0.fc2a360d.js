"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[9885],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,k=m["".concat(o,".").concat(d)]||m[d]||u[d]||i;return r?a.createElement(k,l(l({ref:t},p),{},{components:r})):a.createElement(k,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var c=2;c<i;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7445:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),l=["components"],s={title:"Class PredicateBuilder",sidebar_label:"PredicateBuilder",description:"Enables the efficient, dynamic composition of query predicates."},o="Class PredicateBuilder",c={unversionedId:"api/ServiceStack.OrmLite/PredicateBuilder",id:"api/ServiceStack.OrmLite/PredicateBuilder",title:"Class PredicateBuilder",description:"Enables the efficient, dynamic composition of query predicates.",source:"@site/docs/api/ServiceStack.OrmLite/PredicateBuilder.md",sourceDirName:"api/ServiceStack.OrmLite",slug:"/api/ServiceStack.OrmLite/PredicateBuilder",permalink:"/api/ServiceStack.OrmLite/PredicateBuilder",tags:[],version:"current",frontMatter:{title:"Class PredicateBuilder",sidebar_label:"PredicateBuilder",description:"Enables the efficient, dynamic composition of query predicates."},sidebar:"apiSidebar",previous:{title:"PostgreSqlDialect",permalink:"/api/ServiceStack.OrmLite/PostgreSqlDialect"},next:{title:"PrefixNamingStrategy",permalink:"/api/ServiceStack.OrmLite/PrefixNamingStrategy"}},p=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Methods",id:"methods",children:[{value:"True&lt;T&gt;()",id:"truet",children:[{value:"View Source",id:"view-source-1",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Type Parameters",id:"type-parameters",children:[],level:5}],level:3},{value:"False&lt;T&gt;()",id:"falset",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Type Parameters",id:"type-parameters-1",children:[],level:5}],level:3},{value:"Create&lt;T&gt;(Expression&lt;Func&lt;T, Boolean&gt;&gt;)",id:"createtexpressionfunct-boolean",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5},{value:"Type Parameters",id:"type-parameters-2",children:[],level:5}],level:3},{value:"And&lt;T&gt;(Expression&lt;Func&lt;T, Boolean&gt;&gt;, Expression&lt;Func&lt;T, Boolean&gt;&gt;)",id:"andtexpressionfunct-boolean-expressionfunct-boolean",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5},{value:"Type Parameters",id:"type-parameters-3",children:[],level:5}],level:3},{value:"Or&lt;T&gt;(Expression&lt;Func&lt;T, Boolean&gt;&gt;, Expression&lt;Func&lt;T, Boolean&gt;&gt;)",id:"ortexpressionfunct-boolean-expressionfunct-boolean",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-4",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5},{value:"Type Parameters",id:"type-parameters-4",children:[],level:5}],level:3},{value:"Not&lt;T&gt;(Expression&lt;Func&lt;T, Boolean&gt;&gt;)",id:"nottexpressionfunct-boolean",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-5",children:[],level:5},{value:"Parameters",id:"parameters-3",children:[],level:5},{value:"Type Parameters",id:"type-parameters-5",children:[],level:5}],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-predicatebuilder"},"Class PredicateBuilder"),(0,i.kt)("p",null,"Enables the efficient, dynamic composition of query predicates."),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L11"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class PredicateBuilder\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"truet"},"True","<","T",">","()"),(0,i.kt)("p",null,"Creates a predicate that evaluates to true."),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L16"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> True<T>()\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"falset"},"False","<","T",">","()"),(0,i.kt)("p",null,"Creates a predicate that evaluates to false."),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L24"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> False<T>()\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"createtexpressionfunct-boolean"},"Create","<","T",">","(Expression","<","Func","<","T, Boolean",">",">",")"),(0,i.kt)("p",null,"Creates a predicate expression from the specified lambda expression."),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L32"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> Create<T>(Expression<Func<T, bool>> predicate)\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"predicate"))))),(0,i.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"andtexpressionfunct-boolean-expressionfunct-boolean"},"And","<","T",">","(Expression","<","Func","<","T, Boolean",">",">",", Expression","<","Func","<","T, Boolean",">",">",")"),(0,i.kt)("p",null,"Combines the first predicate with the second using the logical ",'"',"and",'"',"."),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L40"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> And<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second)\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"first"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"second"))))),(0,i.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"ortexpressionfunct-boolean-expressionfunct-boolean"},"Or","<","T",">","(Expression","<","Func","<","T, Boolean",">",">",", Expression","<","Func","<","T, Boolean",">",">",")"),(0,i.kt)("p",null,"Combines the first predicate with the second using the logical ",'"',"or",'"',"."),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L49"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> Or<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second)\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"first"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"second"))))),(0,i.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"nottexpressionfunct-boolean"},"Not","<","T",">","(Expression","<","Func","<","T, Boolean",">",">",")"),(0,i.kt)("p",null,"Negates the predicate."),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Expressions/PredicateBuilder.cs#L58"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static Expression<Func<T, bool>> Not<T>(this Expression<Func<T, bool>> expression)\n")),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Boolean>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"expression"))))),(0,i.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))))}m.isMDXComponent=!0}}]);