"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[5265],{3905:function(e,t,a){a.d(t,{Zo:function(){return o},kt:function(){return k}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),m=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=m(a),k=n,u=d["".concat(p,".").concat(k)]||d[k]||c[k]||i;return a?r.createElement(u,l(l({ref:t},o),{},{components:a})):r.createElement(u,l({ref:t},o))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},88284:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var r=a(83117),n=(a(67294),a(3905));const i={title:"Class OrmLiteWriteExpressionsApiLegacy",sidebar_label:"OrmLiteWriteExpressionsApiLegacy"},l="Class OrmLiteWriteExpressionsApiLegacy",s={unversionedId:"api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",id:"api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",title:"Class OrmLiteWriteExpressionsApiLegacy",description:"Assembly: ServiceStack.OrmLite.dll",source:"@site/docs/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy.md",sourceDirName:"api/ServiceStack.OrmLite.Legacy",slug:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",permalink:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiLegacy",draft:!1,tags:[],version:"current",frontMatter:{title:"Class OrmLiteWriteExpressionsApiLegacy",sidebar_label:"OrmLiteWriteExpressionsApiLegacy"},sidebar:"apiSidebar",previous:{title:"OrmLiteWriteExpressionsApiAsyncLegacy",permalink:"/api/ServiceStack.OrmLite.Legacy/OrmLiteWriteExpressionsApiAsyncLegacy"},next:{title:"Index",permalink:"/api/ServiceStack.OrmLite.MySql/"}},p={},m=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Methods",id:"methods",level:2},{value:"InsertOnly&lt;T&gt;(IDbConnection, T, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)",id:"insertonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:"UpdateOnly&lt;T&gt;(IDbConnection, T, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)",id:"updateonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont",level:3},{value:"View Source",id:"view-source-2",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"UpdateFmt&lt;T&gt;(IDbConnection, String, String)",id:"updatefmttidbconnection-string-string",level:3},{value:"View Source",id:"view-source-3",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:"UpdateFmt(IDbConnection, String, String, String)",id:"updatefmtidbconnection-string-string-string",level:3},{value:"View Source",id:"view-source-4",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"DeleteFmt&lt;T&gt;(IDbConnection, String)",id:"deletefmttidbconnection-string",level:3},{value:"View Source",id:"view-source-5",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:"DeleteFmt(IDbConnection, String, String)",id:"deletefmtidbconnection-string-string",level:3},{value:"View Source",id:"view-source-6",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Delete&lt;T&gt;(IDbConnection, Func&lt;SqlExpression&lt;T&gt;, SqlExpression&lt;T&gt;&gt;)",id:"deletetidbconnection-funcsqlexpressiont-sqlexpressiont",level:3},{value:"View Source",id:"view-source-7",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:"InsertOnly&lt;T&gt;(IDbConnection, T, SqlExpression&lt;T&gt;)",id:"insertonlytidbconnection-t-sqlexpressiont",level:3},{value:"View Source",id:"view-source-8",level:6},{value:"Parameters",id:"parameters-7",level:5},{value:"Type Parameters",id:"type-parameters-5",level:5}],o={toc:m};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-ormlitewriteexpressionsapilegacy"},"Class OrmLiteWriteExpressionsApiLegacy"),(0,n.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L6"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class OrmLiteWriteExpressionsApiLegacy\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"insertonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont"},"InsertOnly","<","T",">","(IDbConnection, T, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,n.kt)("p",null,"Insert only fields in POCO specified by the SqlExpression lambda. E.g:\n","<","p",">","db.InsertOnly(new Person { FirstName = ",'"',"Amy",'"',", Age = 27 }, q =",">"," q.Insert(p =",">"," new { p.FirstName, p.Age }))","<","/p",">"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L12"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use db.InsertOnly(obj, db.From<T>())")]\npublic static void InsertOnly<T>(this IDbConnection dbConn, T obj, Func<SqlExpression<T>, SqlExpression<T>> onlyFields)\n')),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"obj"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"onlyFields"))))),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"updateonlytidbconnection-t-funcsqlexpressiont-sqlexpressiont"},"UpdateOnly","<","T",">","(IDbConnection, T, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,n.kt)("p",null,"Use an SqlExpression to select which fields to update and construct the where expression, E.g: "),(0,n.kt)("p",null,"db.UpdateOnly(new Person { FirstName = ",'"',"JJ",'"'," }, ev =",">"," ev.Update(p =",">"," p.FirstName).Where(x =",">"," x.FirstName == ",'"',"Jimi",'"',"));\nUPDATE ",'"',"Person",'"'," SET ",'"',"FirstName",'"'," = ","'","JJ","'"," WHERE (",'"',"FirstName",'"'," = ","'","Jimi","'",")"),(0,n.kt)("p",null,"What","'","s not in the update expression doesn","'","t get updated. No where expression updates all rows. E.g:"),(0,n.kt)("p",null,"db.UpdateOnly(new Person { FirstName = ",'"',"JJ",'"',", LastName = ",'"',"Hendo",'"'," }, ev =",">"," ev.Update(p =",">"," p.FirstName));\nUPDATE ",'"',"Person",'"'," SET ",'"',"FirstName",'"'," = ","'","JJ","'"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L29"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use db.UpdateOnly(model, db.From<T>())")]\npublic static int UpdateOnly<T>(this IDbConnection dbConn, T model, Func<SqlExpression<T>, SqlExpression<T>> onlyFields)\n')),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"model"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"onlyFields"))))),(0,n.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"updatefmttidbconnection-string-string"},"UpdateFmt","<","T",">","(IDbConnection, String, String)"),(0,n.kt)("p",null,"Flexible Update method to succinctly execute a free-text update statement using optional params. E.g:"),(0,n.kt)("p",null,"db.Update","<","Person",">","(set:",'"',"FirstName = {0}",'"',".Params(",'"',"JJ",'"',"), where:",'"',"LastName = {0}",'"',".Params(",'"',"Hendrix",'"',"));\nUPDATE ",'"',"Person",'"'," SET FirstName = ","'","JJ","'"," WHERE LastName = ","'","Hendrix","'"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L41"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("API is deprecated and will move to ServiceStack.OrmLite.Legacy namespace in future release")]\npublic static int UpdateFmt<T>(this IDbConnection dbConn, string set = null, string where = null)\n')),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"set"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"where"))))),(0,n.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"updatefmtidbconnection-string-string-string"},"UpdateFmt(IDbConnection, String, String, String)"),(0,n.kt)("p",null,"Flexible Update method to succinctly execute a free-text update statement using optional params. E.g."),(0,n.kt)("p",null,"db.Update(table:",'"',"Person",'"',", set: ",'"',"FirstName = {0}",'"',".Params(",'"',"JJ",'"',"), where: ",'"',"LastName = {0}",'"',".Params(",'"',"Hendrix",'"',"));\nUPDATE ",'"',"Person",'"'," SET FirstName = ","'","JJ","'"," WHERE LastName = ","'","Hendrix","'"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L53"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("API is deprecated and will move to ServiceStack.OrmLite.Legacy namespace in future release")]\npublic static int UpdateFmt(this IDbConnection dbConn, string table = null, string set = null, string where = null)\n')),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"table"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"set"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"where"))))),(0,n.kt)("h3",{id:"deletefmttidbconnection-string"},"DeleteFmt","<","T",">","(IDbConnection, String)"),(0,n.kt)("p",null,"Flexible Delete method to succinctly execute a delete statement using free-text where expression. E.g."),(0,n.kt)("p",null,"db.Delete","<","Person",">","(where:",'"',"Age = {0}",'"',".Params(27));\nDELETE FROM ",'"',"Person",'"'," WHERE Age = 27"),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L65"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("API is deprecated and will move to ServiceStack.OrmLite.Legacy namespace in future release")]\npublic static int DeleteFmt<T>(this IDbConnection dbConn, string where = null)\n')),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"where"))))),(0,n.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"deletefmtidbconnection-string-string"},"DeleteFmt(IDbConnection, String, String)"),(0,n.kt)("p",null,"Flexible Delete method to succinctly execute a delete statement using free-text where expression. E.g."),(0,n.kt)("p",null,"db.Delete(table:",'"',"Person",'"',", where: ",'"',"Age = {0}",'"',".Params(27));\nDELETE FROM ",'"',"Person",'"'," WHERE Age = 27"),(0,n.kt)("h6",{id:"view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L77"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("API is deprecated and will move to ServiceStack.OrmLite.Legacy namespace in future release")]\npublic static int DeleteFmt(this IDbConnection dbConn, string table = null, string where = null)\n')),(0,n.kt)("h5",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"table"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"where"))))),(0,n.kt)("h3",{id:"deletetidbconnection-funcsqlexpressiont-sqlexpressiont"},"Delete","<","T",">","(IDbConnection, Func","<","SqlExpression","<","T",">",", SqlExpression","<","T",">",">",")"),(0,n.kt)("p",null,"Delete the rows that matches the where expression, e.g:"),(0,n.kt)("p",null,"db.Delete","<","Person",">","(ev =",">"," ev.Where(p =",">"," p.Age == 27));\nDELETE FROM ",'"',"Person",'"'," WHERE (",'"',"Age",'"'," = 27)"),(0,n.kt)("h6",{id:"view-source-7"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L89"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use db.Delete(db.From<T>())")]\npublic static int Delete<T>(this IDbConnection dbConn, Func<SqlExpression<T>, SqlExpression<T>> where)\n')),(0,n.kt)("h5",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,n.kt)("h5",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Func<ServiceStack.OrmLite.SqlExpression<<T>>,ServiceStack.OrmLite.SqlExpression<<T>>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"where"))))),(0,n.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"insertonlytidbconnection-t-sqlexpressiont"},"InsertOnly","<","T",">","(IDbConnection, T, SqlExpression","<","T",">",")"),(0,n.kt)("p",null,"Using an SqlExpression to only Insert the fields specified, e.g:"),(0,n.kt)("p",null,"db.InsertOnly(new Person { FirstName = ",'"',"Amy",'"'," }, q =",">"," q.Insert(p =",">"," new { p.FirstName }));\nINSERT INTO ",'"',"Person",'"'," (",'"',"FirstName",'"',") VALUES (","'","Amy","'",");"),(0,n.kt)("h6",{id:"view-source-8"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Legacy/OrmLiteWriteExpressionsApiLegacy.cs#L101"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use db.InsertOnly(() => new Person { ... })")]\npublic static void InsertOnly<T>(this IDbConnection dbConn, T obj, SqlExpression<T> onlyFields)\n')),(0,n.kt)("h5",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"dbConn"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"obj"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/SqlExpression%60T%60"},"ServiceStack.OrmLite.SqlExpression","<","T",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"onlyFields"))))),(0,n.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))))}c.isMDXComponent=!0}}]);