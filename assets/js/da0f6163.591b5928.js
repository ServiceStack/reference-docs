"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[27357],{5788:function(e,i,t){t.r(i),t.d(i,{assets:function(){return r},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var n=t(83117),o=(t(67294),t(3905)),c=t(1954);const a={title:"Enum ApplyConditionTo",sidebar_label:"ApplyConditionTo",description:"Specifies where a When/Unless condition should be applied"},l='<Icon icon="codicon:symbol-enum" className="symbol-enum" /> ApplyConditionTo',s={unversionedId:"api/ServiceStack.FluentValidation/ApplyConditionTo",id:"api/ServiceStack.FluentValidation/ApplyConditionTo",title:"Enum ApplyConditionTo",description:"Specifies where a When/Unless condition should be applied",source:"@site/docs/api/ServiceStack.FluentValidation/ApplyConditionTo.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/ApplyConditionTo",permalink:"/api/ServiceStack.FluentValidation/ApplyConditionTo",draft:!1,tags:[],version:"current",frontMatter:{title:"Enum ApplyConditionTo",sidebar_label:"ApplyConditionTo",description:"Specifies where a When/Unless condition should be applied"},sidebar:"apiSidebar",previous:{title:"AbstractValidator<T>",permalink:"/api/ServiceStack.FluentValidation/AbstractValidator`T`"},next:{title:"AssemblyScanner.AssemblyScanResult",permalink:"/api/ServiceStack.FluentValidation/AssemblyScanner.AssemblyScanResult"}},r={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Fields",id:"fields",level:2},{value:'<Icon icon="codicon:symbol-field" className="symbol-field" /> AllValidators',id:"-allvalidators",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-field" className="symbol-field" /> CurrentValidator',id:"-currentvalidator",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6}],u={toc:d};function p(e){let{components:i,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-applyconditionto"},(0,o.kt)(c.JO,{icon:"codicon:symbol-enum",className:"symbol-enum",mdxType:"Icon"})," ApplyConditionTo"),(0,o.kt)("p",null,"Specifies where a When/Unless condition should be applied"),(0,o.kt)("h6",{id:"assembly-servicestackdll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Enums.cs#L45"}," ",(0,o.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public enum ApplyConditionTo\n")),(0,o.kt)("h2",{id:"fields"},"Fields"),(0,o.kt)("h3",{id:"-allvalidators"},(0,o.kt)(c.JO,{icon:"codicon:symbol-field",className:"symbol-field",mdxType:"Icon"})," AllValidators"),(0,o.kt)("p",null,"Applies the condition to all validators declared so far in the chain."),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Enums.cs#L49"}," ",(0,o.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"AllValidators = 0\n")),(0,o.kt)("h3",{id:"-currentvalidator"},(0,o.kt)(c.JO,{icon:"codicon:symbol-field",className:"symbol-field",mdxType:"Icon"})," CurrentValidator"),(0,o.kt)("p",null,"Applies the condition to the current validator only."),(0,o.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Enums.cs#L53"}," ",(0,o.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"CurrentValidator = 1\n")))}p.isMDXComponent=!0}}]);