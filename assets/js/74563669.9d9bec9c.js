"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[67477],{22901:function(e,t,i){i.r(t),i.d(t,{assets:function(){return o},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return m}});var a=i(83117),n=(i(67294),i(3905)),c=i(1954);const l={title:"Class AssertUtils",sidebar_label:"AssertUtils"},r='<Icon icon="codicon:symbol-class" className="symbol-class" /> AssertUtils',s={unversionedId:"api/ServiceStack/AssertUtils",id:"api/ServiceStack/AssertUtils",title:"Class AssertUtils",description:"AssertUtils.AreNotNull(new Dictionary&lt;string,object&gt;{ {&quot;name&quot;,null} });",source:"@site/docs/api/ServiceStack/AssertUtils.md",sourceDirName:"api/ServiceStack",slug:"/api/ServiceStack/AssertUtils",permalink:"/api/ServiceStack/AssertUtils",draft:!1,tags:[],version:"current",frontMatter:{title:"Class AssertUtils",sidebar_label:"AssertUtils"},sidebar:"apiSidebar",previous:{title:"AssertExtensions",permalink:"/api/ServiceStack/AssertExtensions"},next:{title:"AssignRoles",permalink:"/api/ServiceStack/AssignRoles"}},o={},m=[{value:"<strong>Assembly</strong>: ServiceStack.Common.dll",id:"assembly-servicestackcommondll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AreNotNull&lt;T&gt;(T[])',id:"-arenotnulltt",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AreNotNull(IDictionary&lt;String, Object&gt;)',id:"-arenotnullidictionarystring-object",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Parameters",id:"parameters-1",level:5}],d={toc:m};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-assertutils"},(0,n.kt)(c.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," AssertUtils"),(0,n.kt)("h6",{id:"assembly-servicestackcommondll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Common.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/AssertUtils.cs#L7"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class AssertUtils\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-arenotnulltt"},(0,n.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AreNotNull","<","T",">","(T[])"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/AssertUtils.cs#L9"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void AreNotNull<T>(params T[] fields)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"fields"))))),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"-arenotnullidictionarystring-object"},(0,n.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AreNotNull(IDictionary","<","String, Object",">",")"),(0,n.kt)("p",null,"Asserts that the supplied arguments are not null."),(0,n.kt)("p",null,"AssertUtils.AreNotNull(new Dictionary","<","string,object",">","{ {",'"',"name",'"',",null} });\nwill throw new ArgumentNullException(",'"',"name",'"',");"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/AssertUtils.cs#L24"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void AreNotNull(IDictionary<string, object> fieldMap)\n")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IDictionary<System.String,System.Object>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"fieldMap")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field map.")))),(0,n.kt)("p",null," |"))}u.isMDXComponent=!0}}]);