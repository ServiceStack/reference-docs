"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[63363],{82267:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return s}});var i=a(83117),l=(a(67294),a(3905)),n=a(1954);const r={title:"Class InlineValidator<T>",sidebar_label:"InlineValidator<T>",description:"Validator implementation that allows rules to be defined without inheriting from AbstractValidator."},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> InlineValidator&lt;T&gt;',c={unversionedId:"api/ServiceStack.FluentValidation/InlineValidator`T`",id:"api/ServiceStack.FluentValidation/InlineValidator`T`",title:"Class InlineValidator<T>",description:"Validator implementation that allows rules to be defined without inheriting from AbstractValidator.",source:"@site/docs/api/ServiceStack.FluentValidation/InlineValidator`T`.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/InlineValidator`T`",permalink:"/api/ServiceStack.FluentValidation/InlineValidator`T`",draft:!1,tags:[],version:"current",frontMatter:{title:"Class InlineValidator<T>",sidebar_label:"InlineValidator<T>",description:"Validator implementation that allows rules to be defined without inheriting from AbstractValidator."},sidebar:"apiSidebar",previous:{title:"IValidator<T>",permalink:"/api/ServiceStack.FluentValidation/IValidator`T`"},next:{title:"PropertyValidatorOptions",permalink:"/api/ServiceStack.FluentValidation/PropertyValidatorOptions"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Add&lt;TProperty&gt;(Func&lt;InlineValidator&lt;T&gt;, IRuleBuilderOptions&lt;T, TProperty&gt;&gt;)',id:"-addtpropertyfuncinlinevalidatort-irulebuilderoptionst-tproperty",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:"Implements",id:"implements",level:2}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"-inlinevalidatort"},(0,l.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," InlineValidator","<","T",">"),(0,l.kt)("p",null,"Validator implementation that allows rules to be defined without inheriting from AbstractValidator."),(0,l.kt)("h6",{id:"assembly-servicestackdll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/InlineValidator.cs#L39"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class InlineValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable, IRequiresRequest, IHasTypeValidators, IServiceStackValidator\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"-addtpropertyfuncinlinevalidatort-irulebuilderoptionst-tproperty"},(0,l.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Add","<","TProperty",">","(Func","<","InlineValidator","<","T",">",", IRuleBuilderOptions","<","T, TProperty",">",">",")"),(0,l.kt)("p",null,"Allows configuration of the validator."),(0,l.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/InlineValidator.cs#L43"}," ",(0,l.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add<TProperty>(Func<InlineValidator<T>, IRuleBuilderOptions<T, TProperty>> ruleCreator)\n")),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Func<ServiceStack.FluentValidation.InlineValidator`1,ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"ruleCreator"))))),(0,l.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TProperty"))),(0,l.kt)("h2",{id:"implements"},"Implements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.FluentValidation/IValidator%60T%60"},"ServiceStack.FluentValidation.IValidator","<","T",">")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.FluentValidation/IValidator"},"ServiceStack.FluentValidation.IValidator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.IEnumerable<ServiceStack.FluentValidation.IValidationRule>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"System.Collections.IEnumerable")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.Web/IRequiresRequest"},"ServiceStack.Web.IRequiresRequest")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack/IHasTypeValidators"},"ServiceStack.IHasTypeValidators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.FluentValidation/IServiceStackValidator"},"ServiceStack.FluentValidation.IServiceStackValidator"))))}m.isMDXComponent=!0}}]);