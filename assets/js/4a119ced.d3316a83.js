"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[75704],{81833:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return r},toc:function(){return d}});var a=i(83117),n=(i(67294),i(3905)),l=i(1954);const o={title:"Class ValidationResultExtension",sidebar_label:"ValidationResultExtension"},s='<Icon icon="codicon:symbol-class" className="symbol-class" /> ValidationResultExtension',r={unversionedId:"api/ServiceStack.FluentValidation.Mvc/ValidationResultExtension",id:"api/ServiceStack.FluentValidation.Mvc/ValidationResultExtension",title:"Class ValidationResultExtension",description:"|",source:"@site/docs/api/ServiceStack.FluentValidation.Mvc/ValidationResultExtension.md",sourceDirName:"api/ServiceStack.FluentValidation.Mvc",slug:"/api/ServiceStack.FluentValidation.Mvc/ValidationResultExtension",permalink:"/api/ServiceStack.FluentValidation.Mvc/ValidationResultExtension",draft:!1,tags:[],version:"current",frontMatter:{title:"Class ValidationResultExtension",sidebar_label:"ValidationResultExtension"},sidebar:"apiSidebar",previous:{title:"RuleSetForClientSideMessagesAttribute",permalink:"/api/ServiceStack.FluentValidation.Mvc/RuleSetForClientSideMessagesAttribute"},next:{title:"ServiceStack.FluentValidation.Resources",permalink:"/api/ServiceStack.FluentValidation.Resources/"}},c={},d=[{value:"<strong>Assembly</strong>: ServiceStack.Mvc.dll",id:"assembly-servicestackmvcdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddToModelState(ValidationResult, ModelStateDictionary, String)',id:"-addtomodelstatevalidationresult-modelstatedictionary-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetRulesetForClientsideMessages(ControllerContext, String[])',id:"-setrulesetforclientsidemessagescontrollercontext-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Parameters",id:"parameters-1",level:5}],u={toc:d};function m(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-validationresultextension"},(0,n.kt)(l.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," ValidationResultExtension"),(0,n.kt)("h6",{id:"assembly-servicestackmvcdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Mvc.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/ValidationResultExtension.cs#L25"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class ValidationResultExtension\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-addtomodelstatevalidationresult-modelstatedictionary-string"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddToModelState(ValidationResult, ModelStateDictionary, String)"),(0,n.kt)("p",null,"Stores the errors in a ValidationResult object to the specified modelstate dictionary."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/ValidationResultExtension.cs#L32"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void AddToModelState(this ValidationResult result, ModelStateDictionary modelState, string prefix)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation.Results/ValidationResult"},"ServiceStack.FluentValidation.Results.ValidationResult")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"result")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The validation result to store")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"ModelStateDictionary")," | ",(0,n.kt)("em",{parentName:"p"},"modelState")," | The ModelStateDictionary to store the errors in."),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.String")," | ",(0,n.kt)("em",{parentName:"p"},"prefix")," | An optional prefix. If ommitted, the property names will be the keys. If specified, the prefix will be concatenatd to the property name with a period. Eg ",'"',"user.Name",'"'),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-setrulesetforclientsidemessagescontrollercontext-string"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetRulesetForClientsideMessages(ControllerContext, String[])"),(0,n.kt)("p",null,"Sets the rulests used when generating clientside messages."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Mvc/FluentValidation/ValidationResultExtension.cs#L54"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SetRulesetForClientsideMessages(this ControllerContext context, params string[] ruleSets)\n")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"ControllerContext")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"context")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Http context")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.String[]")," | ",(0,n.kt)("em",{parentName:"p"},"ruleSets")," | Array of ruleset names"),(0,n.kt)("p",null," |"))}m.isMDXComponent=!0}}]);