"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[79377],{17855:function(e,t,i){i.r(t),i.d(t,{assets:function(){return o},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return m}});var a=i(83117),n=(i(67294),i(3905)),l=i(1954);const r={title:"Class KeyValuePairs",sidebar_label:"KeyValuePairs",description:"UX friendly alternative alias of List&lt;KeyValuePair&lt;string, object&gt;gt;"},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> KeyValuePairs',s={unversionedId:"api/ServiceStack/KeyValuePairs",id:"api/ServiceStack/KeyValuePairs",title:"Class KeyValuePairs",description:"UX friendly alternative alias of List&lt;KeyValuePair&lt;string, object&gt;gt;",source:"@site/docs/api/ServiceStack/KeyValuePairs.md",sourceDirName:"api/ServiceStack",slug:"/api/ServiceStack/KeyValuePairs",permalink:"/api/ServiceStack/KeyValuePairs",draft:!1,tags:[],version:"current",frontMatter:{title:"Class KeyValuePairs",sidebar_label:"KeyValuePairs",description:"UX friendly alternative alias of List&lt;KeyValuePair&lt;string, object&gt;gt;"},sidebar:"apiSidebar",previous:{title:"JsvServiceClient",permalink:"/api/ServiceStack/JsvServiceClient"},next:{title:"KeyValueStrings",permalink:"/api/ServiceStack/KeyValueStrings"}},o={},m=[{value:"<strong>Assembly</strong>: ServiceStack.Text.dll",id:"assembly-servicestacktextdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Create(String, Object)',id:"-createstring-object",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Implements",id:"implements",level:2}],u={toc:m};function d(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-keyvaluepairs"},(0,n.kt)(l.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," KeyValuePairs"),(0,n.kt)("p",null,"UX friendly alternative alias of List","<","KeyValuePair","<","string, object",">","gt;"),(0,n.kt)("h6",{id:"assembly-servicestacktextdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Text.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/ObjectDictionary.cs#L37"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class KeyValuePairs : List<KeyValuePair<string, object>>, IList<KeyValuePair<string, object>>, ICollection<KeyValuePair<string, object>>, IList, ICollection, IReadOnlyList<KeyValuePair<string, object>>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-createstring-object"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Create(String, Object)"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/ObjectDictionary.cs#L43"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static KeyValuePair<string, object> Create(string key, object value)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Collections.Generic.KeyValuePair<System.String,System.Object>")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"key"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"value"))))),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<System.String,System.Object>>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.IList")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.ICollection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<System.String,System.Object>>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.Collections.IEnumerable"))))}d.isMDXComponent=!0}}]);