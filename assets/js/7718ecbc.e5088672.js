"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[38397],{1457:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return n},metadata:function(){return c},toc:function(){return s}});var r=a(83117),i=(a(67294),a(3905)),l=a(1954);const n={title:"Interface IRuleBuilder<T, TProperty>",sidebar_label:"IRuleBuilder<T, TProperty>",description:"Rule builder"},o='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IRuleBuilder&lt;T, TProperty&gt;',c={unversionedId:"api/ServiceStack.FluentValidation/IRuleBuilder`T, TProperty`",id:"api/ServiceStack.FluentValidation/IRuleBuilder`T, TProperty`",title:"Interface IRuleBuilder<T, TProperty>",description:"Rule builder",source:"@site/docs/api/ServiceStack.FluentValidation/IRuleBuilder`T, TProperty`.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/IRuleBuilder`T, TProperty`",permalink:"/api/ServiceStack.FluentValidation/IRuleBuilder`T, TProperty`",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IRuleBuilder<T, TProperty>",sidebar_label:"IRuleBuilder<T, TProperty>",description:"Rule builder"},sidebar:"apiSidebar",previous:{title:"IRuleBuilderOptions<T, TProperty>",permalink:"/api/ServiceStack.FluentValidation/IRuleBuilderOptions`T, TProperty`"},next:{title:"IServiceStackValidator",permalink:"/api/ServiceStack.FluentValidation/IServiceStackValidator"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator(IPropertyValidator)',id:"-setvalidatoripropertyvalidator",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator(IValidator&lt;TProperty&gt;, String[])',id:"-setvalidatorivalidatortproperty-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator&lt;TValidator&gt;(Func&lt;T, TValidator&gt;, String[])',id:"-setvalidatortvalidatorfunct-tvalidator-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator&lt;TValidator&gt;(Func&lt;T, TProperty, TValidator&gt;, String[])',id:"-setvalidatortvalidatorfunct-tproperty-tvalidator-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5}],u={toc:s};function p(t){let{components:e,...a}=t;return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-irulebuildert-tproperty"},(0,i.kt)(l.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IRuleBuilder","<","T, TProperty",">"),(0,i.kt)("p",null,"Rule builder"),(0,i.kt)("h6",{id:"assembly-servicestackdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L47"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IRuleBuilder<T, out TProperty>\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"-setvalidatoripropertyvalidator"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator(IPropertyValidator)"),(0,i.kt)("p",null,"Associates a validator with this the property for this rule builder."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L53"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderOptions<T, TProperty> SetValidator(IPropertyValidator validator)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation.Validators/IPropertyValidator"},"ServiceStack.FluentValidation.Validators.IPropertyValidator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator to set")))),(0,i.kt)("h3",{id:"-setvalidatorivalidatortproperty-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator(IValidator","<","TProperty",">",", String[])"),(0,i.kt)("p",null,"Associates an instance of IValidator with the current property rule."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L60"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderOptions<T, TProperty> SetValidator(IValidator<TProperty> validator, params string[] ruleSets)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidator%60T%60"},"ServiceStack.FluentValidation.IValidator","<","T",">")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"ruleSets")),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"-setvalidatortvalidatorfunct-tvalidator-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator","<","TValidator",">","(Func","<","T, TValidator",">",", String[])"),(0,i.kt)("p",null,"Associates a validator provider with the current property rule."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L67"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderOptions<T, TProperty> SetValidator<TValidator>(Func<T, TValidator> validatorProvider, params string[] ruleSets)\n    where TValidator : IValidator<TProperty>\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<<T>,<TValidator>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validatorProvider")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator provider to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"ruleSets")),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TValidator"))),(0,i.kt)("h3",{id:"-setvalidatortvalidatorfunct-tproperty-tvalidator-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator","<","TValidator",">","(Func","<","T, TProperty, TValidator",">",", String[])"),(0,i.kt)("p",null,"Associates a validator provider with the current property rule."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L75"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderOptions<T, TProperty> SetValidator<TValidator>(Func<T, TProperty, TValidator> validatorProvider, params string[] ruleSets)\n    where TValidator : IValidator<TProperty>\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<<T>,<TProperty>,<TValidator>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validatorProvider")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator provider to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"ruleSets")),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TValidator"))))}p.isMDXComponent=!0}}]);