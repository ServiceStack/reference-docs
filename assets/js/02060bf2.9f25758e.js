"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[60218],{28783:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return s},frontMatter:function(){return n},metadata:function(){return c},toc:function(){return u}});var r=a(83117),i=(a(67294),a(3905)),l=a(1954);const n={title:"Class RuleBuilder<T, TProperty>",sidebar_label:"RuleBuilder<T, TProperty>",description:"Builds a validation rule and constructs a validator."},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> RuleBuilder&lt;T, TProperty&gt;',c={unversionedId:"api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`",id:"api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`",title:"Class RuleBuilder<T, TProperty>",description:"Builds a validation rule and constructs a validator.",source:"@site/docs/api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`.md",sourceDirName:"api/ServiceStack.FluentValidation.Internal",slug:"/api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`",permalink:"/api/ServiceStack.FluentValidation.Internal/RuleBuilder`T, TProperty`",draft:!1,tags:[],version:"current",frontMatter:{title:"Class RuleBuilder<T, TProperty>",sidebar_label:"RuleBuilder<T, TProperty>",description:"Builds a validation rule and constructs a validator."},sidebar:"apiSidebar",previous:{title:"PropertyRule",permalink:"/api/ServiceStack.FluentValidation.Internal/PropertyRule"},next:{title:"RulesetValidatorSelector",permalink:"/api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector"}},d={},u=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Rule',id:"-rule",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> ParentValidator',id:"-parentvalidator",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator(IPropertyValidator)',id:"-setvalidatoripropertyvalidator",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator(IValidator&lt;TProperty&gt;, String[])',id:"-setvalidatorivalidatortproperty-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator&lt;TValidator&gt;(Func&lt;T, TValidator&gt;, String[])',id:"-setvalidatortvalidatorfunct-tvalidator-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator&lt;TValidator&gt;(Func&lt;T, TProperty, TValidator&gt;, String[])',id:"-setvalidatortvalidatorfunct-tproperty-tvalidator-string",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SetValidator&lt;TValidator&gt;(Func&lt;ICommonContext, TValidator&gt;)',id:"-setvalidatortvalidatorfuncicommoncontext-tvalidator",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IConfigurable&lt;PropertyRule, IRuleBuilderOptions&lt;T, TProperty&gt;&gt;.Configure(Action&lt;PropertyRule&gt;)',id:"-iconfigurablepropertyrule-irulebuilderoptionst-tpropertyconfigureactionpropertyrule",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IConfigurable&lt;PropertyRule, IRuleBuilderInitial&lt;T, TProperty&gt;&gt;.Configure(Action&lt;PropertyRule&gt;)',id:"-iconfigurablepropertyrule-irulebuilderinitialt-tpropertyconfigureactionpropertyrule",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9",level:6},{value:"Returns",id:"returns-6",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IConfigurable&lt;CollectionPropertyRule&lt;T, TProperty&gt;, IRuleBuilderInitialCollection&lt;T, TProperty&gt;&gt;.Configure(Action&lt;CollectionPropertyRule&lt;T, TProperty&gt;&gt;)',id:"-iconfigurablecollectionpropertyrulet-tproperty-irulebuilderinitialcollectiont-tpropertyconfigureactioncollectionpropertyrulet-tproperty",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10",level:6},{value:"Returns",id:"returns-7",level:5},{value:"Parameters",id:"parameters-7",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Transform&lt;TNew&gt;(Func&lt;TProperty, TNew&gt;)',id:"-transformtnewfunctproperty-tnew",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11",level:6},{value:"Returns",id:"returns-8",level:5},{value:"Parameters",id:"parameters-8",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:"Implements",id:"implements",level:2}],p={toc:u};function s(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-rulebuildert-tproperty"},(0,i.kt)(l.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RuleBuilder","<","T, TProperty",">"),(0,i.kt)("p",null,"Builds a validation rule and constructs a validator."),(0,i.kt)("h6",{id:"assembly-servicestackdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L29"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class RuleBuilder<T, TProperty> : IRuleBuilderOptions<T, TProperty>, IConfigurable<PropertyRule, IRuleBuilderOptions<T, TProperty>>, IRuleBuilderInitial<T, TProperty>, IConfigurable<PropertyRule, IRuleBuilderInitial<T, TProperty>>, IRuleBuilderInitialCollection<T, TProperty>, IRuleBuilder<T, TProperty>, IConfigurable<CollectionPropertyRule<T, TProperty>, IRuleBuilderInitialCollection<T, TProperty>>\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"-rule"},(0,i.kt)(l.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Rule"),(0,i.kt)("p",null,"The rule being created by this RuleBuilder."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L33"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public PropertyRule Rule { get; }\n")),(0,i.kt)("h3",{id:"-parentvalidator"},(0,i.kt)(l.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," ParentValidator"),(0,i.kt)("p",null,"Parent validator"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L38"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IValidator<T> ParentValidator { get; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"-setvalidatoripropertyvalidator"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator(IPropertyValidator)"),(0,i.kt)("p",null,"Sets the validator associated with the rule."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L53"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRuleBuilderOptions<T, TProperty> SetValidator(IPropertyValidator validator)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation.Validators/IPropertyValidator"},"ServiceStack.FluentValidation.Validators.IPropertyValidator")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator to set")))),(0,i.kt)("p",null," |"),(0,i.kt)("h3",{id:"-setvalidatorivalidatortproperty-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator(IValidator","<","TProperty",">",", String[])"),(0,i.kt)("p",null,"Sets the validator associated with the rule. Use with complex properties where an IValidator instance is already declared for the property type."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L64"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRuleBuilderOptions<T, TProperty> SetValidator(IValidator<TProperty> validator, params string[] ruleSets)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidator%60T%60"},"ServiceStack.FluentValidation.IValidator","<","T",">")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validator")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator to set")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.String[]")," | ",(0,i.kt)("em",{parentName:"p"},"ruleSets")," | "),(0,i.kt)("p",null," |"),(0,i.kt)("h3",{id:"-setvalidatortvalidatorfunct-tvalidator-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator","<","TValidator",">","(Func","<","T, TValidator",">",", String[])"),(0,i.kt)("p",null,"Sets the validator associated with the rule. Use with complex properties where an IValidator instance is already declared for the property type."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L78"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRuleBuilderOptions<T, TProperty> SetValidator<TValidator>(Func<T, TValidator> validatorProvider, params string[] ruleSets)\n    where TValidator : IValidator<TProperty>\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<<T>,<TValidator>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validatorProvider")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator provider to set")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.String[]")," | ",(0,i.kt)("em",{parentName:"p"},"ruleSets")," | "),(0,i.kt)("p",null," |"),(0,i.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TValidator"))),(0,i.kt)("h3",{id:"-setvalidatortvalidatorfunct-tproperty-tvalidator-string"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator","<","TValidator",">","(Func","<","T, TProperty, TValidator",">",", String[])"),(0,i.kt)("p",null,"Associates a validator provider with the current property rule."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L92"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRuleBuilderOptions<T, TProperty> SetValidator<TValidator>(Func<T, TProperty, TValidator> validatorProvider, params string[] ruleSets)\n    where TValidator : IValidator<TProperty>\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<<T>,<TProperty>,<TValidator>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validatorProvider")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator provider to use")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.String[]")," | ",(0,i.kt)("em",{parentName:"p"},"ruleSets")," | "),(0,i.kt)("p",null," |"),(0,i.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TValidator"))),(0,i.kt)("h3",{id:"-setvalidatortvalidatorfuncicommoncontext-tvalidator"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SetValidator","<","TValidator",">","(Func","<","ICommonContext, TValidator",">",")"),(0,i.kt)("p",null,"Sets the validator associated with the rule. Use with complex properties where an IValidator instance is already declared for the property type."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L104"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRuleBuilderOptions<T, TProperty> SetValidator<TValidator>(Func<ICommonContext, TValidator> validatorProvider)\n    where TValidator : IValidator<TProperty>\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<ServiceStack.FluentValidation.ICommonContext,<TValidator>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"validatorProvider")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The validator provider to set")))),(0,i.kt)("p",null," |"),(0,i.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TValidator"))),(0,i.kt)("h3",{id:"-iconfigurablepropertyrule-irulebuilderoptionst-tpropertyconfigureactionpropertyrule"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IConfigurable","<","PropertyRule, IRuleBuilderOptions","<","T, TProperty",">",">",".Configure(Action","<","PropertyRule",">",")"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L110"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderOptions<T, TProperty> IConfigurable<PropertyRule, IRuleBuilderOptions<T, TProperty>>.Configure(Action<PropertyRule> configurator)\n")),(0,i.kt)("h5",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Action<ServiceStack.FluentValidation.Internal.PropertyRule>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"configurator"))))),(0,i.kt)("h3",{id:"-iconfigurablepropertyrule-irulebuilderinitialt-tpropertyconfigureactionpropertyrule"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IConfigurable","<","PropertyRule, IRuleBuilderInitial","<","T, TProperty",">",">",".Configure(Action","<","PropertyRule",">",")"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L115"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderInitial<T, TProperty> IConfigurable<PropertyRule, IRuleBuilderInitial<T, TProperty>>.Configure(Action<PropertyRule> configurator)\n")),(0,i.kt)("h5",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderInitial<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Action<ServiceStack.FluentValidation.Internal.PropertyRule>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"configurator"))))),(0,i.kt)("h3",{id:"-iconfigurablecollectionpropertyrulet-tproperty-irulebuilderinitialcollectiont-tpropertyconfigureactioncollectionpropertyrulet-tproperty"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IConfigurable","<","CollectionPropertyRule","<","T, TProperty",">",", IRuleBuilderInitialCollection","<","T, TProperty",">",">",".Configure(Action","<","CollectionPropertyRule","<","T, TProperty",">",">",")"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L120"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"IRuleBuilderInitialCollection<T, TProperty> IConfigurable<CollectionPropertyRule<T, TProperty>, IRuleBuilderInitialCollection<T, TProperty>>.Configure(Action<CollectionPropertyRule<T, TProperty>> configurator)\n")),(0,i.kt)("h5",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderInitialCollection<<T>,<TProperty>>")),(0,i.kt)("h5",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Action<ServiceStack.FluentValidation.Internal.CollectionPropertyRule<<T>,<TProperty>>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"configurator"))))),(0,i.kt)("h3",{id:"-transformtnewfunctproperty-tnew"},(0,i.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Transform","<","TNew",">","(Func","<","TProperty, TNew",">",")"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/RuleBuilder.cs#L125"}," ",(0,i.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use RuleFor(x => x.Property, transformer) instead. This method will be removed in FluentValidation 10.")]\npublic IRuleBuilderInitial<T, TNew> Transform<TNew>(Func<TProperty, TNew> transformationFunc)\n')),(0,i.kt)("h5",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderInitial<<T>,<TNew>>")),(0,i.kt)("h5",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Func<<TProperty>,<TNew>>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"transformationFunc"))))),(0,i.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TNew"))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.Internal.IConfigurable<ServiceStack.FluentValidation.Internal.PropertyRule,ServiceStack.FluentValidation.IRuleBuilderOptions<<T>,<TProperty>>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.IRuleBuilderInitial<<T>,<TProperty>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.Internal.IConfigurable<ServiceStack.FluentValidation.Internal.PropertyRule,ServiceStack.FluentValidation.IRuleBuilderInitial<<T>,<TProperty>>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.IRuleBuilderInitialCollection<<T>,<TProperty>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.IRuleBuilder<<T>,<TProperty>>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ServiceStack.FluentValidation.Internal.IConfigurable<ServiceStack.FluentValidation.Internal.CollectionPropertyRule<<T>,<TProperty>>,ServiceStack.FluentValidation.IRuleBuilderInitialCollection<<T>,<TProperty>>>"))))}s.isMDXComponent=!0}}]);