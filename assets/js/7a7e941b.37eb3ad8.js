"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[8095],{42813:function(e,t,i){i.r(t),i.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return s}});var l=i(83117),n=(i(67294),i(3905)),a=i(1954);const r={title:"Interface IRuleBuilderInitialCollection<T, TElement>",sidebar_label:"IRuleBuilderInitialCollection<T, TElement>",description:"Rule builder that starts the chain for a child collection"},o='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IRuleBuilderInitialCollection&lt;T, TElement&gt;',c={unversionedId:"api/ServiceStack.FluentValidation/IRuleBuilderInitialCollection`T, TElement`",id:"api/ServiceStack.FluentValidation/IRuleBuilderInitialCollection`T, TElement`",title:"Interface IRuleBuilderInitialCollection<T, TElement>",description:"Rule builder that starts the chain for a child collection",source:"@site/docs/api/ServiceStack.FluentValidation/IRuleBuilderInitialCollection`T, TElement`.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/IRuleBuilderInitialCollection`T, TElement`",permalink:"/api/ServiceStack.FluentValidation/IRuleBuilderInitialCollection`T, TElement`",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IRuleBuilderInitialCollection<T, TElement>",sidebar_label:"IRuleBuilderInitialCollection<T, TElement>",description:"Rule builder that starts the chain for a child collection"},sidebar:"apiSidebar",previous:{title:"IParameterValidatorFactory",permalink:"/api/ServiceStack.FluentValidation/IParameterValidatorFactory"},next:{title:"IRuleBuilderInitial<T, TProperty>",permalink:"/api/ServiceStack.FluentValidation/IRuleBuilderInitial`T, TProperty`"}},u={},s=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Transform&lt;TNew&gt;(Func&lt;TElement, TNew&gt;)',id:"-transformtnewfunctelement-tnew",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5}],d={toc:s};function m(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,l.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-irulebuilderinitialcollectiont-telement"},(0,n.kt)(a.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IRuleBuilderInitialCollection","<","T, TElement",">"),(0,n.kt)("p",null,"Rule builder that starts the chain for a child collection"),(0,n.kt)("h6",{id:"assembly-servicestackdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L93"}," ",(0,n.kt)(a.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IRuleBuilderInitialCollection<T, TElement> : IRuleBuilder<T, TElement>, IConfigurable<CollectionPropertyRule<T, TElement>, IRuleBuilderInitialCollection<T, TElement>>\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-transformtnewfunctelement-tnew"},(0,n.kt)(a.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Transform","<","TNew",">","(Func","<","TElement, TNew",">",")"),(0,n.kt)("p",null,"Transforms the collection element value before validation occurs."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L100"}," ",(0,n.kt)(a.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'[Obsolete("Use TransformForEach(x => x.Property, transformer) at the root level instead. This method will be removed in FluentValidation 10.")]\nIRuleBuilderInitial<T, TNew> Transform<TNew>(Func<TElement, TNew> transformationFunc)\n')),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ServiceStack.FluentValidation.IRuleBuilderInitial<<T>,<TNew>>")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Func<<TElement>,<TNew>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"transformationFunc"))))),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"TNew"))))}m.isMDXComponent=!0}}]);