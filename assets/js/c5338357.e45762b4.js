"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[62351],{61122:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return r},metadata:function(){return o},toc:function(){return d}});var i=a(83117),n=(a(67294),a(3905)),l=a(1954);const r={title:"Class ValidationStrategy<T>",sidebar_label:"ValidationStrategy<T>"},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> ValidationStrategy&lt;T&gt;',o={unversionedId:"api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`",id:"api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`",title:"Class ValidationStrategy<T>",description:"",source:"@site/docs/api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`.md",sourceDirName:"api/ServiceStack.FluentValidation.Internal",slug:"/api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`",permalink:"/api/ServiceStack.FluentValidation.Internal/ValidationStrategy`T`",draft:!1,tags:[],version:"current",frontMatter:{title:"Class ValidationStrategy<T>",sidebar_label:"ValidationStrategy<T>"},sidebar:"apiSidebar",previous:{title:"RulesetValidatorSelector",permalink:"/api/ServiceStack.FluentValidation.Internal/RulesetValidatorSelector"},next:{title:"ServiceStack.FluentValidation.Mvc",permalink:"/api/ServiceStack.FluentValidation.Mvc/"}},s={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IncludeProperties(String[])',id:"-includepropertiesstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IncludeProperties(Expression&lt;Func&lt;T, Object&gt;&gt;[])',id:"-includepropertiesexpressionfunct-object",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IncludeRulesNotInRuleSet()',id:"-includerulesnotinruleset",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IncludeAllRuleSets()',id:"-includeallrulesets",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> IncludeRuleSets(String[])',id:"-includerulesetsstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> UseCustomSelector(IValidatorSelector)',id:"-usecustomselectorivalidatorselector",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ThrowOnFailures()',id:"-throwonfailures",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Returns",id:"returns-6",level:5}],u={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-validationstrategyt"},(0,n.kt)(l.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," ValidationStrategy","<","T",">"),(0,n.kt)("h6",{id:"assembly-servicestackdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L25"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class ValidationStrategy<T>\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-includepropertiesstring"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IncludeProperties(String[])"),(0,n.kt)("p",null,"Indicates that only the specified properties should be validated."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L39"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> IncludeProperties(params string[] properties)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"properties")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The property names to validate.")))),(0,n.kt)("h3",{id:"-includepropertiesexpressionfunct-object"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IncludeProperties(Expression","<","Func","<","T, Object",">",">","[])"),(0,n.kt)("p",null,"Indicates that only the specified properties should be validated."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L55"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> IncludeProperties(params Expression<Func<T, object>>[] propertyExpressions)\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Object>>[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"propertyExpressions")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The properties to validate, defined as expressions.")))),(0,n.kt)("h3",{id:"-includerulesnotinruleset"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IncludeRulesNotInRuleSet()"),(0,n.kt)("p",null,"Indicates that all rules not in a rule-set should be included for validation (the equivalent of calling IncludeRuleSets(",'"',"default",'"',")).\nThis method can be combined with IncludeRuleSets."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L71"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> IncludeRulesNotInRuleSet()\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h3",{id:"-includeallrulesets"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IncludeAllRuleSets()"),(0,n.kt)("p",null,"Indicates that all rules should be executed, regardless of whether or not they","'","re in a ruleset.\nThis is the equivalent of IncludeRuleSets(",'"',"*",'"',")."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L82"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> IncludeAllRuleSets()\n")),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h3",{id:"-includerulesetsstring"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," IncludeRuleSets(String[])"),(0,n.kt)("p",null,"Indicates that only the specified rule sets should be validated."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L93"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> IncludeRuleSets(params string[] ruleSets)\n")),(0,n.kt)("h5",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"ruleSets")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The names of the rulesets to validate.")))),(0,n.kt)("h3",{id:"-usecustomselectorivalidatorselector"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," UseCustomSelector(IValidatorSelector)"),(0,n.kt)("p",null,"Indicates that the specified selector should be used to control which rules are executed."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L111"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> UseCustomSelector(IValidatorSelector selector)\n")),(0,n.kt)("h5",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation.Internal/IValidatorSelector"},"ServiceStack.FluentValidation.Internal.IValidatorSelector")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"selector")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The custom selector to use")))),(0,n.kt)("h3",{id:"-throwonfailures"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ThrowOnFailures()"),(0,n.kt)("p",null,"Indicates that the validator should throw an exception if it fails, rather than return a validation result."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Internal/ValidationStrategy.cs#L121"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValidationStrategy<T> ThrowOnFailures()\n")),(0,n.kt)("h5",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Internal/ValidationStrategy%60T%60"},"ServiceStack.FluentValidation.Internal.ValidationStrategy","<","T",">")))}m.isMDXComponent=!0}}]);