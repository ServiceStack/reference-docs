"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[16832],{65682:function(e,i,s){s.r(i),s.d(i,{assets:function(){return l},contentTitle:function(){return r},default:function(){return g},frontMatter:function(){return n},metadata:function(){return o},toc:function(){return u}});var t=s(83117),a=(s(67294),s(3905)),c=s(1954);const n={title:"Class RedisTransientMessageFactory",sidebar_label:"RedisTransientMessageFactory",description:"Transient message queues are a one-pass message queue service that starts processing messages when Start() is called. Any subsequent Start() calls  while the service is running is ignored.\nThe transient service will continue to run until all messages have been  processed after which time it will shutdown all processing until Start() is called again."},r='<Icon icon="codicon:symbol-class" className="symbol-class" /> RedisTransientMessageFactory',o={unversionedId:"api/ServiceStack.Messaging.Redis/RedisTransientMessageFactory",id:"api/ServiceStack.Messaging.Redis/RedisTransientMessageFactory",title:"Class RedisTransientMessageFactory",description:"Transient message queues are a one-pass message queue service that starts processing messages when Start() is called. Any subsequent Start() calls  while the service is running is ignored.\nThe transient service will continue to run until all messages have been  processed after which time it will shutdown all processing until Start() is called again.",source:"@site/docs/api/ServiceStack.Messaging.Redis/RedisTransientMessageFactory.md",sourceDirName:"api/ServiceStack.Messaging.Redis",slug:"/api/ServiceStack.Messaging.Redis/RedisTransientMessageFactory",permalink:"/api/ServiceStack.Messaging.Redis/RedisTransientMessageFactory",draft:!1,tags:[],version:"current",frontMatter:{title:"Class RedisTransientMessageFactory",sidebar_label:"RedisTransientMessageFactory",description:"Transient message queues are a one-pass message queue service that starts processing messages when Start() is called. Any subsequent Start() calls  while the service is running is ignored.\nThe transient service will continue to run until all messages have been  processed after which time it will shutdown all processing until Start() is called again."},sidebar:"apiSidebar",previous:{title:"RedisMqServer",permalink:"/api/ServiceStack.Messaging.Redis/RedisMqServer"},next:{title:"RedisTransientMessageService",permalink:"/api/ServiceStack.Messaging.Redis/RedisTransientMessageService"}},l={},u=[{value:"<strong>Assembly</strong>: ServiceStack.Server.dll",id:"assembly-servicestackserverdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> ClientsManager',id:"-clientsmanager",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> MessageService',id:"-messageservice",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CreateMessageQueueClient()',id:"-createmessagequeueclient",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CreateMessageProducer()',id:"-createmessageproducer",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> CreateMessageService()',id:"-createmessageservice",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> OnMessagePublished()',id:"-onmessagepublished",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Dispose()',id:"-dispose",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Implements",id:"implements",level:2}],d={toc:u};function g(e){let{components:i,...s}=e;return(0,a.kt)("wrapper",(0,t.Z)({},d,s,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-redistransientmessagefactory"},(0,a.kt)(c.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RedisTransientMessageFactory"),(0,a.kt)("p",null,"Transient message queues are a one-pass message queue service that starts\nprocessing messages when Start() is called. Any subsequent Start() calls\nwhile the service is running is ignored."),(0,a.kt)("p",null,"The transient service will continue to run until all messages have been\nprocessed after which time it will shutdown all processing until Start() is called again."),(0,a.kt)("h6",{id:"assembly-servicestackserverdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Server.dll"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L17"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class RedisTransientMessageFactory : object, IMessageFactory, IMessageQueueClientFactory\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"-clientsmanager"},(0,a.kt)(c.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," ClientsManager"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L20"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IRedisClientsManager ClientsManager { get; }\n")),(0,a.kt)("h3",{id:"-messageservice"},(0,a.kt)(c.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," MessageService"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L22"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public RedisTransientMessageService MessageService { get; }\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"-createmessagequeueclient"},(0,a.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CreateMessageQueueClient()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L38"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IMessageQueueClient CreateMessageQueueClient()\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../ServiceStack.Messaging/IMessageQueueClient"},"ServiceStack.Messaging.IMessageQueueClient")),(0,a.kt)("h3",{id:"-createmessageproducer"},(0,a.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CreateMessageProducer()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L43"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IMessageProducer CreateMessageProducer()\n")),(0,a.kt)("h5",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../ServiceStack.Messaging/IMessageProducer"},"ServiceStack.Messaging.IMessageProducer")),(0,a.kt)("h3",{id:"-createmessageservice"},(0,a.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," CreateMessageService()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L48"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IMessageService CreateMessageService()\n")),(0,a.kt)("h5",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../ServiceStack.Messaging/IMessageService"},"ServiceStack.Messaging.IMessageService")),(0,a.kt)("h3",{id:"-onmessagepublished"},(0,a.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," OnMessagePublished()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L54"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void OnMessagePublished()\n")),(0,a.kt)("h3",{id:"-dispose"},(0,a.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Dispose()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Server/Messaging/Redis/RedisTransientMessageFactory.cs#L59"}," ",(0,a.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Dispose()\n")),(0,a.kt)("h2",{id:"implements"},"Implements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../ServiceStack.Messaging/IMessageFactory"},"ServiceStack.Messaging.IMessageFactory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../ServiceStack.Messaging/IMessageQueueClientFactory"},"ServiceStack.Messaging.IMessageQueueClientFactory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IDisposable"))))}g.isMDXComponent=!0}}]);