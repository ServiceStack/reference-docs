"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[9781],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,v=m["".concat(s,".").concat(d)]||m[d]||p[d]||l;return r?a.createElement(v,i(i({ref:t},u),{},{components:r})):a.createElement(v,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},369:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),i=["components"],o={title:"Class TextInputBase<TValue>",sidebar_label:"TextInputBase<TValue>"},s="Class TextInputBase&lt;TValue&gt;",c={unversionedId:"api/ServiceStack.Blazor.Components/TextInputBase`TValue`",id:"api/ServiceStack.Blazor.Components/TextInputBase`TValue`",title:"Class TextInputBase<TValue>",description:"Assembly: ServiceStack.Blazor.dll",source:"@site/docs/api/ServiceStack.Blazor.Components/TextInputBase`TValue`.md",sourceDirName:"api/ServiceStack.Blazor.Components",slug:"/api/ServiceStack.Blazor.Components/TextInputBase`TValue`",permalink:"/api/ServiceStack.Blazor.Components/TextInputBase`TValue`",tags:[],version:"current",frontMatter:{title:"Class TextInputBase<TValue>",sidebar_label:"TextInputBase<TValue>"},sidebar:"apiSidebar",previous:{title:"TextInputBase",permalink:"/api/ServiceStack.Blazor.Components/TextInputBase"},next:{title:"UiComponentBase",permalink:"/api/ServiceStack.Blazor.Components/UiComponentBase"}},u=[{value:"<strong>Assembly</strong>: ServiceStack.Blazor.dll",id:"assembly-servicestackblazordll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Value",id:"value",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"ValueChanged",id:"valuechanged",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"ValueExpression",id:"valueexpression",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"CurrentValue",id:"currentvalue",children:[{value:"View Source",id:"view-source-4",children:[],level:6}],level:3},{value:"CurrentValueAsString",id:"currentvalueasstring",children:[{value:"View Source",id:"view-source-5",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"FormatValueAsString(TValue)",id:"formatvalueasstringtvalue",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"TryParseValueFromString(Nullable&lt;String&gt;, out TValue, out Nullable&lt;String&gt;)",id:"tryparsevaluefromstringnullablestring-out-tvalue-out-nullablestring",children:[{value:"View Source",id:"view-source-7",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"SetParametersAsync(ParameterView)",id:"setparametersasyncparameterview",children:[{value:"View Source",id:"view-source-8",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3}],level:2},{value:"Extension Methods",id:"extension-methods",children:[],level:2}],p={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"class-textinputbasetvalue"},"Class TextInputBase","<","TValue",">"),(0,l.kt)("h6",{id:"assembly-servicestackblazordll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Blazor.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L109"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class TextInputBase<TValue> : TextInputBase\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"value"},"Value"),(0,l.kt)("p",null,"Gets or sets the value of the input. This should be used with two-way binding."),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L118"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public TValue Value { get; set; }\n")),(0,l.kt)("h3",{id:"valuechanged"},"ValueChanged"),(0,l.kt)("p",null,"Gets or sets a callback that updates the bound value."),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L124"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public EventCallback<TValue> ValueChanged { get; set; }\n")),(0,l.kt)("h3",{id:"valueexpression"},"ValueExpression"),(0,l.kt)("p",null,"Gets or sets an expression that identifies the bound value."),(0,l.kt)("h6",{id:"view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L129"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Expression<Func<TValue>>? ValueExpression { get; set; }\n")),(0,l.kt)("h3",{id:"currentvalue"},"CurrentValue"),(0,l.kt)("p",null,"Gets or sets the current value of the input."),(0,l.kt)("h6",{id:"view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L134"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected TValue CurrentValue { get; set; }\n")),(0,l.kt)("h3",{id:"currentvalueasstring"},"CurrentValueAsString"),(0,l.kt)("p",null,"Gets or sets the current value of the input, represented as a string."),(0,l.kt)("h6",{id:"view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L152"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected string? CurrentValueAsString { get; set; }\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"formatvalueasstringtvalue"},"FormatValueAsString(TValue)"),(0,l.kt)("p",null,"Formats the value as a string. Derived classes can override this to determine the formating used for ",(0,l.kt)("inlineCode",{parentName:"p"},"ServiceStack.Blazor.Components.TextInputBase%601.CurrentValueAsString"),"."),(0,l.kt)("h6",{id:"view-source-6"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L198"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected virtual string? FormatValueAsString(TValue value)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.String>"),": A string representation of the value."),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"<TValue>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The value to format.")))),(0,l.kt)("h3",{id:"tryparsevaluefromstringnullablestring-out-tvalue-out-nullablestring"},"TryParseValueFromString(Nullable","<","String",">",", out TValue, out Nullable","<","String",">",")"),(0,l.kt)("p",null,"Parses a string to create an instance of ","<",'code data-dev-comment-type="typeparamref" class="typeparamref"',">","TValue","<","/code",">",". Derived classes can override this to change how\n",(0,l.kt)("inlineCode",{parentName:"p"},"ServiceStack.Blazor.Components.TextInputBase%601.CurrentValueAsString")," interprets incoming values."),(0,l.kt)("h6",{id:"view-source-7"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L209"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected virtual bool TryParseValueFromString(string? value, out TValue result, out string? validationErrorMessage)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"System.Boolean"),": True if the value could be parsed; otherwise false."),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.String>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The string value to be parsed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"<TValue>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"result")),(0,l.kt)("td",{parentName:"tr",align:"left"},"An instance of ","<",'code data-dev-comment-type="typeparamref" class="typeparamref"',">","TValue","<","/code",">",".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.String>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"validationErrorMessage")),(0,l.kt)("td",{parentName:"tr",align:"left"},"If the value could not be parsed, provides a validation error message.")))),(0,l.kt)("h3",{id:"setparametersasyncparameterview"},"SetParametersAsync(ParameterView)"),(0,l.kt)("h6",{id:"view-source-8"},(0,l.kt)("a",{parentName:"h6",href:"/blob///home/runner/work/reference-docs/ServiceStack/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/TextInputBase.cs#L227"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override Task SetParametersAsync(ParameterView parameters)\n")),(0,l.kt)("h5",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Task")),(0,l.kt)("h5",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ParameterView")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"parameters"))))),(0,l.kt)("h2",{id:"extension-methods"},"Extension Methods"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.Blazor/HtmlUtils#asstringobject"},"ServiceStack.Blazor.HtmlUtils.AsString(System.Object)")),(0,l.kt)("li",{parentName:"ul"},"ServiceStack.Blazor.Components.TextInputBase`1.ServiceStack.Blazor.TextUtils.ToModelDictionary``1")))}m.isMDXComponent=!0}}]);