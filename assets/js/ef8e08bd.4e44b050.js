"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[93576],{87248:function(e,t,i){i.r(t),i.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return p}});var a=i(83117),c=(i(67294),i(3905)),n=i(1954);const r={title:"Class Lisp.BuiltInFunc",sidebar_label:"Lisp.BuiltInFunc",description:"Built-in function"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> Lisp.BuiltInFunc',l={unversionedId:"api/ServiceStack.Script/Lisp.BuiltInFunc",id:"api/ServiceStack.Script/Lisp.BuiltInFunc",title:"Class Lisp.BuiltInFunc",description:"Built-in function",source:"@site/docs/api/ServiceStack.Script/Lisp.BuiltInFunc.md",sourceDirName:"api/ServiceStack.Script",slug:"/api/ServiceStack.Script/Lisp.BuiltInFunc",permalink:"/api/ServiceStack.Script/Lisp.BuiltInFunc",draft:!1,tags:[],version:"current",frontMatter:{title:"Class Lisp.BuiltInFunc",sidebar_label:"Lisp.BuiltInFunc",description:"Built-in function"},sidebar:"apiSidebar",previous:{title:"KeyValuesScriptBlock",permalink:"/api/ServiceStack.Script/KeyValuesScriptBlock"},next:{title:"Lisp.BuiltInFuncBody",permalink:"/api/ServiceStack.Script/Lisp.BuiltInFuncBody"}},s={},p=[{value:"<strong>Assembly</strong>: ServiceStack.Common.dll",id:"assembly-servicestackcommondll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Name',id:"-name",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Body',id:"-body",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Inherited Properties",id:"inherited-properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Carity',id:"-carity",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ToString()',id:"-tostring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> EvalWith(Lisp.Interpreter, Lisp.Cell, Lisp.Cell)',id:"-evalwithlispinterpreter-lispcell-lispcell",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Inherited Methods",id:"inherited-methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> EvalFrame(Object[], Lisp.Interpreter, Lisp.Cell)',id:"-evalframeobject-lispinterpreter-lispcell",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> MakeFrame(Lisp.Cell)',id:"-makeframelispcell",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-2",level:5}],m={toc:p};function u(e){let{components:t,...i}=e;return(0,c.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"-lispbuiltinfunc"},(0,c.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," Lisp.BuiltInFunc"),(0,c.kt)("p",null,"Built-in function"),(0,c.kt)("h6",{id:"assembly-servicestackcommondll"},(0,c.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Common.dll"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L785"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class BuiltInFunc : Lisp.LispFunc\n")),(0,c.kt)("h2",{id:"properties"},"Properties"),(0,c.kt)("h3",{id:"-name"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Name"),(0,c.kt)("p",null,"Name of this function"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L787"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string Name { get; }\n")),(0,c.kt)("h3",{id:"-body"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Body"),(0,c.kt)("p",null,"C# function as the body of this function"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L789"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Lisp.BuiltInFuncBody Body { get; }\n")),(0,c.kt)("h2",{id:"inherited-properties"},"Inherited Properties"),(0,c.kt)("h3",{id:"-carity"},(0,c.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Carity"),(0,c.kt)("p",null,"Number of arguments, made negative if the function\nhas ","&","rest"),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L648"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int Carity { get; }\n")),(0,c.kt)("h2",{id:"methods"},"Methods"),(0,c.kt)("h3",{id:"-tostring"},(0,c.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ToString()"),(0,c.kt)("p",null,"Return a string representation in Lisp."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L799"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override string ToString()\n")),(0,c.kt)("h5",{id:"returns"},"Returns"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"System.String")),(0,c.kt)("h3",{id:"-evalwithlispinterpreter-lispcell-lispcell"},(0,c.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," EvalWith(Lisp.Interpreter, Lisp.Cell, Lisp.Cell)"),(0,c.kt)("p",null,"Invoke the built-in function with a list of\nactual arguments."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L803"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object EvalWith(Lisp.Interpreter interp, Lisp.Cell arg, Lisp.Cell interpEnv)\n")),(0,c.kt)("h5",{id:"returns-1"},"Returns"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,c.kt)("h5",{id:"parameters"},"Parameters"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Interpreter"},"ServiceStack.Script.Lisp.Interpreter")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"interp"))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Cell"},"ServiceStack.Script.Lisp.Cell")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"arg"))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Cell"},"ServiceStack.Script.Lisp.Cell")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"interpEnv"))))),(0,c.kt)("h2",{id:"inherited-methods"},"Inherited Methods"),(0,c.kt)("h3",{id:"-evalframeobject-lispinterpreter-lispcell"},(0,c.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," EvalFrame(Object[], Lisp.Interpreter, Lisp.Cell)"),(0,c.kt)("p",null,"Evaluate each expression in a frame."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L680"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void EvalFrame(object[] frame, Lisp.Interpreter interp, Lisp.Cell env)\n")),(0,c.kt)("h5",{id:"parameters-1"},"Parameters"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("inlineCode",{parentName:"td"},"System.Object[]")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"frame"))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Interpreter"},"ServiceStack.Script.Lisp.Interpreter")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"interp"))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Cell"},"ServiceStack.Script.Lisp.Cell")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"env"))))),(0,c.kt)("h3",{id:"-makeframelispcell"},(0,c.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," MakeFrame(Lisp.Cell)"),(0,c.kt)("p",null,"Make a frame for local variables from a list of\nactual arguments."),(0,c.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,c.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Common/Script/ScriptLanguage.Lisp.cs#L663"}," ",(0,c.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object[] MakeFrame(Lisp.Cell arg)\n")),(0,c.kt)("h5",{id:"returns-2"},"Returns"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"System.Object[]")),(0,c.kt)("h5",{id:"parameters-2"},"Parameters"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,c.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("a",{parentName:"td",href:"../ServiceStack.Script/Lisp.Cell"},"ServiceStack.Script.Lisp.Cell")),(0,c.kt)("td",{parentName:"tr",align:"left"},(0,c.kt)("em",{parentName:"td"},"arg"))))))}u.isMDXComponent=!0}}]);