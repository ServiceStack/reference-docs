"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[28088],{51404:function(e,t,a){a.r(t),a.d(t,{assets:function(){return o},contentTitle:function(){return m},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s}});var r=a(83117),i=(a(67294),a(3905)),n=a(1954);const c={title:"Interface SqlMapper.IDynamicParameters",sidebar_label:"SqlMapper.IDynamicParameters",description:"Implement this interface to pass an arbitrary db specific set of parameters to Dapper"},m='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> SqlMapper.IDynamicParameters',p={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters",title:"Interface SqlMapper.IDynamicParameters",description:"Implement this interface to pass an arbitrary db specific set of parameters to Dapper",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface SqlMapper.IDynamicParameters",sidebar_label:"SqlMapper.IDynamicParameters",description:"Implement this interface to pass an arbitrary db specific set of parameters to Dapper"},sidebar:"apiSidebar",previous:{title:"SqlMapper.ICustomQueryParameter",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter"},next:{title:"SqlMapper.IMemberMap",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.IMemberMap"}},o={},s=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddParameters(IDbCommand, SqlMapper.Identity)',id:"-addparametersidbcommand-sqlmapperidentity",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5}],l={toc:s};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-sqlmapperidynamicparameters"},(0,i.kt)(n.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," SqlMapper.IDynamicParameters"),(0,i.kt)("p",null,"Implement this interface to pass an arbitrary db specific set of parameters to Dapper"),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.IDynamicParameters.cs#L10"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IDynamicParameters\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"-addparametersidbcommand-sqlmapperidentity"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddParameters(IDbCommand, SqlMapper.Identity)"),(0,i.kt)("p",null,"Add all the parameters needed to the command just before it executes"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.IDynamicParameters.cs#L17"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void AddParameters(IDbCommand command, SqlMapper.Identity identity)\n")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbCommand")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"command")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw command prior to execution")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")," | ",(0,i.kt)("em",{parentName:"p"},"identity")," | Information about the query"),(0,i.kt)("p",null," |"))}d.isMDXComponent=!0}}]);