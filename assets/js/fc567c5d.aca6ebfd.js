"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[16424],{61964:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return d}});var i=a(83117),n=(a(67294),a(3905)),r=a(1954);const c={title:"Class ConsistentHash<T>",sidebar_label:"ConsistentHash<T>"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> ConsistentHash&lt;T&gt;',s={unversionedId:"api/ServiceStack.Redis.Support/ConsistentHash`T`",id:"api/ServiceStack.Redis.Support/ConsistentHash`T`",title:"Class ConsistentHash<T>",description:"",source:"@site/docs/api/ServiceStack.Redis.Support/ConsistentHash`T`.md",sourceDirName:"api/ServiceStack.Redis.Support",slug:"/api/ServiceStack.Redis.Support/ConsistentHash`T`",permalink:"/api/ServiceStack.Redis.Support/ConsistentHash`T`",draft:!1,tags:[],version:"current",frontMatter:{title:"Class ConsistentHash<T>",sidebar_label:"ConsistentHash<T>"},sidebar:"apiSidebar",previous:{title:"ServiceStack.Redis.Support",permalink:"/api/ServiceStack.Redis.Support/"},next:{title:"IOrderedDictionary<TKey, TValue>",permalink:"/api/ServiceStack.Redis.Support/IOrderedDictionary`TKey, TValue`"}},l={},d=[{value:"<strong>Assembly</strong>: ServiceStack.Redis.dll",id:"assembly-servicestackredisdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetTarget(String)',id:"-gettargetstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddTarget(T, Int32)',id:"-addtargett-int32",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ModifiedBinarySearch(UInt64[], UInt64)',id:"-modifiedbinarysearchuint64-uint64",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Md5Hash(String)',id:"-md5hashstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-3",level:5}],m={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-consistenthasht"},(0,n.kt)(r.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," ConsistentHash","<","T",">"),(0,n.kt)("h6",{id:"assembly-servicestackredisdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Redis.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/Support/ConsistentHash.cs#L9"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class ConsistentHash<T>\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-gettargetstring"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetTarget(String)"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/Support/ConsistentHash.cs#L36"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T GetTarget(string key)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<T>")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"key"))))),(0,n.kt)("h3",{id:"-addtargett-int32"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddTarget(T, Int32)"),(0,n.kt)("p",null,"Adds a node and maps points across the circle"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/Support/ConsistentHash.cs#L48"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddTarget(T node, int weight)\n")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"node")),(0,n.kt)("td",{parentName:"tr",align:"left"},"node to add")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Int32")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"weight")),(0,n.kt)("td",{parentName:"tr",align:"left"},"An arbitrary number, specifies how often it occurs relative to other targets.")))),(0,n.kt)("h3",{id:"-modifiedbinarysearchuint64-uint64"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ModifiedBinarySearch(UInt64[], UInt64)"),(0,n.kt)("p",null,"A variation of Binary Search algorithm. Given a number, matches the next highest number from the sorted array.\nIf a higher number does not exist, then the first number in the array is returned."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/Support/ConsistentHash.cs#L68"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static ulong ModifiedBinarySearch(ulong[] sortedArray, ulong val)\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.UInt64"),": next highest number "),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.UInt64[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"sortedArray")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a sorted array to perform the search")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.UInt64")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"val")),(0,n.kt)("td",{parentName:"tr",align:"left"},"number to find the next highest number against")))),(0,n.kt)("h3",{id:"-md5hashstring"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Md5Hash(String)"),(0,n.kt)("p",null,"Given a key, generates an unsigned 64 bit hash code using MD5"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/Support/ConsistentHash.cs#L97"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static ulong Md5Hash(string key)\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.UInt64")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"key"))))))}p.isMDXComponent=!0}}]);