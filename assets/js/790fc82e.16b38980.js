"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[35240],{70090:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return r},toc:function(){return p}});var i=a(83117),n=(a(67294),a(3905)),o=a(1954);const c={title:"Class CookieManagerMessageInspector",sidebar_label:"CookieManagerMessageInspector",description:'Maintains a copy of the cookies contained in the incoming HTTP response received from any service and appends it to all outgoing HTTP requests.\n\nThis class effectively allows to send any received HTTP cookies to different services, reproducing the same functionality available in ASMX Web Services proxies with the &lt;xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"&gt;&lt;/xref&gt; class. Based on http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/'},s='<Icon icon="codicon:symbol-class" className="symbol-class" /> CookieManagerMessageInspector',r={unversionedId:"api/ServiceStack/CookieManagerMessageInspector",id:"api/ServiceStack/CookieManagerMessageInspector",title:"Class CookieManagerMessageInspector",description:'Maintains a copy of the cookies contained in the incoming HTTP response received from any service and appends it to all outgoing HTTP requests.\n\nThis class effectively allows to send any received HTTP cookies to different services, reproducing the same functionality available in ASMX Web Services proxies with the &lt;xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"&gt;&lt;/xref&gt; class. Based on http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/',source:"@site/docs/api/ServiceStack/CookieManagerMessageInspector.md",sourceDirName:"api/ServiceStack",slug:"/api/ServiceStack/CookieManagerMessageInspector",permalink:"/api/ServiceStack/CookieManagerMessageInspector",draft:!1,tags:[],version:"current",frontMatter:{title:"Class CookieManagerMessageInspector",sidebar_label:"CookieManagerMessageInspector",description:'Maintains a copy of the cookies contained in the incoming HTTP response received from any service and appends it to all outgoing HTTP requests.\n\nThis class effectively allows to send any received HTTP cookies to different services, reproducing the same functionality available in ASMX Web Services proxies with the &lt;xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"&gt;&lt;/xref&gt; class. Based on http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/'},sidebar:"apiSidebar",previous:{title:"CookieManagerEndpointBehavior",permalink:"/api/ServiceStack/CookieManagerEndpointBehavior"},next:{title:"CorsFeature",permalink:"/api/ServiceStack/CorsFeature"}},l={},p=[{value:"<strong>Assembly</strong>: ServiceStack.Client.dll",id:"assembly-servicestackclientdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Uri',id:"-uri",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Instance',id:"-instance",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AfterReceiveReply(ref Message, Object)',id:"-afterreceivereplyref-message-object",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> BeforeSendRequest(ref Message, IClientChannel)',id:"-beforesendrequestref-message-iclientchannel",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Implements",id:"implements",level:2}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-cookiemanagermessageinspector"},(0,n.kt)(o.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," CookieManagerMessageInspector"),(0,n.kt)("p",null,"Maintains a copy of the cookies contained in the incoming HTTP response received from any service\nand appends it to all outgoing HTTP requests."),(0,n.kt)("p",null,"This class effectively allows to send any received HTTP cookies to different services,\nreproducing the same functionality available in ASMX Web Services proxies with the ","<",'xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"',">","<","/xref",">"," class.\nBased on ",(0,n.kt)("a",{parentName:"p",href:"http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/"},"http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/")),(0,n.kt)("h6",{id:"assembly-servicestackclientdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Client.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Client/WcfServiceClient.cs#L54"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class CookieManagerMessageInspector : IClientMessageInspector\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"-uri"},(0,n.kt)(o.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Uri"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Client/WcfServiceClient.cs#L58"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string Uri { get; set; }\n")),(0,n.kt)("h3",{id:"-instance"},(0,n.kt)(o.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Instance"),(0,n.kt)("p",null,"Gets the singleton ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack/CookieManagerMessageInspector"},"ServiceStack.CookieManagerMessageInspector")," instance."),(0,n.kt)("p",null,"This class effectively allows to send any received HTTP cookies to different services,\nreproducing the same functionality available in ASMX Web Services proxies with the ","<",'xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"',">","<","/xref",">"," class.\nBased on ",(0,n.kt)("a",{parentName:"p",href:"http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/"},"http://megakemp.wordpress.com/2009/02/06/managing-shared-cookies-in-wcf/")),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Client/WcfServiceClient.cs#L78"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static CookieManagerMessageInspector Instance { get; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-afterreceivereplyref-message-object"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AfterReceiveReply(ref Message, Object)"),(0,n.kt)("p",null,"Inspects a message after a reply message is received but prior to passing it back to the client application."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Client/WcfServiceClient.cs#L86"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AfterReceiveReply(ref Message reply, object correlationState)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.ServiceModel.Channels.Message")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"reply")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The message to be transformed into types and handed back to the client application.")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")," | ",(0,n.kt)("em",{parentName:"p"},"correlationState")," | Correlation state data."),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-beforesendrequestref-message-iclientchannel"},(0,n.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," BeforeSendRequest(ref Message, IClientChannel)"),(0,n.kt)("p",null,"Inspects a message before a request message is sent to a service."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Client/WcfServiceClient.cs#L105"}," ",(0,n.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object BeforeSendRequest(ref Message request, IClientChannel channel)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object"),":\n","<","strong",">","Null","<","/strong",">"," since no message correlation is used."),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.ServiceModel.Channels.Message")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"request")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The message to be sent to the service.")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.ServiceModel.IClientChannel")," | ",(0,n.kt)("em",{parentName:"p"},"channel")," | The client object channel."),(0,n.kt)("p",null," |"),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"System.ServiceModel.Dispatcher.IClientMessageInspector"))))}m.isMDXComponent=!0}}]);