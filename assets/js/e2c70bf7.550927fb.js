"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[63239],{95158:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var i=a(83117),n=(a(67294),a(3905)),l=a(1954);const o={title:"Class DefaultValidatorExtensionsServiceStack",sidebar_label:"DefaultValidatorExtensionsServiceStack"},r='<Icon icon="codicon:symbol-class" className="symbol-class" /> DefaultValidatorExtensionsServiceStack',c={unversionedId:"api/ServiceStack.FluentValidation/DefaultValidatorExtensionsServiceStack",id:"api/ServiceStack.FluentValidation/DefaultValidatorExtensionsServiceStack",title:"Class DefaultValidatorExtensionsServiceStack",description:"|",source:"@site/docs/api/ServiceStack.FluentValidation/DefaultValidatorExtensionsServiceStack.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/DefaultValidatorExtensionsServiceStack",permalink:"/api/ServiceStack.FluentValidation/DefaultValidatorExtensionsServiceStack",draft:!1,tags:[],version:"current",frontMatter:{title:"Class DefaultValidatorExtensionsServiceStack",sidebar_label:"DefaultValidatorExtensionsServiceStack"},sidebar:"apiSidebar",previous:{title:"DefaultValidatorExtensions",permalink:"/api/ServiceStack.FluentValidation/DefaultValidatorExtensions"},next:{title:"DefaultValidatorOptions",permalink:"/api/ServiceStack.FluentValidation/DefaultValidatorOptions"}},s={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ValidateAndThrow&lt;T&gt;(IValidator&lt;T&gt;, T, ApplyTo)',id:"-validateandthrowtivalidatort-t-applyto",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ValidateAndThrowAsync&lt;T&gt;(IValidator&lt;T&gt;, T, ApplyTo, CancellationToken)',id:"-validateandthrowasynctivalidatort-t-applyto-cancellationtoken",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5}],p={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-defaultvalidatorextensionsservicestack"},(0,n.kt)(l.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," DefaultValidatorExtensionsServiceStack"),(0,n.kt)("h6",{id:"assembly-servicestackdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/DefaultValidatorExtensions.Partial.cs#L8"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class DefaultValidatorExtensionsServiceStack\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-validateandthrowtivalidatort-t-applyto"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ValidateAndThrow","<","T",">","(IValidator","<","T",">",", T, ApplyTo)"),(0,n.kt)("p",null,"Performs validation and then throws an exception if validation fails."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/DefaultValidatorExtensions.Partial.cs#L16"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void ValidateAndThrow<T>(this IValidator<T> validator, T instance, ApplyTo applyTo)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidator%60T%60"},"ServiceStack.FluentValidation.IValidator","<","T",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"validator")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The validator this method is extending.")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"<T>")," | ",(0,n.kt)("em",{parentName:"p"},"instance")," | The instance of the type we are validating."),(0,n.kt)("p",null," |\n| ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack/ApplyTo"},"ServiceStack.ApplyTo")," | ",(0,n.kt)("em",{parentName:"p"},"applyTo")," | The ruleset to validate against."),(0,n.kt)("p",null," |"),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))),(0,n.kt)("h3",{id:"-validateandthrowasynctivalidatort-t-applyto-cancellationtoken"},(0,n.kt)(l.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ValidateAndThrowAsync","<","T",">","(IValidator","<","T",">",", T, ApplyTo, CancellationToken)"),(0,n.kt)("p",null,"Performs validation asynchronously and then throws an exception if validation fails."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/DefaultValidatorExtensions.Partial.cs#L32"}," ",(0,n.kt)(l.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static async Task ValidateAndThrowAsync<T>(this IValidator<T> validator, T instance, ApplyTo applyTo, CancellationToken token = default(CancellationToken))\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.FluentValidation/IValidator%60T%60"},"ServiceStack.FluentValidation.IValidator","<","T",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"validator")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The validator this method is extending.")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"<T>")," | ",(0,n.kt)("em",{parentName:"p"},"instance")," | The instance of the type we are validating."),(0,n.kt)("p",null," |\n| ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack/ApplyTo"},"ServiceStack.ApplyTo")," | ",(0,n.kt)("em",{parentName:"p"},"applyTo")," | Optional: a ruleset when need to validate against."),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.CancellationToken")," | ",(0,n.kt)("em",{parentName:"p"},"token")," | "),(0,n.kt)("p",null," |"),(0,n.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"T"))))}m.isMDXComponent=!0}}]);