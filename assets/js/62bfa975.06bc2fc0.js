"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[4080],{3905:function(e,t,i){i.d(t,{Zo:function(){return o},kt:function(){return m}});var r=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,r,a=function(e,t){if(null==e)return{};var i,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},o=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},S=r.forwardRef((function(e,t){var i=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),S=p(i),m=a,d=S["".concat(s,".").concat(m)]||S[m]||u[m]||n;return i?r.createElement(d,l(l({ref:t},o),{},{components:i})):r.createElement(d,l({ref:t},o))}));function m(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=i.length,l=new Array(n);l[0]=S;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var p=2;p<n;p++)l[p]=i[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}S.displayName="MDXCreateElement"},5497:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return o},default:function(){return S}});var r=i(7462),a=i(3366),n=(i(7294),i(3905)),l=["components"],c={title:"Class SqlMapper.Settings",sidebar_label:"SqlMapper.Settings",description:"Permits specifying certain SqlMapper values globally."},s="Class SqlMapper.Settings",p={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings",title:"Class SqlMapper.Settings",description:"Permits specifying certain SqlMapper values globally.",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings",tags:[],version:"current",frontMatter:{title:"Class SqlMapper.Settings",sidebar_label:"SqlMapper.Settings",description:"Permits specifying certain SqlMapper values globally."},sidebar:"apiSidebar",previous:{title:"SqlMapper",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper"},next:{title:"SqlMapper.StringTypeHandler<T>",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.StringTypeHandler`T`"}},o=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"UseSingleResultOptimization",id:"usesingleresultoptimization",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"UseSingleRowOptimization",id:"usesinglerowoptimization",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3},{value:"CommandTimeout",id:"commandtimeout",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"ApplyNullValues",id:"applynullvalues",children:[{value:"View Source",id:"view-source-4",children:[],level:6}],level:3},{value:"PadListExpansions",id:"padlistexpansions",children:[{value:"View Source",id:"view-source-5",children:[],level:6}],level:3},{value:"InListStringSplitCount",id:"inliststringsplitcount",children:[{value:"View Source",id:"view-source-6",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"SetDefaults()",id:"setdefaults",children:[{value:"View Source",id:"view-source-7",children:[],level:6}],level:3}],level:2}],u={toc:o};function S(e){var t=e.components,i=(0,a.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-sqlmappersettings"},"Class SqlMapper.Settings"),(0,n.kt)("p",null,"Permits specifying certain SqlMapper values globally."),(0,n.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L11"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class Settings\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"usesingleresultoptimization"},"UseSingleResultOptimization"),(0,n.kt)("p",null,"Gets or sets whether Dapper should use the CommandBehavior.SingleResult optimization"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L25"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool UseSingleResultOptimization { get; set; }\n")),(0,n.kt)("h3",{id:"usesinglerowoptimization"},"UseSingleRowOptimization"),(0,n.kt)("p",null,"Gets or sets whether Dapper should use the CommandBehavior.SingleRow optimization"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L34"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool UseSingleRowOptimization { get; set; }\n")),(0,n.kt)("h3",{id:"commandtimeout"},"CommandTimeout"),(0,n.kt)("p",null,"Specifies the default Command Timeout for all Queries"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L72"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int? CommandTimeout { get; set; }\n")),(0,n.kt)("h3",{id:"applynullvalues"},"ApplyNullValues"),(0,n.kt)("p",null,"Indicates whether nulls in data are silently ignored (default) vs actively applied and assigned to members"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L77"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool ApplyNullValues { get; set; }\n")),(0,n.kt)("h3",{id:"padlistexpansions"},"PadListExpansions"),(0,n.kt)("p",null,"Should list expansions be padded with null-valued parameters, to prevent query-plan saturation? For example,\nan ","'","in @foo","'"," expansion with 7, 8 or 9 values will be sent as a list of 10 values, with 3, 2 or 1 of them null.\nThe padding size is relative to the size of the list; ",'"',"next 10",'"'," under 150, ",'"',"next 50",'"'," under 500,\n",'"',"next 100",'"'," under 1500, etc."),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L90"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool PadListExpansions { get; set; }\n")),(0,n.kt)("h3",{id:"inliststringsplitcount"},"InListStringSplitCount"),(0,n.kt)("p",null,"If set (non-negative), when performing in-list expansions of integer types (",'"',"where id in @ids",'"',", etc), switch to a string_split based\noperation if there are more than this many elements. Note that this feautre requires SQL Server 2016 / compatibility level 130 (or above)."),(0,n.kt)("h6",{id:"view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L95"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int InListStringSplitCount { get; set; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"setdefaults"},"SetDefaults()"),(0,n.kt)("p",null,"Resets all Settings to their default values"),(0,n.kt)("h6",{id:"view-source-7"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Settings.cs#L63"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SetDefaults()\n")))}S.isMDXComponent=!0}}]);