"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[6454],{54306:function(e,i,t){t.r(i),t.d(i,{assets:function(){return o},contentTitle:function(){return r},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var c=t(83117),a=(t(67294),t(3905)),n=t(1954);const s={title:"Interface IRedisHash<TKey, TValue>",sidebar_label:"IRedisHash<TKey, TValue>"},r='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IRedisHash&lt;TKey, TValue&gt;',l={unversionedId:"api/ServiceStack.Redis.Generic/IRedisHash`TKey, TValue`",id:"api/ServiceStack.Redis.Generic/IRedisHash`TKey, TValue`",title:"Interface IRedisHash<TKey, TValue>",description:"",source:"@site/docs/api/ServiceStack.Redis.Generic/IRedisHash`TKey, TValue`.md",sourceDirName:"api/ServiceStack.Redis.Generic",slug:"/api/ServiceStack.Redis.Generic/IRedisHash`TKey, TValue`",permalink:"/api/ServiceStack.Redis.Generic/IRedisHash`TKey, TValue`",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IRedisHash<TKey, TValue>",sidebar_label:"IRedisHash<TKey, TValue>"},sidebar:"apiSidebar",previous:{title:"IRedisHashAsync<TKey, TValue>",permalink:"/api/ServiceStack.Redis.Generic/IRedisHashAsync`TKey, TValue`"},next:{title:"IRedisListAsync<T>",permalink:"/api/ServiceStack.Redis.Generic/IRedisListAsync`T`"}},o={},d=[{value:"<strong>Assembly</strong>: ServiceStack.Interfaces.dll",id:"assembly-servicestackinterfacesdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetAll()',id:"-getall",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5}],u={toc:d};function m(e){let{components:i,...t}=e;return(0,a.kt)("wrapper",(0,c.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-iredishashtkey-tvalue"},(0,a.kt)(n.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IRedisHash","<","TKey, TValue",">"),(0,a.kt)("h6",{id:"assembly-servicestackinterfacesdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Interfaces.dll"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Redis/Generic/IRedisHash.Generic.cs#L18"}," ",(0,a.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IRedisHash<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IHasStringId, IHasId<string>\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"-getall"},(0,a.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetAll()"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Redis/Generic/IRedisHash.Generic.cs#L20"}," ",(0,a.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Dictionary<TKey, TValue> GetAll()\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"System.Collections.Generic.Dictionary<<TKey>,<TValue>>")))}m.isMDXComponent=!0}}]);