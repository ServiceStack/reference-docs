"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[63001],{69225:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return n},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var s=a(83117),r=(a(67294),a(3905)),i=a(1954);const o={title:"Interface IPasswordHasher",sidebar_label:"IPasswordHasher",description:"The Password Hasher provider used to hash users passwords, by default uses the same algorithm used by ASP.NET Identity v3: PBKDF2 with HMAC-SHA256, 128-bit salt, 256-bit subkey, 10000 iterations."},n='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IPasswordHasher',c={unversionedId:"api/ServiceStack.Auth/IPasswordHasher",id:"api/ServiceStack.Auth/IPasswordHasher",title:"Interface IPasswordHasher",description:"The Password Hasher provider used to hash users passwords, by default uses the same algorithm used by ASP.NET Identity v3: PBKDF2 with HMAC-SHA256, 128-bit salt, 256-bit subkey, 10000 iterations.",source:"@site/docs/api/ServiceStack.Auth/IPasswordHasher.md",sourceDirName:"api/ServiceStack.Auth",slug:"/api/ServiceStack.Auth/IPasswordHasher",permalink:"/api/ServiceStack.Auth/IPasswordHasher",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IPasswordHasher",sidebar_label:"IPasswordHasher",description:"The Password Hasher provider used to hash users passwords, by default uses the same algorithm used by ASP.NET Identity v3: PBKDF2 with HMAC-SHA256, 128-bit salt, 256-bit subkey, 10000 iterations."},sidebar:"apiSidebar",previous:{title:"IOAuthProvider",permalink:"/api/ServiceStack.Auth/IOAuthProvider"},next:{title:"IQueryUserAuth",permalink:"/api/ServiceStack.Auth/IQueryUserAuth"}},d={},l=[{value:"<strong>Assembly</strong>: ServiceStack.Interfaces.dll",id:"assembly-servicestackinterfacesdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Version',id:"-version",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> VerifyPassword(String, String, out Boolean)',id:"-verifypasswordstring-string-out-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> HashPassword(String)',id:"-hashpasswordstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5}],h={toc:l};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,s.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-ipasswordhasher"},(0,r.kt)(i.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IPasswordHasher"),(0,r.kt)("p",null,"The Password Hasher provider used to hash users passwords, by default uses the same algorithm used by ASP.NET Identity v3:\nPBKDF2 with HMAC-SHA256, 128-bit salt, 256-bit subkey, 10000 iterations."),(0,r.kt)("h6",{id:"assembly-servicestackinterfacesdll"},(0,r.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Interfaces.dll"),(0,r.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Auth/IPasswordHasher.cs#L7"}," ",(0,r.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IPasswordHasher\n")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"-version"},(0,r.kt)(i.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Version"),(0,r.kt)("p",null,"The first byte marker used to specify the format used. The default implementation uses the following format:\n{ 0x01, prf (UInt32), iter count (UInt32), salt length (UInt32), salt, subkey }"),(0,r.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Auth/IPasswordHasher.cs#L13"}," ",(0,r.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"byte Version { get; }\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"-verifypasswordstring-string-out-boolean"},(0,r.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," VerifyPassword(String, String, out Boolean)"),(0,r.kt)("p",null,"Returns a boolean indicating whether the ","<",'code data-dev-comment-type="paramref" class="paramref"',">","providedPassword","<","/code",">"," matches the ","<",'code data-dev-comment-type="paramref" class="paramref"',">","hashedPassword","<","/code",">",".\nThe ","<",'code data-dev-comment-type="paramref" class="paramref"',">","needsRehash","<","/code",">"," out parameter indicates whether the password should be re-hashed."),(0,r.kt)("p",null,"Implementations of this method should be time consistent."),(0,r.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Auth/IPasswordHasher.cs#L22"}," ",(0,r.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"bool VerifyPassword(string hashedPassword, string providedPassword, out bool needsRehash)\n")),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Boolean")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"hashedPassword")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The hash value for a user","'","s stored password.")))),(0,r.kt)("p",null,"Implementations of this method should be time consistent.\n|\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"System.String")," | ",(0,r.kt)("em",{parentName:"p"},"providedPassword")," | The password supplied for comparison.\nImplementations of this method should be time consistent.\n|\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Boolean")," | ",(0,r.kt)("em",{parentName:"p"},"needsRehash")," |  |"),(0,r.kt)("h3",{id:"-hashpasswordstring"},(0,r.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," HashPassword(String)"),(0,r.kt)("p",null,"Returns a hashed representation of the supplied ","<",'code data-dev-comment-type="paramref" class="paramref"',">","password","<","/code",">","."),(0,r.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.Interfaces/Auth/IPasswordHasher.cs#L29"}," ",(0,r.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"string HashPassword(string password)\n")),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.String"),": A hashed representation of the supplied ","<",'code data-dev-comment-type="paramref" class="paramref"',">","password","<","/code",">","."),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"password")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The password to hash.")))),(0,r.kt)("p",null," |"))}m.isMDXComponent=!0}}]);