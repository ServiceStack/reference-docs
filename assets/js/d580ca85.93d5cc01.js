"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[926],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return k}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),s=d(a),k=r,u=s["".concat(o,".").concat(k)]||s[k]||c[k]||i;return a?n.createElement(u,l(l({ref:t},p),{},{components:a})):n.createElement(u,l({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=s;var m={};for(var o in t)hasOwnProperty.call(t,o)&&(m[o]=t[o]);m.originalType=e,m.mdxType="string"==typeof e?e:r,l[1]=m;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},38096:function(e,t,a){a.r(t),a.d(t,{assets:function(){return o},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return d}});var n=a(83117),r=(a(67294),a(3905));const i={title:"Class OrmLiteWriteApi",sidebar_label:"OrmLiteWriteApi"},l="Class OrmLiteWriteApi",m={unversionedId:"api/ServiceStack.OrmLite/OrmLiteWriteApi",id:"api/ServiceStack.OrmLite/OrmLiteWriteApi",title:"Class OrmLiteWriteApi",description:"Assembly: ServiceStack.OrmLite.dll",source:"@site/docs/api/ServiceStack.OrmLite/OrmLiteWriteApi.md",sourceDirName:"api/ServiceStack.OrmLite",slug:"/api/ServiceStack.OrmLite/OrmLiteWriteApi",permalink:"/api/ServiceStack.OrmLite/OrmLiteWriteApi",draft:!1,tags:[],version:"current",frontMatter:{title:"Class OrmLiteWriteApi",sidebar_label:"OrmLiteWriteApi"},sidebar:"apiSidebar",previous:{title:"OrmLiteVariables",permalink:"/api/ServiceStack.OrmLite/OrmLiteVariables"},next:{title:"OrmLiteWriteApiAsync",permalink:"/api/ServiceStack.OrmLite/OrmLiteWriteApiAsync"}},o={},d=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Methods",id:"methods",level:2},{value:"GetLastSql(IDbConnection)",id:"getlastsqlidbconnection",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"GetLastSqlAndParams(IDbCommand)",id:"getlastsqlandparamsidbcommand",level:3},{value:"View Source",id:"view-source-2",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"ExecuteSql(IDbConnection, String)",id:"executesqlidbconnection-string",level:3},{value:"View Source",id:"view-source-3",level:6},{value:"Returns",id:"returns-2",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"ExecuteSql(IDbConnection, String, Object)",id:"executesqlidbconnection-string-object",level:3},{value:"View Source",id:"view-source-4",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:"ExecuteSql(IDbConnection, String, Dictionary&lt;String, Object&gt;)",id:"executesqlidbconnection-string-dictionarystring-object",level:3},{value:"View Source",id:"view-source-5",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:"Insert&lt;T&gt;(IDbConnection, T, Boolean, Boolean)",id:"inserttidbconnection-t-boolean-boolean",level:3},{value:"View Source",id:"view-source-6",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:"Insert&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;, Boolean)",id:"inserttidbconnection-t-actionidbcommand-boolean",level:3},{value:"View Source",id:"view-source-7",level:6},{value:"Returns",id:"returns-6",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"Insert&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;, Boolean)",id:"inserttidbconnection-dictionarystring-object-boolean",level:3},{value:"View Source",id:"view-source-8",level:6},{value:"Returns",id:"returns-7",level:5},{value:"Parameters",id:"parameters-7",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:"Insert&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, Dictionary&lt;String, Object&gt;, Boolean)",id:"inserttidbconnection-actionidbcommand-dictionarystring-object-boolean",level:3},{value:"View Source",id:"view-source-9",level:6},{value:"Returns",id:"returns-8",level:5},{value:"Parameters",id:"parameters-8",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:"InsertUsingDefaults&lt;T&gt;(IDbConnection, T[])",id:"insertusingdefaultstidbconnection-t",level:3},{value:"View Source",id:"view-source-10",level:6},{value:"Parameters",id:"parameters-9",level:5},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:"InsertIntoSelect&lt;T&gt;(IDbConnection, ISqlExpression)",id:"insertintoselecttidbconnection-isqlexpression",level:3},{value:"View Source",id:"view-source-11",level:6},{value:"Returns",id:"returns-9",level:5},{value:"Parameters",id:"parameters-10",level:5},{value:"Type Parameters",id:"type-parameters-5",level:5},{value:"InsertIntoSelect&lt;T&gt;(IDbConnection, ISqlExpression, Action&lt;IDbCommand&gt;)",id:"insertintoselecttidbconnection-isqlexpression-actionidbcommand",level:3},{value:"View Source",id:"view-source-12",level:6},{value:"Returns",id:"returns-10",level:5},{value:"Parameters",id:"parameters-11",level:5},{value:"Type Parameters",id:"type-parameters-6",level:5},{value:"InsertAll&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;)",id:"insertalltidbconnection-ienumerablet",level:3},{value:"View Source",id:"view-source-13",level:6},{value:"Parameters",id:"parameters-12",level:5},{value:"Type Parameters",id:"type-parameters-7",level:5},{value:"InsertAll&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, Action&lt;IDbCommand&gt;)",id:"insertalltidbconnection-ienumerablet-actionidbcommand",level:3},{value:"View Source",id:"view-source-14",level:6},{value:"Parameters",id:"parameters-13",level:5},{value:"Type Parameters",id:"type-parameters-8",level:5},{value:"Insert&lt;T&gt;(IDbConnection, T[])",id:"inserttidbconnection-t",level:3},{value:"View Source",id:"view-source-15",level:6},{value:"Parameters",id:"parameters-14",level:5},{value:"Type Parameters",id:"type-parameters-9",level:5},{value:"Insert&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, T[])",id:"inserttidbconnection-actionidbcommand-t",level:3},{value:"View Source",id:"view-source-16",level:6},{value:"Parameters",id:"parameters-15",level:5},{value:"Type Parameters",id:"type-parameters-10",level:5},{value:"Update&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;)",id:"updatetidbconnection-t-actionidbcommand",level:3},{value:"View Source",id:"view-source-17",level:6},{value:"Returns",id:"returns-11",level:5},{value:"Parameters",id:"parameters-16",level:5},{value:"Type Parameters",id:"type-parameters-11",level:5},{value:"Update&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;, Action&lt;IDbCommand&gt;)",id:"updatetidbconnection-dictionarystring-object-actionidbcommand",level:3},{value:"View Source",id:"view-source-18",level:6},{value:"Returns",id:"returns-12",level:5},{value:"Parameters",id:"parameters-17",level:5},{value:"Type Parameters",id:"type-parameters-12",level:5},{value:"Update&lt;T&gt;(IDbConnection, T[])",id:"updatetidbconnection-t",level:3},{value:"View Source",id:"view-source-19",level:6},{value:"Returns",id:"returns-13",level:5},{value:"Parameters",id:"parameters-18",level:5},{value:"Type Parameters",id:"type-parameters-13",level:5},{value:"Update&lt;T&gt;(IDbConnection, Action&lt;IDbCommand&gt;, T[])",id:"updatetidbconnection-actionidbcommand-t",level:3},{value:"View Source",id:"view-source-20",level:6},{value:"Returns",id:"returns-14",level:5},{value:"Parameters",id:"parameters-19",level:5},{value:"Type Parameters",id:"type-parameters-14",level:5},{value:"UpdateAll&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;, Action&lt;IDbCommand&gt;)",id:"updatealltidbconnection-ienumerablet-actionidbcommand",level:3},{value:"View Source",id:"view-source-21",level:6},{value:"Returns",id:"returns-15",level:5},{value:"Parameters",id:"parameters-20",level:5},{value:"Type Parameters",id:"type-parameters-15",level:5},{value:"Delete&lt;T&gt;(IDbConnection, Object, Action&lt;IDbCommand&gt;)",id:"deletetidbconnection-object-actionidbcommand",level:3},{value:"View Source",id:"view-source-22",level:6},{value:"Returns",id:"returns-16",level:5},{value:"Parameters",id:"parameters-21",level:5},{value:"Type Parameters",id:"type-parameters-16",level:5},{value:"Delete&lt;T&gt;(IDbConnection, Dictionary&lt;String, Object&gt;)",id:"deletetidbconnection-dictionarystring-object",level:3},{value:"View Source",id:"view-source-23",level:6},{value:"Returns",id:"returns-17",level:5},{value:"Parameters",id:"parameters-22",level:5},{value:"Type Parameters",id:"type-parameters-17",level:5},{value:"Delete&lt;T&gt;(IDbConnection, T, Action&lt;IDbCommand&gt;)",id:"deletetidbconnection-t-actionidbcommand",level:3},{value:"View Source",id:"view-source-24",level:6},{value:"Returns",id:"returns-18",level:5},{value:"Parameters",id:"parameters-23",level:5},{value:"Type Parameters",id:"type-parameters-18",level:5},{value:"Delete&lt;T&gt;(IDbConnection, T[])",id:"deletetidbconnection-t",level:3},{value:"View Source",id:"view-source-25",level:6},{value:"Returns",id:"returns-19",level:5},{value:"Parameters",id:"parameters-24",level:5},{value:"Type Parameters",id:"type-parameters-19",level:5},{value:"DeleteNonDefaults&lt;T&gt;(IDbConnection, T)",id:"deletenondefaultstidbconnection-t",level:3},{value:"View Source",id:"view-source-26",level:6},{value:"Returns",id:"returns-20",level:5},{value:"Parameters",id:"parameters-25",level:5},{value:"Type Parameters",id:"type-parameters-20",level:5},{value:"DeleteNonDefaults&lt;T&gt;(IDbConnection, T[])",id:"deletenondefaultstidbconnection-t-1",level:3},{value:"View Source",id:"view-source-27",level:6},{value:"Returns",id:"returns-21",level:5},{value:"Parameters",id:"parameters-26",level:5},{value:"Type Parameters",id:"type-parameters-21",level:5},{value:"DeleteById&lt;T&gt;(IDbConnection, Object, Action&lt;IDbCommand&gt;)",id:"deletebyidtidbconnection-object-actionidbcommand",level:3},{value:"View Source",id:"view-source-28",level:6},{value:"Returns",id:"returns-22",level:5},{value:"Parameters",id:"parameters-27",level:5},{value:"Type Parameters",id:"type-parameters-22",level:5},{value:"DeleteById&lt;T&gt;(IDbConnection, Object, UInt64, Action&lt;IDbCommand&gt;)",id:"deletebyidtidbconnection-object-uint64-actionidbcommand",level:3},{value:"View Source",id:"view-source-29",level:6},{value:"Parameters",id:"parameters-28",level:5},{value:"Type Parameters",id:"type-parameters-23",level:5},{value:"DeleteByIds&lt;T&gt;(IDbConnection, IEnumerable)",id:"deletebyidstidbconnection-ienumerable",level:3},{value:"View Source",id:"view-source-30",level:6},{value:"Returns",id:"returns-23",level:5},{value:"Parameters",id:"parameters-29",level:5},{value:"Type Parameters",id:"type-parameters-24",level:5},{value:"DeleteAll&lt;T&gt;(IDbConnection)",id:"deletealltidbconnection",level:3},{value:"View Source",id:"view-source-31",level:6},{value:"Returns",id:"returns-24",level:5},{value:"Parameters",id:"parameters-30",level:5},{value:"Type Parameters",id:"type-parameters-25",level:5},{value:"DeleteAll&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;)",id:"deletealltidbconnection-ienumerablet",level:3},{value:"View Source",id:"view-source-32",level:6},{value:"Returns",id:"returns-25",level:5},{value:"Parameters",id:"parameters-31",level:5},{value:"Type Parameters",id:"type-parameters-26",level:5},{value:"DeleteAll(IDbConnection, Type)",id:"deleteallidbconnection-type",level:3},{value:"View Source",id:"view-source-33",level:6},{value:"Returns",id:"returns-26",level:5},{value:"Parameters",id:"parameters-32",level:5},{value:"Delete&lt;T&gt;(IDbConnection, String, Object)",id:"deletetidbconnection-string-object",level:3},{value:"View Source",id:"view-source-34",level:6},{value:"Returns",id:"returns-27",level:5},{value:"Parameters",id:"parameters-33",level:5},{value:"Type Parameters",id:"type-parameters-27",level:5},{value:"Delete(IDbConnection, Type, String, Object)",id:"deleteidbconnection-type-string-object",level:3},{value:"View Source",id:"view-source-35",level:6},{value:"Returns",id:"returns-28",level:5},{value:"Parameters",id:"parameters-34",level:5},{value:"Save&lt;T&gt;(IDbConnection, T, Boolean)",id:"savetidbconnection-t-boolean",level:3},{value:"View Source",id:"view-source-36",level:6},{value:"Returns",id:"returns-29",level:5},{value:"Parameters",id:"parameters-35",level:5},{value:"Type Parameters",id:"type-parameters-28",level:5},{value:"Save&lt;T&gt;(IDbConnection, T[])",id:"savetidbconnection-t",level:3},{value:"View Source",id:"view-source-37",level:6},{value:"Returns",id:"returns-30",level:5},{value:"Parameters",id:"parameters-36",level:5},{value:"Type Parameters",id:"type-parameters-29",level:5},{value:"SaveAll&lt;T&gt;(IDbConnection, IEnumerable&lt;T&gt;)",id:"savealltidbconnection-ienumerablet",level:3},{value:"View Source",id:"view-source-38",level:6},{value:"Returns",id:"returns-31",level:5},{value:"Parameters",id:"parameters-37",level:5},{value:"Type Parameters",id:"type-parameters-30",level:5},{value:"SaveAllReferences&lt;T&gt;(IDbConnection, T)",id:"saveallreferencestidbconnection-t",level:3},{value:"View Source",id:"view-source-39",level:6},{value:"Parameters",id:"parameters-38",level:5},{value:"Type Parameters",id:"type-parameters-31",level:5},{value:"SaveReferences&lt;T, TRef&gt;(IDbConnection, T, TRef[])",id:"savereferencest-trefidbconnection-t-tref",level:3},{value:"View Source",id:"view-source-40",level:6},{value:"Parameters",id:"parameters-39",level:5},{value:"Type Parameters",id:"type-parameters-32",level:5},{value:"SaveReferences&lt;T, TRef&gt;(IDbConnection, T, List&lt;TRef&gt;)",id:"savereferencest-trefidbconnection-t-listtref",level:3},{value:"View Source",id:"view-source-41",level:6},{value:"Parameters",id:"parameters-40",level:5},{value:"Type Parameters",id:"type-parameters-33",level:5},{value:"SaveReferences&lt;T, TRef&gt;(IDbConnection, T, IEnumerable&lt;TRef&gt;)",id:"savereferencest-trefidbconnection-t-ienumerabletref",level:3},{value:"View Source",id:"view-source-42",level:6},{value:"Parameters",id:"parameters-41",level:5},{value:"Type Parameters",id:"type-parameters-34",level:5},{value:"GetRowVersion&lt;T&gt;(IDbConnection, Object)",id:"getrowversiontidbconnection-object",level:3},{value:"View Source",id:"view-source-43",level:6},{value:"Returns",id:"returns-32",level:5},{value:"Parameters",id:"parameters-42",level:5},{value:"Type Parameters",id:"type-parameters-35",level:5},{value:"GetRowVersion(IDbConnection, Type, Object)",id:"getrowversionidbconnection-type-object",level:3},{value:"View Source",id:"view-source-44",level:6},{value:"Returns",id:"returns-33",level:5},{value:"Parameters",id:"parameters-43",level:5},{value:"ExecuteProcedure&lt;T&gt;(IDbConnection, T)",id:"executeproceduretidbconnection-t",level:3},{value:"View Source",id:"view-source-45",level:6},{value:"Parameters",id:"parameters-44",level:5},{value:"Type Parameters",id:"type-parameters-36",level:5},{value:"ToUpdateStatement&lt;T&gt;(IDbConnection, T, ICollection&lt;String&gt;)",id:"toupdatestatementtidbconnection-t-icollectionstring",level:3},{value:"View Source",id:"view-source-46",level:6},{value:"Returns",id:"returns-34",level:5},{value:"Parameters",id:"parameters-45",level:5},{value:"Type Parameters",id:"type-parameters-37",level:5},{value:"ToInsertStatement&lt;T&gt;(IDbConnection, T, ICollection&lt;String&gt;)",id:"toinsertstatementtidbconnection-t-icollectionstring",level:3},{value:"View Source",id:"view-source-47",level:6},{value:"Returns",id:"returns-35",level:5},{value:"Parameters",id:"parameters-46",level:5},{value:"Type Parameters",id:"type-parameters-38",level:5}],p={toc:d};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"class-ormlitewriteapi"},"Class OrmLiteWriteApi"),(0,r.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,r.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,r.kt)("h6",{id:"view-source"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L12"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class OrmLiteWriteApi\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"getlastsqlidbconnection"},"GetLastSql(IDbConnection)"),(0,r.kt)("p",null,"Get the last SQL statement that was executed."),(0,r.kt)("h6",{id:"view-source-1"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L17"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static string GetLastSql(this IDbConnection dbConn)\n")),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.String")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))))),(0,r.kt)("h3",{id:"getlastsqlandparamsidbcommand"},"GetLastSqlAndParams(IDbCommand)"),(0,r.kt)("h6",{id:"view-source-2"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L22"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static string GetLastSqlAndParams(this IDbCommand dbCmd)\n")),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.String")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbCommand")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbCmd"))))),(0,r.kt)("h3",{id:"executesqlidbconnection-string"},"ExecuteSql(IDbConnection, String)"),(0,r.kt)("p",null,"Execute any arbitrary raw SQL."),(0,r.kt)("h6",{id:"view-source-3"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L43"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int ExecuteSql(this IDbConnection dbConn, string sql)\n")),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows affected"),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sql"))))),(0,r.kt)("h3",{id:"executesqlidbconnection-string-object"},"ExecuteSql(IDbConnection, String, Object)"),(0,r.kt)("p",null,"Execute any arbitrary raw SQL with db params."),(0,r.kt)("h6",{id:"view-source-4"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L52"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int ExecuteSql(this IDbConnection dbConn, string sql, object dbParams)\n")),(0,r.kt)("h5",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows affected"),(0,r.kt)("h5",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sql"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbParams"))))),(0,r.kt)("h3",{id:"executesqlidbconnection-string-dictionarystring-object"},"ExecuteSql(IDbConnection, String, Dictionary","<","String, Object",">",")"),(0,r.kt)("p",null,"Execute any arbitrary raw SQL with db params."),(0,r.kt)("h6",{id:"view-source-5"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L61"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int ExecuteSql(this IDbConnection dbConn, string sql, Dictionary<string, object> dbParams)\n")),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows affected"),(0,r.kt)("h5",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sql"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbParams"))))),(0,r.kt)("h3",{id:"inserttidbconnection-t-boolean-boolean"},"Insert","<","T",">","(IDbConnection, T, Boolean, Boolean)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Person { Id = 1, FirstName = ",'"',"Jimi }, selectIdentity:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-6"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L70"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long Insert<T>(this IDbConnection dbConn, T obj, bool selectIdentity = false, bool enableIdentityInsert = false)\n")),(0,r.kt)("h5",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"enableIdentityInsert"))))),(0,r.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"inserttidbconnection-t-actionidbcommand-boolean"},"Insert","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",", Boolean)"),(0,r.kt)("p",null,"Insert 1 POCO and modify populated IDbCommand with a commandFilter. E.g:\n","<","p",">","var id = db.Insert(new Person { Id = 1, FirstName = ",'"',"Jimi }, dbCmd =",">"," applyFilter(dbCmd))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-7"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L79"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long Insert<T>(this IDbConnection dbConn, T obj, Action<IDbCommand> commandFilter, bool selectIdentity = false)\n")),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))))),(0,r.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"inserttidbconnection-dictionarystring-object-boolean"},"Insert","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",", Boolean)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi }, selectIdentity:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-8"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L88"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long Insert<T>(this IDbConnection dbConn, Dictionary<string, object> obj, bool selectIdentity = false)\n")),(0,r.kt)("h5",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))))),(0,r.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"inserttidbconnection-actionidbcommand-dictionarystring-object-boolean"},"Insert","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", Dictionary","<","String, Object",">",", Boolean)"),(0,r.kt)("p",null,"Insert 1 POCO, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","var id = db.Insert(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi }, dbCmd =",">"," applyFilter(dbCmd))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-9"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L97"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long Insert<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, Dictionary<string, object> obj, bool selectIdentity = false)\n")),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"selectIdentity"))))),(0,r.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertusingdefaultstidbconnection-t"},"InsertUsingDefaults","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction using Table default values when defined. E.g:\n","<","p",">","db.InsertUsingDefaults(new Person { FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"'," },","<","/p",">","\n","<","p",">","                       new Person { FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"'," })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-10"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L107"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void InsertUsingDefaults<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertintoselecttidbconnection-isqlexpression"},"InsertIntoSelect","<","T",">","(IDbConnection, ISqlExpression)"),(0,r.kt)("p",null,"Insert results from SELECT SqlExpression, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","db.InsertIntoSelect","<","Contact",">","(db.From","<","Person",">","().Select(x =",">"," new { x.Id, Surname == x.LastName }))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-11"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L116"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long InsertIntoSelect<T>(this IDbConnection dbConn, ISqlExpression query)\n")),(0,r.kt)("h5",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/ISqlExpression"},"ServiceStack.OrmLite.ISqlExpression")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"query"))))),(0,r.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertintoselecttidbconnection-isqlexpression-actionidbcommand"},"InsertIntoSelect","<","T",">","(IDbConnection, ISqlExpression, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Insert results from SELECT SqlExpression, use selectIdentity to retrieve the last insert AutoIncrement id (if any). E.g:\n","<","p",">","db.InsertIntoSelect","<","Contact",">","(db.From","<","Person",">","().Select(x =",">"," new { x.Id, Surname == x.LastName }))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-12"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L125"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static long InsertIntoSelect<T>(this IDbConnection dbConn, ISqlExpression query, Action<IDbCommand> commandFilter)\n")),(0,r.kt)("h5",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int64")),(0,r.kt)("h5",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite/ISqlExpression"},"ServiceStack.OrmLite.ISqlExpression")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"query"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-6"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertalltidbconnection-ienumerablet"},"InsertAll","<","T",">","(IDbConnection, IEnumerable","<","T",">",")"),(0,r.kt)("p",null,"Insert a collection of POCOs in a transaction. E.g:\n","<","p",">","db.InsertAll(new[] { new Person { Id = 9, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-13"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L134"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void InsertAll<T>(this IDbConnection dbConn, IEnumerable<T> objs)\n")),(0,r.kt)("h5",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-7"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"insertalltidbconnection-ienumerablet-actionidbcommand"},"InsertAll","<","T",">","(IDbConnection, IEnumerable","<","T",">",", Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Insert a collection of POCOs in a transaction and modify populated IDbCommand with a commandFilter. E.g:\n","<","p",">","db.InsertAll(new[] { new Person { Id = 9, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 } },","<","/p",">","\n","<","p",">","             dbCmd =",">"," applyFilter(dbCmd))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-14"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L144"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void InsertAll<T>(this IDbConnection dbConn, IEnumerable<T> objs, Action<IDbCommand> commandFilter)\n")),(0,r.kt)("h5",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-8"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"inserttidbconnection-t"},"Insert","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.Insert(new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","          new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-15"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L154"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void Insert<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-9"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"inserttidbconnection-actionidbcommand-t"},"Insert","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", T[])"),(0,r.kt)("p",null,"Insert 1 or more POCOs in a transaction and modify populated IDbCommand with a commandFilter. E.g:\n","<","p",">","db.Insert(dbCmd =",">"," applyFilter(dbCmd),","<","/p",">","\n","<","p",">","          new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","          new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-16"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L165"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void Insert<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, params T[] objs)\n")),(0,r.kt)("h5",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-10"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updatetidbconnection-t-actionidbcommand"},"Update","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Updates 1 POCO. All fields are updated except for the PrimaryKey which is used as the identity selector. E.g:\n","<","p",">","db.Update(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-17"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L174"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Update<T>(this IDbConnection dbConn, T obj, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-11"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updatetidbconnection-dictionarystring-object-actionidbcommand"},"Update","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",", Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Updates 1 POCO. All fields are updated except for the PrimaryKey which is used as the identity selector. E.g:\n","<","p",">","db.Update(new Dictionary","<","string,object",">"," { ",'["',"Id",'"]'," = 1, ",'["',"FirstName",'"]'," = ",'"',"Jimi",'"'," })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-18"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L183"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Update<T>(this IDbConnection dbConn, Dictionary<string, object> obj, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-12"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updatetidbconnection-t"},"Update","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Updates 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.Update(new Person { Id = 1, FirstName = ",'"',"Tupac",'"',", LastName = ",'"',"Shakur",'"',", Age = 25 },","<","/p",">","\n","<","p",">","new Person { Id = 2, FirstName = ",'"',"Biggie",'"',", LastName = ",'"',"Smalls",'"',", Age = 24 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-19"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L193"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Update<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-13"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updatetidbconnection-actionidbcommand-t"},"Update","<","T",">","(IDbConnection, Action","<","IDbCommand",">",", T[])"),(0,r.kt)("h6",{id:"view-source-20"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L197"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Update<T>(this IDbConnection dbConn, Action<IDbCommand> commandFilter, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-14"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"updatealltidbconnection-ienumerablet-actionidbcommand"},"UpdateAll","<","T",">","(IDbConnection, IEnumerable","<","T",">",", Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Updates 1 or more POCOs in a transaction. E.g:\n","<","p",">","db.UpdateAll(new[] { new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-21"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L206"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int UpdateAll<T>(this IDbConnection dbConn, IEnumerable<T> objs, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-15"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletetidbconnection-object-actionidbcommand"},"Delete","<","T",">","(IDbConnection, Object, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Delete rows using an anonymous type filter. E.g:\n","<","p",">","db.Delete","<","Person",">","(new { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-22"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L216"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, object anonFilter, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-16"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletetidbconnection-dictionarystring-object"},"Delete","<","T",">","(IDbConnection, Dictionary","<","String, Object",">",")"),(0,r.kt)("p",null,"Delete rows using an Object Dictionary filters. E.g:\n","<","p",">","db.Delete","<","Person",">","(new Dictionary","<","string,object",">"," { ",'["',"FirstName",'"]'," = ",'"',"Jimi",'"',", ",'["',"Age",'"]'," = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-23"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L226"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, Dictionary<string, object> filters)\n")),(0,r.kt)("h5",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.Dictionary<System.String,System.Object>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"filters"))))),(0,r.kt)("h5",{id:"type-parameters-17"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletetidbconnection-t-actionidbcommand"},"Delete","<","T",">","(IDbConnection, T, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Delete 1 row using all fields in the filter. E.g:\n","<","p",">","db.Delete(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-24"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L236"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, T allFieldsFilter, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"allFieldsFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-18"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletetidbconnection-t"},"Delete","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Delete 1 or more rows in a transaction using all fields in the filter. E.g:\n","<","p",">","db.Delete(new Person { Id = 1, FirstName = ",'"',"Jimi",'"',", LastName = ",'"',"Hendrix",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-25"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L245"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, params T[] allFieldsFilters)\n")),(0,r.kt)("h5",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,r.kt)("h5",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"allFieldsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-19"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletenondefaultstidbconnection-t"},"DeleteNonDefaults","<","T",">","(IDbConnection, T)"),(0,r.kt)("p",null,"Delete 1 or more rows using only field with non-default values in the filter. E.g:\n","<","p",">","db.DeleteNonDefaults(new Person { FirstName = ",'"',"Jimi",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-26"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L255"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteNonDefaults<T>(this IDbConnection dbConn, T nonDefaultsFilter)\n")),(0,r.kt)("h5",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"nonDefaultsFilter"))))),(0,r.kt)("h5",{id:"type-parameters-20"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletenondefaultstidbconnection-t-1"},"DeleteNonDefaults","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Delete 1 or more rows in a transaction using only field with non-default values in the filter. E.g:\n","<","p",">","db.DeleteNonDefaults(new Person { FirstName = ",'"',"Jimi",'"',", Age = 27 },\nnew Person { FirstName = ",'"',"Janis",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-27"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L266"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteNonDefaults<T>(this IDbConnection dbConn, params T[] nonDefaultsFilters)\n")),(0,r.kt)("h5",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"nonDefaultsFilters"))))),(0,r.kt)("h5",{id:"type-parameters-21"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidtidbconnection-object-actionidbcommand"},"DeleteById","<","T",">","(IDbConnection, Object, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Delete 1 row by the PrimaryKey. E.g:\n","<","p",">","db.DeleteById","<","Person",">","(1)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-28"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L276"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteById<T>(this IDbConnection dbConn, object id, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-22"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidtidbconnection-object-uint64-actionidbcommand"},"DeleteById","<","T",">","(IDbConnection, Object, UInt64, Action","<","IDbCommand",">",")"),(0,r.kt)("p",null,"Delete 1 row by the PrimaryKey where the rowVersion matches the optimistic concurrency field.\nWill throw ","<",'exception cref="!:OptimisticConcurrencyException"',">","RowModifiedException","<","/exception",">"," if the\nrow does not exist or has a different row version.\nE.g: ","<","p",">","db.DeleteById","<","Person",">","(1)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-29"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L287"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void DeleteById<T>(this IDbConnection dbConn, object id, ulong rowVersion, Action<IDbCommand> commandFilter = null)\n")),(0,r.kt)("h5",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.UInt64")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"rowVersion"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Action<System.Data.IDbCommand>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"commandFilter"))))),(0,r.kt)("h5",{id:"type-parameters-23"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletebyidstidbconnection-ienumerable"},"DeleteByIds","<","T",">","(IDbConnection, IEnumerable)"),(0,r.kt)("p",null,"Delete all rows identified by the PrimaryKeys. E.g:\n","<","p",">","db.DeleteById","<","Person",">","(new[] { 1, 2, 3 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-30"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L297"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteByIds<T>(this IDbConnection dbConn, IEnumerable idValues)\n")),(0,r.kt)("h5",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.IEnumerable")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"idValues"))))),(0,r.kt)("h5",{id:"type-parameters-24"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletealltidbconnection"},"DeleteAll","<","T",">","(IDbConnection)"),(0,r.kt)("p",null,"Delete all rows in the generic table type. E.g:\n","<","p",">","db.DeleteAll","<","Person",">","()","<","/p",">"),(0,r.kt)("h6",{id:"view-source-31"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L307"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteAll<T>(this IDbConnection dbConn)\n")),(0,r.kt)("h5",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))))),(0,r.kt)("h5",{id:"type-parameters-25"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deletealltidbconnection-ienumerablet"},"DeleteAll","<","T",">","(IDbConnection, IEnumerable","<","T",">",")"),(0,r.kt)("p",null,"Delete all rows provided. E.g:\n","<","p",">","db.DeleteAll","<","Person",">","(people)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-32"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L317"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteAll<T>(this IDbConnection dbConn, IEnumerable<T> rows)\n")),(0,r.kt)("h5",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"rows"))))),(0,r.kt)("h5",{id:"type-parameters-26"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteallidbconnection-type"},"DeleteAll(IDbConnection, Type)"),(0,r.kt)("p",null,"Delete all rows in the runtime table type. E.g:\n","<","p",">","db.DeleteAll(typeof(Person))","<","/p",">"),(0,r.kt)("h6",{id:"view-source-33"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L327"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int DeleteAll(this IDbConnection dbConn, Type tableType)\n")),(0,r.kt)("h5",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"tableType"))))),(0,r.kt)("h3",{id:"deletetidbconnection-string-object"},"Delete","<","T",">","(IDbConnection, String, Object)"),(0,r.kt)("p",null,"Delete rows using a SqlFormat filter. E.g:\n","<","p",">","db.Delete","<","Person",">","(",'"',"Age ",">"," @age",'"',", new { age = 42 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-34"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L337"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete<T>(this IDbConnection dbConn, string sqlFilter, object anonType)\n")),(0,r.kt)("h5",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-33"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sqlFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonType"))))),(0,r.kt)("h5",{id:"type-parameters-27"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"deleteidbconnection-type-string-object"},"Delete(IDbConnection, Type, String, Object)"),(0,r.kt)("p",null,"Delete rows using a SqlFormat filter. E.g:\n","<","p",">","db.Delete(typeof(Person), ",'"',"Age ",">"," @age",'"',", new { age = 42 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-35"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L347"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Delete(this IDbConnection dbConn, Type tableType, string sqlFilter, object anonType)\n")),(0,r.kt)("h5",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows deleted"),(0,r.kt)("h5",{id:"parameters-34"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"tableType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.String")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"sqlFilter"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"anonType"))))),(0,r.kt)("h3",{id:"savetidbconnection-t-boolean"},"Save","<","T",">","(IDbConnection, T, Boolean)"),(0,r.kt)("p",null,"Insert a new row or update existing row. Returns true if a new row was inserted.\nOptional references param decides whether to save all related references as well. E.g:\n","<","p",">","db.Save(customer, references:true)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-36"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L358"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool Save<T>(this IDbConnection dbConn, T obj, bool references = false)\n")),(0,r.kt)("h5",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Boolean"),": true if a row was inserted; false if it was updated"),(0,r.kt)("h5",{id:"parameters-35"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"references"))))),(0,r.kt)("h5",{id:"type-parameters-28"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"savetidbconnection-t"},"Save","<","T",">","(IDbConnection, T[])"),(0,r.kt)("p",null,"Insert new rows or update existing rows. Return number of rows added E.g:\n","<","p",">","db.Save(new Person { Id = 10, FirstName = ",'"',"Amy",'"',", LastName = ",'"',"Winehouse",'"',", Age = 27 })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-37"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L381"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int Save<T>(this IDbConnection dbConn, params T[] objs)\n")),(0,r.kt)("h5",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows added"),(0,r.kt)("h5",{id:"parameters-36"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-29"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"savealltidbconnection-ienumerablet"},"SaveAll","<","T",">","(IDbConnection, IEnumerable","<","T",">",")"),(0,r.kt)("p",null,"Insert new rows or update existing rows. Return number of rows added E.g:\n","<","p",">","db.SaveAll(new [] { new Person { Id = 10, FirstName = ",'"',"Amy",'"',", LastName = ",'"',"Winehouse",'"',", Age = 27 } })","<","/p",">"),(0,r.kt)("h6",{id:"view-source-38"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L391"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static int SaveAll<T>(this IDbConnection dbConn, IEnumerable<T> objs)\n")),(0,r.kt)("h5",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Int32"),": number of rows added"),(0,r.kt)("h5",{id:"parameters-37"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<T>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"objs"))))),(0,r.kt)("h5",{id:"type-parameters-30"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"saveallreferencestidbconnection-t"},"SaveAllReferences","<","T",">","(IDbConnection, T)"),(0,r.kt)("p",null,"Populates all related references on the instance with its primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveAllReferences(customer)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-39"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L400"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SaveAllReferences<T>(this IDbConnection dbConn, T instance)\n")),(0,r.kt)("h5",{id:"parameters-38"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))))),(0,r.kt)("h5",{id:"type-parameters-31"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"savereferencest-trefidbconnection-t-tref"},"SaveReferences","<","T, TRef",">","(IDbConnection, T, TRef[])"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReference(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-40"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L409"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SaveReferences<T, TRef>(this IDbConnection dbConn, T instance, params TRef[] refs)\n")),(0,r.kt)("h5",{id:"parameters-39"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<TRef>[]")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))))),(0,r.kt)("h5",{id:"type-parameters-32"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"savereferencest-trefidbconnection-t-listtref"},"SaveReferences","<","T, TRef",">","(IDbConnection, T, List","<","TRef",">",")"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReference(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-41"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L418"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SaveReferences<T, TRef>(this IDbConnection dbConn, T instance, List<TRef> refs)\n")),(0,r.kt)("h5",{id:"parameters-40"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.List<<TRef>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))))),(0,r.kt)("h5",{id:"type-parameters-33"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"savereferencest-trefidbconnection-t-ienumerabletref"},"SaveReferences","<","T, TRef",">","(IDbConnection, T, IEnumerable","<","TRef",">",")"),(0,r.kt)("p",null,"Populates the related references with the instance primary key and saves them. Uses ","'","(T)Id","'"," naming convention. E.g:\n","<","p",">","db.SaveReferences(customer, customer.Orders)","<","/p",">"),(0,r.kt)("h6",{id:"view-source-42"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L427"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void SaveReferences<T, TRef>(this IDbConnection dbConn, T instance, IEnumerable<TRef> refs)\n")),(0,r.kt)("h5",{id:"parameters-41"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"instance"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.IEnumerable<<TRef>>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"refs"))))),(0,r.kt)("h5",{id:"type-parameters-34"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRef"))),(0,r.kt)("h3",{id:"getrowversiontidbconnection-object"},"GetRowVersion","<","T",">","(IDbConnection, Object)"),(0,r.kt)("h6",{id:"view-source-43"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L432"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static object GetRowVersion<T>(this IDbConnection dbConn, object id)\n")),(0,r.kt)("h5",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,r.kt)("h5",{id:"parameters-42"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))))),(0,r.kt)("h5",{id:"type-parameters-35"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"getrowversionidbconnection-type-object"},"GetRowVersion(IDbConnection, Type, Object)"),(0,r.kt)("h6",{id:"view-source-44"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L437"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static object GetRowVersion(this IDbConnection dbConn, Type modelType, object id)\n")),(0,r.kt)("h5",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,r.kt)("h5",{id:"parameters-43"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"modelType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"id"))))),(0,r.kt)("h3",{id:"executeproceduretidbconnection-t"},"ExecuteProcedure","<","T",">","(IDbConnection, T)"),(0,r.kt)("h6",{id:"view-source-45"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L443"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static void ExecuteProcedure<T>(this IDbConnection dbConn, T obj)\n")),(0,r.kt)("h5",{id:"parameters-44"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"obj"))))),(0,r.kt)("h5",{id:"type-parameters-36"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"toupdatestatementtidbconnection-t-icollectionstring"},"ToUpdateStatement","<","T",">","(IDbConnection, T, ICollection","<","String",">",")"),(0,r.kt)("p",null,"Generates inline UPDATE SQL Statement"),(0,r.kt)("h6",{id:"view-source-46"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L451"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static string ToUpdateStatement<T>(this IDbConnection dbConn, T item, ICollection<string> updateFields = null)\n")),(0,r.kt)("h5",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.String")),(0,r.kt)("h5",{id:"parameters-45"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"item"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.ICollection<System.String>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"updateFields"))))),(0,r.kt)("h5",{id:"type-parameters-37"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))),(0,r.kt)("h3",{id:"toinsertstatementtidbconnection-t-icollectionstring"},"ToInsertStatement","<","T",">","(IDbConnection, T, ICollection","<","String",">",")"),(0,r.kt)("p",null,"Generates inline INSERT SQL Statement"),(0,r.kt)("h6",{id:"view-source-47"},(0,r.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/OrmLiteWriteApi.cs#L459"},"View Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static string ToInsertStatement<T>(this IDbConnection dbConn, T item, ICollection<string> insertFields = null)\n")),(0,r.kt)("h5",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.String")),(0,r.kt)("h5",{id:"parameters-46"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Data.IDbConnection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"dbConn"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"<T>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"item"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System.Collections.Generic.ICollection<System.String>")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"insertFields"))))),(0,r.kt)("h5",{id:"type-parameters-38"},"Type Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T"))))}c.isMDXComponent=!0}}]);