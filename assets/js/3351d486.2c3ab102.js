"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[80336],{24151:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return s}});var r=a(83117),n=(a(67294),a(3905)),c=a(1954);const l={title:"Delegate RecyclableMemoryStreamManager.StreamLengthReportHandler",sidebar_label:"RecyclableMemoryStreamManager.StreamLengthReportHandler",description:"Delegate for handling reports of stream size when streams are allocated"},o='<Icon icon="codicon:symbol-property" className="symbol-property" /> RecyclableMemoryStreamManager.StreamLengthReportHandler',i={unversionedId:"api/ServiceStack.Text/RecyclableMemoryStreamManager.StreamLengthReportHandler",id:"api/ServiceStack.Text/RecyclableMemoryStreamManager.StreamLengthReportHandler",title:"Delegate RecyclableMemoryStreamManager.StreamLengthReportHandler",description:"Delegate for handling reports of stream size when streams are allocated",source:"@site/docs/api/ServiceStack.Text/RecyclableMemoryStreamManager.StreamLengthReportHandler.md",sourceDirName:"api/ServiceStack.Text",slug:"/api/ServiceStack.Text/RecyclableMemoryStreamManager.StreamLengthReportHandler",permalink:"/api/ServiceStack.Text/RecyclableMemoryStreamManager.StreamLengthReportHandler",draft:!1,tags:[],version:"current",frontMatter:{title:"Delegate RecyclableMemoryStreamManager.StreamLengthReportHandler",sidebar_label:"RecyclableMemoryStreamManager.StreamLengthReportHandler",description:"Delegate for handling reports of stream size when streams are allocated"},sidebar:"apiSidebar",previous:{title:"RecyclableMemoryStreamManager.LargeBufferDiscardedEventHandler",permalink:"/api/ServiceStack.Text/RecyclableMemoryStreamManager.LargeBufferDiscardedEventHandler"},next:{title:"RecyclableMemoryStreamManager.UsageReportEventHandler",permalink:"/api/ServiceStack.Text/RecyclableMemoryStreamManager.UsageReportEventHandler"}},m={},s=[{value:"<strong>Assembly</strong>: ServiceStack.Text.dll",id:"assembly-servicestacktextdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6}],d={toc:s};function g(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-recyclablememorystreammanagerstreamlengthreporthandler"},(0,n.kt)(c.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," RecyclableMemoryStreamManager.StreamLengthReportHandler"),(0,n.kt)("p",null,"Delegate for handling reports of stream size when streams are allocated"),(0,n.kt)("h6",{id:"assembly-servicestacktextdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Text.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Text/src/ServiceStack.Text/RecyclableMemoryStream.cs#L366"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public delegate void StreamLengthReportHandler(long bytes);\n")))}g.isMDXComponent=!0}}]);