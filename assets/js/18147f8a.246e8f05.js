"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[89511],{65222:function(e,t,i){i.r(t),i.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return n},metadata:function(){return r},toc:function(){return m}});var a=i(83117),s=(i(67294),i(3905)),c=i(1954);const n={title:"Namespace ServiceStack.Html.AntiXsrf",sidebar_label:"ServiceStack.Html.AntiXsrf",sidebar_position:0},o="Namespace ServiceStack.Html.AntiXsrf",r={unversionedId:"api/ServiceStack.Html.AntiXsrf/ServiceStack.Html.AntiXsrf",id:"api/ServiceStack.Html.AntiXsrf/ServiceStack.Html.AntiXsrf",title:"Namespace ServiceStack.Html.AntiXsrf",description:"",source:"@site/docs/api/ServiceStack.Html.AntiXsrf/ServiceStack.Html.AntiXsrf.md",sourceDirName:"api/ServiceStack.Html.AntiXsrf",slug:"/api/ServiceStack.Html.AntiXsrf/",permalink:"/api/ServiceStack.Html.AntiXsrf/",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace ServiceStack.Html.AntiXsrf",sidebar_label:"ServiceStack.Html.AntiXsrf",sidebar_position:0},sidebar:"apiSidebar",previous:{title:"ViewDataInfo",permalink:"/api/ServiceStack.Html/ViewDataInfo"},next:{title:"AntiForgery",permalink:"/api/ServiceStack.Html.AntiXsrf/AntiForgery"}},l={},m=[{value:"Classes",id:"classes",level:2},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> AntiForgery',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--antiforgery",level:3},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> AntiForgeryConfig',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--antiforgeryconfig",level:3},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> HttpAntiForgeryException',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--httpantiforgeryexception",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:'<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IAntiForgeryAdditionalDataProvider',id:"icon-iconcodiconsymbol-interface-classnamesymbol-interface--iantiforgeryadditionaldataprovider",level:3}],d={toc:m};function f(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"namespace-servicestackhtmlantixsrf"},"Namespace ServiceStack.Html.AntiXsrf"),(0,s.kt)("h2",{id:"classes"},"Classes"),(0,s.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--antiforgery"},(0,s.kt)("a",{parentName:"h3",href:"../ServiceStack.Html.AntiXsrf/AntiForgery"},(0,s.kt)(c.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," AntiForgery")),(0,s.kt)("p",null,"Provides access to the anti-forgery system, which provides protection against\nCross-site Request Forgery (XSRF, also called CSRF) attacks."),(0,s.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--antiforgeryconfig"},(0,s.kt)("a",{parentName:"h3",href:"../ServiceStack.Html.AntiXsrf/AntiForgeryConfig"},(0,s.kt)(c.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," AntiForgeryConfig")),(0,s.kt)("p",null,"Provides programmatic configuration for the anti-forgery token system."),(0,s.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--httpantiforgeryexception"},(0,s.kt)("a",{parentName:"h3",href:"../ServiceStack.Html.AntiXsrf/HttpAntiForgeryException"},(0,s.kt)(c.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," HttpAntiForgeryException")),(0,s.kt)("h2",{id:"interfaces"},"Interfaces"),(0,s.kt)("h3",{id:"icon-iconcodiconsymbol-interface-classnamesymbol-interface--iantiforgeryadditionaldataprovider"},(0,s.kt)("a",{parentName:"h3",href:"../ServiceStack.Html.AntiXsrf/IAntiForgeryAdditionalDataProvider"},(0,s.kt)(c.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IAntiForgeryAdditionalDataProvider")),(0,s.kt)("p",null,"Allows providing or validating additional custom data for anti-forgery tokens.\nFor example, the developer could use this to supply a nonce when the token is\ngenerated, then he could validate the nonce when the token is validated."))}f.isMDXComponent=!0}}]);