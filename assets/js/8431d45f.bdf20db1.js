"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[5766],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return k}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(r),k=a,b=m["".concat(i,".").concat(k)]||m[k]||p[k]||o;return r?n.createElement(b,l(l({ref:t},u),{},{components:r})):n.createElement(b,l({ref:t},u))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7069:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],c={title:"Class CheckboxInputBase<TValue>",sidebar_label:"CheckboxInputBase<TValue>"},i="Class CheckboxInputBase&lt;TValue&gt;",s={unversionedId:"api/ServiceStack.Blazor.Components/CheckboxInputBase`TValue`",id:"api/ServiceStack.Blazor.Components/CheckboxInputBase`TValue`",title:"Class CheckboxInputBase<TValue>",description:"Assembly: ServiceStack.Blazor.dll",source:"@site/docs/api/ServiceStack.Blazor.Components/CheckboxInputBase`TValue`.md",sourceDirName:"api/ServiceStack.Blazor.Components",slug:"/api/ServiceStack.Blazor.Components/CheckboxInputBase`TValue`",permalink:"/api/ServiceStack.Blazor.Components/CheckboxInputBase`TValue`",tags:[],version:"current",frontMatter:{title:"Class CheckboxInputBase<TValue>",sidebar_label:"CheckboxInputBase<TValue>"},sidebar:"apiSidebar",previous:{title:"AutoQueryGridBase<Model>",permalink:"/api/ServiceStack.Blazor.Components/AutoQueryGridBase`Model`"},next:{title:"ColumnSettings",permalink:"/api/ServiceStack.Blazor.Components/ColumnSettings"}},u=[{value:"<strong>Assembly</strong>: ServiceStack.Blazor.dll",id:"assembly-servicestackblazordll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"CurrentValueAsBool",id:"currentvalueasbool",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Extension Methods",id:"extension-methods",children:[],level:2}],p={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"class-checkboxinputbasetvalue"},"Class CheckboxInputBase","<","TValue",">"),(0,o.kt)("h6",{id:"assembly-servicestackblazordll"},(0,o.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Blazor.dll"),(0,o.kt)("h6",{id:"view-source"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/CheckboxInputBase.cs#L3"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class CheckboxInputBase<TValue> : TextInputBase<TValue>\n")),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"currentvalueasbool"},"CurrentValueAsBool"),(0,o.kt)("h6",{id:"view-source-1"},(0,o.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Blazor/src/ServiceStack.Blazor/Components/CheckboxInputBase.cs#L5"},"View Source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected bool? CurrentValueAsBool { get; set; }\n")),(0,o.kt)("h2",{id:"extension-methods"},"Extension Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../ServiceStack.Blazor/HtmlUtils#asstringobject"},"ServiceStack.Blazor.HtmlUtils.AsString(System.Object)")),(0,o.kt)("li",{parentName:"ul"},"ServiceStack.Blazor.Components.CheckboxInputBase`1.ServiceStack.Blazor.TextUtils.ToModelDictionary``1")))}m.isMDXComponent=!0}}]);