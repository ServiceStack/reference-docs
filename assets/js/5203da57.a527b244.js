"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[8958],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),o=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),u=o(r),d=n,f=u["".concat(c,".").concat(d)]||u[d]||s[d]||i;return r?a.createElement(f,p(p({ref:t},l),{},{components:r})):a.createElement(f,p({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,p=new Array(i);p[0]=u;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m.mdxType="string"==typeof e?e:n,p[1]=m;for(var o=2;o<i;o++)p[o]=r[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},72273:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return s},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return o}});var a=r(83117),n=(r(67294),r(3905));const i={title:"Interface SqlMapper.ICustomQueryParameter",sidebar_label:"SqlMapper.ICustomQueryParameter",description:"Implement this interface to pass an arbitrary db specific parameter to Dapper"},p="Interface SqlMapper.ICustomQueryParameter",m={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter",title:"Interface SqlMapper.ICustomQueryParameter",description:"Implement this interface to pass an arbitrary db specific parameter to Dapper",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface SqlMapper.ICustomQueryParameter",sidebar_label:"SqlMapper.ICustomQueryParameter",description:"Implement this interface to pass an arbitrary db specific parameter to Dapper"},sidebar:"apiSidebar",previous:{title:"SqlMapper.GridReader",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader"},next:{title:"SqlMapper.IDynamicParameters",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters"}},c={},o=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Methods",id:"methods",level:2},{value:"AddParameter(IDbCommand, String)",id:"addparameteridbcommand-string",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"Parameters",id:"parameters",level:5}],l={toc:o};function s(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"interface-sqlmappericustomqueryparameter"},"Interface SqlMapper.ICustomQueryParameter"),(0,n.kt)("p",null,"Implement this interface to pass an arbitrary db specific parameter to Dapper"),(0,n.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.ICustomQueryParameter.cs#L10"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface ICustomQueryParameter\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"addparameteridbcommand-string"},"AddParameter(IDbCommand, String)"),(0,n.kt)("p",null,"Add the parameter needed to the command before it executes"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.ICustomQueryParameter.cs#L17"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void AddParameter(IDbCommand command, string name)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Data.IDbCommand")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"command")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The raw command prior to execution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"name")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Parameter name")))))}s.isMDXComponent=!0}}]);