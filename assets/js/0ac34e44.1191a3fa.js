"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[5971],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),o=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=o(r),d=n,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return r?a.createElement(k,l(l({ref:t},s),{},{components:r})):a.createElement(k,l({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var o=2;o<i;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7484:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return s},default:function(){return u}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),l=["components"],p={title:"Class DefaultTypeMap",sidebar_label:"DefaultTypeMap",description:"Represents default type mapping strategy used by Dapper"},c="Class DefaultTypeMap",o={unversionedId:"api/ServiceStack.OrmLite.Dapper/DefaultTypeMap",id:"api/ServiceStack.OrmLite.Dapper/DefaultTypeMap",title:"Class DefaultTypeMap",description:"Represents default type mapping strategy used by Dapper",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap",tags:[],version:"current",frontMatter:{title:"Class DefaultTypeMap",sidebar_label:"DefaultTypeMap",description:"Represents default type mapping strategy used by Dapper"},sidebar:"apiSidebar",previous:{title:"DbString",permalink:"/api/ServiceStack.OrmLite.Dapper/DbString"},next:{title:"DynamicParameters",permalink:"/api/ServiceStack.OrmLite.Dapper/DynamicParameters"}},s=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"MatchNamesWithUnderscores",id:"matchnameswithunderscores",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"Properties",id:"properties-1",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"FindConstructor(String[], Type[])",id:"findconstructorstring-type",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"FindExplicitConstructor()",id:"findexplicitconstructor",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns-1",children:[],level:5}],level:3},{value:"GetConstructorParameter(ConstructorInfo, String)",id:"getconstructorparameterconstructorinfo-string",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns-2",children:[],level:5},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"GetMember(String)",id:"getmemberstring",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Returns",id:"returns-3",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],m={toc:s};function u(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-defaulttypemap"},"Class DefaultTypeMap"),(0,i.kt)("p",null,"Represents default type mapping strategy used by Dapper"),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L11"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class DefaultTypeMap : SqlMapper.ITypeMap\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"matchnameswithunderscores"},"MatchNamesWithUnderscores"),(0,i.kt)("p",null,"Should column names like User_Id be allowed to match properties/fields like UserId ?"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L175"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static bool MatchNamesWithUnderscores { get; set; }\n")),(0,i.kt)("h3",{id:"properties-1"},"Properties"),(0,i.kt)("p",null,"The settable properties for this typemap"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L180"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public List<PropertyInfo> Properties { get; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"findconstructorstring-type"},"FindConstructor(String[], Type[])"),(0,i.kt)("p",null,"Finds best constructor"),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L62"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ConstructorInfo FindConstructor(string[] names, Type[] types)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Reflection.ConstructorInfo"),": Matching constructor or default one"),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"names")),(0,i.kt)("td",{parentName:"tr",align:"left"},"DataReader column names")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Type[]")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"types")),(0,i.kt)("td",{parentName:"tr",align:"left"},"DataReader column types")))),(0,i.kt)("h3",{id:"findexplicitconstructor"},"FindExplicitConstructor()"),(0,i.kt)("p",null,"Returns the constructor, if any, that has the ExplicitConstructorAttribute on it."),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L101"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ConstructorInfo FindExplicitConstructor()\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Reflection.ConstructorInfo")),(0,i.kt)("h3",{id:"getconstructorparameterconstructorinfo-string"},"GetConstructorParameter(ConstructorInfo, String)"),(0,i.kt)("p",null,"Gets mapping for constructor parameter"),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L120"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public SqlMapper.IMemberMap GetConstructorParameter(ConstructorInfo constructor, string columnName)\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IMemberMap"},"ServiceStack.OrmLite.Dapper.SqlMapper.IMemberMap"),": Mapping implementation"),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Reflection.ConstructorInfo")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"constructor")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Constructor to resolve")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"columnName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"DataReader column name")))),(0,i.kt)("h3",{id:"getmemberstring"},"GetMember(String)"),(0,i.kt)("p",null,"Gets member mapping for column"),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DefaultTypeMap.cs#L132"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public SqlMapper.IMemberMap GetMember(string columnName)\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IMemberMap"},"ServiceStack.OrmLite.Dapper.SqlMapper.IMemberMap"),": Mapping implementation"),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"columnName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"DataReader column name")))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.ITypeMap"},"ServiceStack.OrmLite.Dapper.SqlMapper.ITypeMap"))))}u.isMDXComponent=!0}}]);