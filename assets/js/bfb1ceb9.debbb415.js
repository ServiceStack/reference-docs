"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[73614],{88569:function(e,s,a){a.r(s),a.d(s,{assets:function(){return l},contentTitle:function(){return r},default:function(){return g},frontMatter:function(){return c},metadata:function(){return o},toc:function(){return d}});var i=a(83117),t=(a(67294),a(3905)),n=a(1954);const c={title:"Namespace ServiceStack.Messaging.Redis",sidebar_label:"ServiceStack.Messaging.Redis",sidebar_position:0},r="Namespace ServiceStack.Messaging.Redis",o={unversionedId:"api/ServiceStack.Messaging.Redis/ServiceStack.Messaging.Redis",id:"api/ServiceStack.Messaging.Redis/ServiceStack.Messaging.Redis",title:"Namespace ServiceStack.Messaging.Redis",description:"When RedisMqServer Starts it creates a background thread subscribed to the Redis MQ Topic that",source:"@site/docs/api/ServiceStack.Messaging.Redis/ServiceStack.Messaging.Redis.md",sourceDirName:"api/ServiceStack.Messaging.Redis",slug:"/api/ServiceStack.Messaging.Redis/",permalink:"/api/ServiceStack.Messaging.Redis/",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace ServiceStack.Messaging.Redis",sidebar_label:"ServiceStack.Messaging.Redis",sidebar_position:0},sidebar:"apiSidebar",previous:{title:"WorkerStatus",permalink:"/api/ServiceStack.Messaging/WorkerStatus"},next:{title:"RedisMqServer",permalink:"/api/ServiceStack.Messaging.Redis/RedisMqServer"}},l={},d=[{value:"Classes",id:"classes",level:2},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> RedisMqServer',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redismqserver",level:3},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> RedisTransientMessageFactory',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redistransientmessagefactory",level:3},{value:'<Icon icon="codicon:symbol-class" className="symbol-class" /> RedisTransientMessageService',id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redistransientmessageservice",level:3}],m={toc:d};function g(e){let{components:s,...a}=e;return(0,t.kt)("wrapper",(0,i.Z)({},m,a,{components:s,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"namespace-servicestackmessagingredis"},"Namespace ServiceStack.Messaging.Redis"),(0,t.kt)("h2",{id:"classes"},"Classes"),(0,t.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redismqserver"},(0,t.kt)("a",{parentName:"h3",href:"../ServiceStack.Messaging.Redis/RedisMqServer"},(0,t.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RedisMqServer")),(0,t.kt)("p",null,"Creates a Redis MQ Server that processes each message on its own background thread.\ni.e. if you register 3 handlers it will create 7 background threads:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"1 listening to the Redis MQ Subscription, getting notified of each new message"),(0,t.kt)("li",{parentName:"ul"},"3x1 Normal InQ for each message handler"),(0,t.kt)("li",{parentName:"ul"},"3x1 PriorityQ for each message handler (Turn off with DisablePriorityQueues)")),(0,t.kt)("p",null,"When RedisMqServer Starts it creates a background thread subscribed to the Redis MQ Topic that\nlistens for new incoming messages. It also starts 2 background threads for each message type:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"1 for processing the services Priority Queue and 1 processing the services normal Inbox Queue.")),(0,t.kt)("p",null,"Priority Queue","'","s can be enabled on a message-per-message basis by specifying types in the\nOnlyEnablePriorityQueuesForTypes property. The DisableAllPriorityQueues property disables all Queues."),(0,t.kt)("p",null,"The Start/Stop methods are idempotent i.e. It","'","s safe to call them repeatedly on multiple threads\nand the Redis MQ Server will only have Started or Stopped once."),(0,t.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redistransientmessagefactory"},(0,t.kt)("a",{parentName:"h3",href:"../ServiceStack.Messaging.Redis/RedisTransientMessageFactory"},(0,t.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RedisTransientMessageFactory")),(0,t.kt)("p",null,"Transient message queues are a one-pass message queue service that starts\nprocessing messages when Start() is called. Any subsequent Start() calls\nwhile the service is running is ignored."),(0,t.kt)("p",null,"The transient service will continue to run until all messages have been\nprocessed after which time it will shutdown all processing until Start() is called again."),(0,t.kt)("h3",{id:"icon-iconcodiconsymbol-class-classnamesymbol-class--redistransientmessageservice"},(0,t.kt)("a",{parentName:"h3",href:"../ServiceStack.Messaging.Redis/RedisTransientMessageService"},(0,t.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," RedisTransientMessageService")))}g.isMDXComponent=!0}}]);