"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[55075],{73833:function(e,t,i){i.r(t),i.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return r},toc:function(){return l}});var n=i(83117),a=(i(67294),i(3905)),o=i(1954);const s={title:"Class ShardedRedisClientManager",sidebar_label:"ShardedRedisClientManager",description:"Provides sharding of redis client connections. uses consistent hashing to distribute keys across connection pools"},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> ShardedRedisClientManager',r={unversionedId:"api/ServiceStack.Redis/ShardedRedisClientManager",id:"api/ServiceStack.Redis/ShardedRedisClientManager",title:"Class ShardedRedisClientManager",description:"Provides sharding of redis client connections. uses consistent hashing to distribute keys across connection pools",source:"@site/docs/api/ServiceStack.Redis/ShardedRedisClientManager.md",sourceDirName:"api/ServiceStack.Redis",slug:"/api/ServiceStack.Redis/ShardedRedisClientManager",permalink:"/api/ServiceStack.Redis/ShardedRedisClientManager",draft:!1,tags:[],version:"current",frontMatter:{title:"Class ShardedRedisClientManager",sidebar_label:"ShardedRedisClientManager",description:"Provides sharding of redis client connections. uses consistent hashing to distribute keys across connection pools"},sidebar:"apiSidebar",previous:{title:"ShardedConnectionPool",permalink:"/api/ServiceStack.Redis/ShardedConnectionPool"},next:{title:"SlowlogItem",permalink:"/api/ServiceStack.Redis/SlowlogItem"}},d={},l=[{value:"<strong>Assembly</strong>: ServiceStack.Redis.dll",id:"assembly-servicestackredisdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetConnectionPool(String)',id:"-getconnectionpoolstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5}],m={toc:l};function h(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-shardedredisclientmanager"},(0,a.kt)(o.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," ShardedRedisClientManager"),(0,a.kt)("p",null,"Provides sharding of redis client connections.\nuses consistent hashing to distribute keys across connection pools"),(0,a.kt)("h6",{id:"assembly-servicestackredisdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.Redis.dll"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/ShardedRedisClientManager.cs#L13"}," ",(0,a.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class ShardedRedisClientManager\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"-getconnectionpoolstring"},(0,a.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetConnectionPool(String)"),(0,a.kt)("p",null,"maps a key to a redis connection pool"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Redis/src/ServiceStack.Redis/ShardedRedisClientManager.cs#L34"}," ",(0,a.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ShardedConnectionPool GetConnectionPool(string key)\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../ServiceStack.Redis/ShardedConnectionPool"},"ServiceStack.Redis.ShardedConnectionPool"),": a redis connection pool"),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"System.String")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"key")),(0,a.kt)("td",{parentName:"tr",align:"left"},"key to map")))))}h.isMDXComponent=!0}}]);