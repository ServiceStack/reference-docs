"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[66755],{95075:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return l},metadata:function(){return r},toc:function(){return s}});var i=a(83117),n=(a(67294),a(3905)),c=a(1954);const l={title:"Interface IValidator<T>",sidebar_label:"IValidator<T>",description:"Defines a validator for a particular type."},o='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IValidator&lt;T&gt;',r={unversionedId:"api/ServiceStack.FluentValidation/IValidator`T`",id:"api/ServiceStack.FluentValidation/IValidator`T`",title:"Interface IValidator<T>",description:"Defines a validator for a particular type.",source:"@site/docs/api/ServiceStack.FluentValidation/IValidator`T`.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/IValidator`T`",permalink:"/api/ServiceStack.FluentValidation/IValidator`T`",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IValidator<T>",sidebar_label:"IValidator<T>",description:"Defines a validator for a particular type."},sidebar:"apiSidebar",previous:{title:"IValidatorFactory",permalink:"/api/ServiceStack.FluentValidation/IValidatorFactory"},next:{title:"InlineValidator<T>",permalink:"/api/ServiceStack.FluentValidation/InlineValidator`T`"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> CascadeMode',id:"-cascademode",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Validate(T)',id:"-validatet",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ValidateAsync(T, CancellationToken)',id:"-validateasynct-cancellationtoken",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5}],u={toc:s};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-ivalidatort"},(0,n.kt)(c.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IValidator","<","T",">"),(0,n.kt)("p",null,"Defines a validator for a particular type."),(0,n.kt)("h6",{id:"assembly-servicestackdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L32"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IValidator<in T> : IValidator\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"-cascademode"},(0,n.kt)(c.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," CascadeMode"),(0,n.kt)("p",null,"Sets the cascade mode for all rules within this validator."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L51"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"CascadeMode CascadeMode { get; set; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-validatet"},(0,n.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Validate(T)"),(0,n.kt)("p",null,"Validates the specified instance."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L38"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"ValidationResult Validate(T instance)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.FluentValidation.Results/ValidationResult"},"ServiceStack.FluentValidation.Results.ValidationResult"),": A ValidationResult object containing any validation failures."),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"instance")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The instance to validate")))),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-validateasynct-cancellationtoken"},(0,n.kt)(c.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ValidateAsync(T, CancellationToken)"),(0,n.kt)("p",null,"Validate the specified instance asynchronously"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/IValidator.cs#L46"}," ",(0,n.kt)(c.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"Task<ValidationResult> ValidateAsync(T instance, CancellationToken cancellation = default(CancellationToken))\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.Tasks.Task<ServiceStack.FluentValidation.Results.ValidationResult>"),": A ValidationResult object containing any validation failures."),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<T>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"instance")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The instance to validate")))),(0,n.kt)("p",null," |\n| ",(0,n.kt)("inlineCode",{parentName:"p"},"System.Threading.CancellationToken")," | ",(0,n.kt)("em",{parentName:"p"},"cancellation")," | "),(0,n.kt)("p",null," |"))}m.isMDXComponent=!0}}]);