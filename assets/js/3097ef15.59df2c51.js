"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[37540],{20301:function(e,t,i){i.r(t),i.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var n=i(83117),a=(i(67294),i(3905)),o=i(1954);const c={title:"Interface IConditionBuilder",sidebar_label:"IConditionBuilder",description:"Fluent interface for conditions (When/Unless/WhenAsync/UnlessAsync)"},r='<Icon icon="codicon:symbol-interface" className="symbol-interface" /> IConditionBuilder',l={unversionedId:"api/ServiceStack.FluentValidation/IConditionBuilder",id:"api/ServiceStack.FluentValidation/IConditionBuilder",title:"Interface IConditionBuilder",description:"Fluent interface for conditions (When/Unless/WhenAsync/UnlessAsync)",source:"@site/docs/api/ServiceStack.FluentValidation/IConditionBuilder.md",sourceDirName:"api/ServiceStack.FluentValidation",slug:"/api/ServiceStack.FluentValidation/IConditionBuilder",permalink:"/api/ServiceStack.FluentValidation/IConditionBuilder",draft:!1,tags:[],version:"current",frontMatter:{title:"Interface IConditionBuilder",sidebar_label:"IConditionBuilder",description:"Fluent interface for conditions (When/Unless/WhenAsync/UnlessAsync)"},sidebar:"apiSidebar",previous:{title:"ICommonContext",permalink:"/api/ServiceStack.FluentValidation/ICommonContext"},next:{title:"IDefaultValidator",permalink:"/api/ServiceStack.FluentValidation/IDefaultValidator"}},s={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Otherwise(Action)',id:"-otherwiseaction",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Parameters",id:"parameters",level:5}],u={toc:d};function m(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-iconditionbuilder"},(0,a.kt)(o.JO,{icon:"codicon:symbol-interface",className:"symbol-interface",mdxType:"Icon"})," IConditionBuilder"),(0,a.kt)("p",null,"Fluent interface for conditions (When/Unless/WhenAsync/UnlessAsync)"),(0,a.kt)("h6",{id:"assembly-servicestackdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L107"}," ",(0,a.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IConditionBuilder\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"-otherwiseaction"},(0,a.kt)(o.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Otherwise(Action)"),(0,a.kt)("p",null,"Rules to be invoked if the condition fails."),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/FluentValidation/Syntax.cs#L112"}," ",(0,a.kt)(o.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void Otherwise(Action action)\n")),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"System.Action")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"action"))))))}m.isMDXComponent=!0}}]);