"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[3400],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var r=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=c(a),u=l,k=s["".concat(p,".").concat(u)]||s[u]||o[u]||n;return a?r.createElement(k,i(i({ref:t},d),{},{components:a})):r.createElement(k,i({ref:t},d))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=s;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m.mdxType="string"==typeof e?e:l,i[1]=m;for(var c=2;c<n;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5956:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return o},frontMatter:function(){return n},metadata:function(){return m},toc:function(){return c}});var r=a(83117),l=(a(67294),a(3905));const n={title:"Class DynamicParameters",sidebar_label:"DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods"},i="Class DynamicParameters",m={unversionedId:"api/ServiceStack.OrmLite.Dapper/DynamicParameters",id:"api/ServiceStack.OrmLite.Dapper/DynamicParameters",title:"Class DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/DynamicParameters.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/DynamicParameters",permalink:"/api/ServiceStack.OrmLite.Dapper/DynamicParameters",draft:!1,tags:[],version:"current",frontMatter:{title:"Class DynamicParameters",sidebar_label:"DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods"},sidebar:"apiSidebar",previous:{title:"DefaultTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap"},next:{title:"ExplicitConstructorAttribute",permalink:"/api/ServiceStack.OrmLite.Dapper/ExplicitConstructorAttribute"}},p={},c=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Properties",id:"properties",level:2},{value:"SqlMapper.IParameterLookup.ItemString",id:"sqlmapperiparameterlookupitemstring",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"RemoveUnused",id:"removeunused",level:3},{value:"View Source",id:"view-source-2",level:6},{value:"ParameterNames",id:"parameternames",level:3},{value:"View Source",id:"view-source-3",level:6},{value:"Methods",id:"methods",level:2},{value:"AddDynamicParams(Object)",id:"adddynamicparamsobject",level:3},{value:"View Source",id:"view-source-4",level:6},{value:"Parameters",id:"parameters",level:5},{value:"Add(String, Object, Nullable&lt;DbType&gt;, Nullable&lt;ParameterDirection&gt;, Nullable&lt;Int32&gt;)",id:"addstring-object-nullabledbtype-nullableparameterdirection-nullableint32",level:3},{value:"View Source",id:"view-source-5",level:6},{value:"Parameters",id:"parameters-1",level:5},{value:"Add(String, Object, Nullable&lt;DbType&gt;, Nullable&lt;ParameterDirection&gt;, Nullable&lt;Int32&gt;, Nullable&lt;Byte&gt;, Nullable&lt;Byte&gt;)",id:"addstring-object-nullabledbtype-nullableparameterdirection-nullableint32-nullablebyte-nullablebyte",level:3},{value:"View Source",id:"view-source-6",level:6},{value:"Parameters",id:"parameters-2",level:5},{value:"SqlMapper.IDynamicParameters.AddParameters(IDbCommand, SqlMapper.Identity)",id:"sqlmapperidynamicparametersaddparametersidbcommand-sqlmapperidentity",level:3},{value:"View Source",id:"view-source-7",level:6},{value:"Parameters",id:"parameters-3",level:5},{value:"AddParameters(IDbCommand, SqlMapper.Identity)",id:"addparametersidbcommand-sqlmapperidentity",level:3},{value:"View Source",id:"view-source-8",level:6},{value:"Parameters",id:"parameters-4",level:5},{value:"Get&lt;T&gt;(String)",id:"gettstring",level:3},{value:"View Source",id:"view-source-9",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:"Output&lt;T&gt;(T, Expression&lt;Func&lt;T, Object&gt;&gt;, Nullable&lt;DbType&gt;, Nullable&lt;Int32&gt;)",id:"outputtt-expressionfunct-object-nullabledbtype-nullableint32",level:3},{value:"View Source",id:"view-source-10",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"SqlMapper.IParameterCallbacks.OnCompleted()",id:"sqlmapperiparametercallbacksoncompleted",level:3},{value:"View Source",id:"view-source-11",level:6},{value:"Implements",id:"implements",level:2}],d={toc:c};function o(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"class-dynamicparameters"},"Class DynamicParameters"),(0,l.kt)("p",null,"A bag of parameters that can be passed to the Dapper Query and Execute methods"),(0,l.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,l.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,l.kt)("h6",{id:"view-source"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.ParamInfo.cs#L6"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class DynamicParameters : SqlMapper.IParameterLookup, SqlMapper.IParameterCallbacks, SqlMapper.IDynamicParameters\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"sqlmapperiparameterlookupitemstring"},"SqlMapper.IParameterLookup.Item","[String]"),(0,l.kt)("h6",{id:"view-source-1"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L21"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"object SqlMapper.IParameterLookup.this[string name] { get; }\n")),(0,l.kt)("h3",{id:"removeunused"},"RemoveUnused"),(0,l.kt)("p",null,"If true, the command-text is inspected and only values that are clearly used are included on the connection"),(0,l.kt)("h6",{id:"view-source-2"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L158"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool RemoveUnused { get; set; }\n")),(0,l.kt)("h3",{id:"parameternames"},"ParameterNames"),(0,l.kt)("p",null,"All the names of the param in the bag, use Get to yank them out"),(0,l.kt)("h6",{id:"view-source-3"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L304"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerable<string> ParameterNames { get; }\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"adddynamicparamsobject"},"AddDynamicParams(Object)"),(0,l.kt)("p",null,"Append a whole object full of params to the dynamic\nEG: AddDynamicParams(new {A = 1, B = 2}) // will add property A and B to the dynamic"),(0,l.kt)("h6",{id:"view-source-4"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L47"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddDynamicParams(object param)\n")),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"param"))))),(0,l.kt)("h3",{id:"addstring-object-nullabledbtype-nullableparameterdirection-nullableint32"},"Add(String, Object, Nullable","<","DbType",">",", Nullable","<","ParameterDirection",">",", Nullable","<","Int32",">",")"),(0,l.kt)("p",null,"Add a parameter to this dynamic parameter list."),(0,l.kt)("h6",{id:"view-source-5"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L99"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add(string name, object value, DbType? dbType, ParameterDirection? direction, int? size)\n")),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.String")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The value of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Data.DbType>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"dbType")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The type of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Data.ParameterDirection>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"direction")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The in or out direction of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Int32>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size of the parameter.")))),(0,l.kt)("h3",{id:"addstring-object-nullabledbtype-nullableparameterdirection-nullableint32-nullablebyte-nullablebyte"},"Add(String, Object, Nullable","<","DbType",">",", Nullable","<","ParameterDirection",">",", Nullable","<","Int32",">",", Nullable","<","Byte",">",", Nullable","<","Byte",">",")"),(0,l.kt)("p",null,"Add a parameter to this dynamic parameter list."),(0,l.kt)("h6",{id:"view-source-6"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L121"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add(string name, object value = null, DbType? dbType = null, ParameterDirection? direction = null, int? size = null, byte? precision = null, byte? scale = null)\n")),(0,l.kt)("h5",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.String")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"name")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The value of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Data.DbType>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"dbType")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The type of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Data.ParameterDirection>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"direction")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The in or out direction of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Int32>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Byte>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"precision")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The precision of the parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Byte>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"scale")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The scale of the parameter.")))),(0,l.kt)("h3",{id:"sqlmapperidynamicparametersaddparametersidbcommand-sqlmapperidentity"},"SqlMapper.IDynamicParameters.AddParameters(IDbCommand, SqlMapper.Identity)"),(0,l.kt)("h6",{id:"view-source-7"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L150"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void SqlMapper.IDynamicParameters.AddParameters(IDbCommand command, SqlMapper.Identity identity)\n")),(0,l.kt)("h5",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Data.IDbCommand")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"command"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"identity"))))),(0,l.kt)("h3",{id:"addparametersidbcommand-sqlmapperidentity"},"AddParameters(IDbCommand, SqlMapper.Identity)"),(0,l.kt)("p",null,"Add all the parameters needed to the command just before it executes"),(0,l.kt)("h6",{id:"view-source-8"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L165"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected void AddParameters(IDbCommand command, SqlMapper.Identity identity)\n")),(0,l.kt)("h5",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Data.IDbCommand")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"command")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The raw command prior to execution")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"identity")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Information about the query")))),(0,l.kt)("h3",{id:"gettstring"},"Get","<","T",">","(String)"),(0,l.kt)("p",null,"Get the value of a parameter"),(0,l.kt)("h6",{id:"view-source-9"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L312"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T Get<T>(string name)\n")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<T>"),": The value, note DBNull.Value is not returned, instead the value is returned as null"),(0,l.kt)("h5",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.String")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"name"))))),(0,l.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"T"))),(0,l.kt)("h3",{id:"outputtt-expressionfunct-object-nullabledbtype-nullableint32"},"Output","<","T",">","(T, Expression","<","Func","<","T, Object",">",">",", Nullable","<","DbType",">",", Nullable","<","Int32",">",")"),(0,l.kt)("p",null,"Allows you to automatically populate a target property/field from output parameters. It actually\ncreates an InputOutput parameter, so you can still pass data in."),(0,l.kt)("h6",{id:"view-source-10"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L338"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DynamicParameters Output<T>(T target, Expression<Func<T, object>> expression, DbType? dbType = null, int? size = null)\n")),(0,l.kt)("h5",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/DynamicParameters"},"ServiceStack.OrmLite.Dapper.DynamicParameters"),": The DynamicParameters instance"),(0,l.kt)("h5",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"<T>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"target")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The object whose property/field you wish to populate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Linq.Expressions.Expression<System.Func<<T>,System.Object>>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"expression")),(0,l.kt)("td",{parentName:"tr",align:"left"},"A MemberExpression targeting a property/field of the target (or descendant thereof.)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Data.DbType>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"dbType")),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"System.Nullable<System.Int32>")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("em",{parentName:"td"},"size")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size to set on the parameter. Defaults to 0, or DbString.DefaultLength in case of strings.")))),(0,l.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"T"))),(0,l.kt)("h3",{id:"sqlmapperiparametercallbacksoncompleted"},"SqlMapper.IParameterCallbacks.OnCompleted()"),(0,l.kt)("h6",{id:"view-source-11"},(0,l.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L491"},"View Source")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void SqlMapper.IParameterCallbacks.OnCompleted()\n")),(0,l.kt)("h2",{id:"implements"},"Implements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IParameterLookup"},"ServiceStack.OrmLite.Dapper.SqlMapper.IParameterLookup")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IParameterCallbacks"},"ServiceStack.OrmLite.Dapper.SqlMapper.IParameterCallbacks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters"},"ServiceStack.OrmLite.Dapper.SqlMapper.IDynamicParameters"))))}o.isMDXComponent=!0}}]);