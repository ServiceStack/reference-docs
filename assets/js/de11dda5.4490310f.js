"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[62635],{39817:function(e,t,i){i.r(t),i.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d}});var a=i(83117),n=(i(67294),i(3905)),r=i(1954);const o={title:"Class DatabaseStorageBase",sidebar_label:"DatabaseStorageBase",description:"Understands how to save MiniProfiler results to a MSSQL database, allowing more permanent storage and querying of slow results."},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> DatabaseStorageBase',l={unversionedId:"api/ServiceStack.MiniProfiler.Storage/DatabaseStorageBase",id:"api/ServiceStack.MiniProfiler.Storage/DatabaseStorageBase",title:"Class DatabaseStorageBase",description:"Understands how to save MiniProfiler results to a MSSQL database, allowing more permanent storage and querying of slow results.",source:"@site/docs/api/ServiceStack.MiniProfiler.Storage/DatabaseStorageBase.md",sourceDirName:"api/ServiceStack.MiniProfiler.Storage",slug:"/api/ServiceStack.MiniProfiler.Storage/DatabaseStorageBase",permalink:"/api/ServiceStack.MiniProfiler.Storage/DatabaseStorageBase",draft:!1,tags:[],version:"current",frontMatter:{title:"Class DatabaseStorageBase",sidebar_label:"DatabaseStorageBase",description:"Understands how to save MiniProfiler results to a MSSQL database, allowing more permanent storage and querying of slow results."},sidebar:"apiSidebar",previous:{title:"ServiceStack.MiniProfiler.Storage",permalink:"/api/ServiceStack.MiniProfiler.Storage/"},next:{title:"HttpRuntimeCacheStorage",permalink:"/api/ServiceStack.MiniProfiler.Storage/HttpRuntimeCacheStorage"}},s={},d=[{value:"<strong>Assembly</strong>: ServiceStack.NetFramework.dll",id:"assembly-servicestacknetframeworkdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> ConnectionString',id:"-connectionstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Save(MiniProfiler)',id:"-saveminiprofiler",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Load(Guid)',id:"-loadguid",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetUnviewedIds(String)',id:"-getunviewedidsstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetConnection()',id:"-getconnection",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> GetOpenConnection()',id:"-getopenconnection",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Implements",id:"implements",level:2}],m={toc:d};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-databasestoragebase"},(0,n.kt)(r.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," DatabaseStorageBase"),(0,n.kt)("p",null,"Understands how to save MiniProfiler results to a MSSQL database, allowing more permanent storage and\nquerying of slow results."),(0,n.kt)("h6",{id:"assembly-servicestacknetframeworkdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.NetFramework.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L12"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class DatabaseStorageBase : IStorage\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"-connectionstring"},(0,n.kt)(r.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," ConnectionString"),(0,n.kt)("p",null,"How we connect to the database used to save/load MiniProfiler results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L17"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected string ConnectionString { get; set; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-saveminiprofiler"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Save(MiniProfiler)"),(0,n.kt)("p",null,"Saves ","'","profiler","'"," to a database under its ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.MiniProfiler/MiniProfiler#id"},"ServiceStack.MiniProfiler.MiniProfiler.Id"),"."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L30"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract void Save(MiniProfiler profiler)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../ServiceStack.MiniProfiler/MiniProfiler"},"ServiceStack.MiniProfiler.MiniProfiler")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"profiler"))))),(0,n.kt)("h3",{id:"-loadguid"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Load(Guid)"),(0,n.kt)("p",null,"Returns the MiniProfiler identified by ","'","id","'"," from the database or null when no MiniProfiler exists under that ","'","id","'","."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L35"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract MiniProfiler Load(Guid id)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.MiniProfiler/MiniProfiler"},"ServiceStack.MiniProfiler.MiniProfiler")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Guid")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"id"))))),(0,n.kt)("h3",{id:"-getunviewedidsstring"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetUnviewedIds(String)"),(0,n.kt)("p",null,"Returns a list of ",(0,n.kt)("a",{parentName:"p",href:"../ServiceStack.MiniProfiler/MiniProfiler#id"},"ServiceStack.MiniProfiler.MiniProfiler.Id"),"s that haven","'","t been seen by ","<",'code data-dev-comment-type="paramref" class="paramref"',">","user","<","/code",">","."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L41"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract List<Guid> GetUnviewedIds(string user)\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Collections.Generic.List<System.Guid>")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"user")),(0,n.kt)("td",{parentName:"tr",align:"left"},"User identified by the current MiniProfiler.Settings.UserProvider.")))),(0,n.kt)("p",null," |"),(0,n.kt)("h3",{id:"-getconnection"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetConnection()"),(0,n.kt)("p",null,"Returns a DbConnection for your specific provider."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L46"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected abstract DbConnection GetConnection()\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Data.Common.DbConnection")),(0,n.kt)("h3",{id:"-getopenconnection"},(0,n.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," GetOpenConnection()"),(0,n.kt)("p",null,"Returns a DbConnection already opened for execution."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack.NetFramework/MiniProfiler/Storage/DatabaseStorageBase.cs#L51"}," ",(0,n.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected DbConnection GetOpenConnection()\n")),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Data.Common.DbConnection")),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../ServiceStack.MiniProfiler.Storage/IStorage"},"ServiceStack.MiniProfiler.Storage.IStorage"))))}u.isMDXComponent=!0}}]);