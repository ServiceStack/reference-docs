"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[701],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return u}});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=a.createContext({}),o=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=o(r),u=i,S=d["".concat(c,".").concat(u)]||d[u]||m[u]||n;return r?a.createElement(S,l(l({ref:t},s),{},{components:r})):a.createElement(S,l({ref:t},s))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,l[1]=p;for(var o=2;o<n;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},41070:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return n},metadata:function(){return p},toc:function(){return o}});var a=r(83117),i=(r(67294),r(3905));const n={title:"Class SqlMapper.Identity",sidebar_label:"SqlMapper.Identity",description:"Identity of a cached query in Dapper, used for extensibility."},l="Class SqlMapper.Identity",p={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.Identity",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.Identity",title:"Class SqlMapper.Identity",description:"Identity of a cached query in Dapper, used for extensibility.",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.Identity.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.Identity",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.Identity",draft:!1,tags:[],version:"current",frontMatter:{title:"Class SqlMapper.Identity",sidebar_label:"SqlMapper.Identity",description:"Identity of a cached query in Dapper, used for extensibility."},sidebar:"apiSidebar",previous:{title:"SqlMapper.ITypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ITypeMap"},next:{title:"SqlMapper.Settings",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.Settings"}},c={},o=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:"View Source",id:"view-source",level:6},{value:"Fields",id:"fields",level:2},{value:"sql",id:"sql",level:3},{value:"View Source",id:"view-source-1",level:6},{value:"commandType",id:"commandtype",level:3},{value:"View Source",id:"view-source-2",level:6},{value:"hashCode",id:"hashcode",level:3},{value:"View Source",id:"view-source-3",level:6},{value:"gridIndex",id:"gridindex",level:3},{value:"View Source",id:"view-source-4",level:6},{value:"type",id:"type",level:3},{value:"View Source",id:"view-source-5",level:6},{value:"connectionString",id:"connectionstring",level:3},{value:"View Source",id:"view-source-6",level:6},{value:"parametersType",id:"parameterstype",level:3},{value:"View Source",id:"view-source-7",level:6},{value:"Methods",id:"methods",level:2},{value:"ForDynamicParameters(Type)",id:"fordynamicparameterstype",level:3},{value:"View Source",id:"view-source-8",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:"Equals(Object)",id:"equalsobject",level:3},{value:"View Source",id:"view-source-9",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"GetHashCode()",id:"gethashcode",level:3},{value:"View Source",id:"view-source-10",level:6},{value:"Returns",id:"returns-2",level:5},{value:"ToString()",id:"tostring",level:3},{value:"View Source",id:"view-source-11",level:6},{value:"Returns",id:"returns-3",level:5},{value:"Equals(SqlMapper.Identity)",id:"equalssqlmapperidentity",level:3},{value:"View Source",id:"view-source-12",level:6},{value:"Returns",id:"returns-4",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:"Implements",id:"implements",level:2}],s={toc:o};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-sqlmapperidentity"},"Class SqlMapper.Identity"),(0,i.kt)("p",null,"Identity of a cached query in Dapper, used for extensibility."),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L93"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class Identity : IEquatable<SqlMapper.Identity>\n")),(0,i.kt)("h2",{id:"fields"},"Fields"),(0,i.kt)("h3",{id:"sql"},"sql"),(0,i.kt)("p",null,"The raw SQL command."),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L151"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly string sql\n")),(0,i.kt)("h3",{id:"commandtype"},"commandType"),(0,i.kt)("p",null,"The SQL command type."),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L156"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly CommandType? commandType\n")),(0,i.kt)("h3",{id:"hashcode"},"hashCode"),(0,i.kt)("p",null,"The hash code of this Identity."),(0,i.kt)("h6",{id:"view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L161"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly int hashCode\n")),(0,i.kt)("h3",{id:"gridindex"},"gridIndex"),(0,i.kt)("p",null,"The grid index (position in the reader) of this Identity."),(0,i.kt)("h6",{id:"view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L166"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly int gridIndex\n")),(0,i.kt)("h3",{id:"type"},"type"),(0,i.kt)("p",null,"This ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Type")," of this Identity."),(0,i.kt)("h6",{id:"view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L171"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly Type type\n")),(0,i.kt)("h3",{id:"connectionstring"},"connectionString"),(0,i.kt)("p",null,"The connection string for this Identity."),(0,i.kt)("h6",{id:"view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L176"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly string connectionString\n")),(0,i.kt)("h3",{id:"parameterstype"},"parametersType"),(0,i.kt)("p",null,"The type of the parameters object for this Identity."),(0,i.kt)("h6",{id:"view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L181"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public readonly Type parametersType\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"fordynamicparameterstype"},"ForDynamicParameters(Type)"),(0,i.kt)("p",null,"Create an identity for use with DynamicParameters, internal use only."),(0,i.kt)("h6",{id:"view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L115"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public SqlMapper.Identity ForDynamicParameters(Type type)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The parameters type to create an ",(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")," for.")))),(0,i.kt)("h3",{id:"equalsobject"},"Equals(Object)"),(0,i.kt)("p",null,"Whether this ",(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")," equals another."),(0,i.kt)("h6",{id:"view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L146"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override bool Equals(object obj)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Boolean")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"obj")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The other ",(0,i.kt)("inlineCode",{parentName:"td"},"System.Object")," to compare to.")))),(0,i.kt)("h3",{id:"gethashcode"},"GetHashCode()"),(0,i.kt)("p",null,"Gets the hash code for this identity."),(0,i.kt)("h6",{id:"view-source-10"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L187"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override int GetHashCode()\n")),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Int32")),(0,i.kt)("h3",{id:"tostring"},"ToString()"),(0,i.kt)("p",null,"See object.ToString()"),(0,i.kt)("h6",{id:"view-source-11"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L192"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public override string ToString()\n")),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.String")),(0,i.kt)("h3",{id:"equalssqlmapperidentity"},"Equals(SqlMapper.Identity)"),(0,i.kt)("p",null,"Compare 2 Identity objects"),(0,i.kt)("h6",{id:"view-source-12"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.Identity.cs#L199"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool Equals(SqlMapper.Identity other)\n")),(0,i.kt)("h5",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"System.Boolean"),": Whether the two are equal"),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"other")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The other ",(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")," object to compare.")))),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"System.IEquatable<ServiceStack.OrmLite.Dapper.SqlMapper.Identity>"))))}m.isMDXComponent=!0}}]);