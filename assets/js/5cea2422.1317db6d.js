"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[6538],{83101:function(e,t,i){i.r(t),i.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var n=i(83117),a=(i(67294),i(3905)),r=i(1954);const o={title:"Class KeyDerivation",sidebar_label:"KeyDerivation",description:"Provides algorithms for performing key derivation."},s='<Icon icon="codicon:symbol-class" className="symbol-class" /> KeyDerivation',c={unversionedId:"api/ServiceStack.Auth/KeyDerivation",id:"api/ServiceStack.Auth/KeyDerivation",title:"Class KeyDerivation",description:"Provides algorithms for performing key derivation.",source:"@site/docs/api/ServiceStack.Auth/KeyDerivation.md",sourceDirName:"api/ServiceStack.Auth",slug:"/api/ServiceStack.Auth/KeyDerivation",permalink:"/api/ServiceStack.Auth/KeyDerivation",draft:!1,tags:[],version:"current",frontMatter:{title:"Class KeyDerivation",sidebar_label:"KeyDerivation",description:"Provides algorithms for performing key derivation."},sidebar:"apiSidebar",previous:{title:"JwtUtils",permalink:"/api/ServiceStack.Auth/JwtUtils"},next:{title:"KeyDerivationPrf",permalink:"/api/ServiceStack.Auth/KeyDerivationPrf"}},l={},d=[{value:"<strong>Assembly</strong>: ServiceStack.dll",id:"assembly-servicestackdll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Pbkdf2(String, Byte[], KeyDerivationPrf, Int32, Int32)',id:"-pbkdf2string-byte-keyderivationprf-int32-int32",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5}],p={toc:d};function m(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-keyderivation"},(0,a.kt)(r.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," KeyDerivation"),(0,a.kt)("p",null,"Provides algorithms for performing key derivation."),(0,a.kt)("h6",{id:"assembly-servicestackdll"},(0,a.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.dll"),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/Auth/PasswordHasher.cs#L273"}," ",(0,a.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static class KeyDerivation\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"-pbkdf2string-byte-keyderivationprf-int32-int32"},(0,a.kt)(r.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Pbkdf2(String, Byte[], KeyDerivationPrf, Int32, Int32)"),(0,a.kt)("p",null,"Performs key derivation using the PBKDF2 algorithm."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,a.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/Auth/PasswordHasher.cs#L288"}," ",(0,a.kt)(r.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static byte[] Pbkdf2(string password, byte[] salt, KeyDerivationPrf prf, int iterationCount, int numBytesRequested)\n")),(0,a.kt)("h5",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"System.Byte[]"),": The derived key."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("h5",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"System.String")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("em",{parentName:"td"},"password")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The password from which to derive the key.")))),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("p",null," |\n| ",(0,a.kt)("inlineCode",{parentName:"p"},"System.Byte[]")," | ",(0,a.kt)("em",{parentName:"p"},"salt")," | The salt to be used during the key derivation process."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("p",null," |\n| ",(0,a.kt)("a",{parentName:"p",href:"../ServiceStack.Auth/KeyDerivationPrf"},"ServiceStack.Auth.KeyDerivationPrf")," | ",(0,a.kt)("em",{parentName:"p"},"prf")," | The pseudo-random function to be used in the key derivation process."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("p",null," |\n| ",(0,a.kt)("inlineCode",{parentName:"p"},"System.Int32")," | ",(0,a.kt)("em",{parentName:"p"},"iterationCount")," | The number of iterations of the pseudo-random function to apply\nduring the key derivation process."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("p",null," |\n| ",(0,a.kt)("inlineCode",{parentName:"p"},"System.Int32")," | ",(0,a.kt)("em",{parentName:"p"},"numBytesRequested")," | The desired length (in bytes) of the derived key."),(0,a.kt)("p",null,"The PBKDF2 algorithm is specified in RFC 2898."),(0,a.kt)("p",null," |"))}m.isMDXComponent=!0}}]);