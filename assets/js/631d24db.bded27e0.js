"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[73400],{5956:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return p}});var r=a(83117),i=(a(67294),a(3905)),n=a(1954);const l={title:"Class DynamicParameters",sidebar_label:"DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods"},c='<Icon icon="codicon:symbol-class" className="symbol-class" /> DynamicParameters',o={unversionedId:"api/ServiceStack.OrmLite.Dapper/DynamicParameters",id:"api/ServiceStack.OrmLite.Dapper/DynamicParameters",title:"Class DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/DynamicParameters.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/DynamicParameters",permalink:"/api/ServiceStack.OrmLite.Dapper/DynamicParameters",draft:!1,tags:[],version:"current",frontMatter:{title:"Class DynamicParameters",sidebar_label:"DynamicParameters",description:"A bag of parameters that can be passed to the Dapper Query and Execute methods"},sidebar:"apiSidebar",previous:{title:"DefaultTypeMap",permalink:"/api/ServiceStack.OrmLite.Dapper/DefaultTypeMap"},next:{title:"ExplicitConstructorAttribute",permalink:"/api/ServiceStack.OrmLite.Dapper/ExplicitConstructorAttribute"}},m={},p=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> SqlMapper.IParameterLookup.ItemString',id:"-sqlmapperiparameterlookupitemstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> RemoveUnused',id:"-removeunused",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> ParameterNames',id:"-parameternames",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddDynamicParams(Object)',id:"-adddynamicparamsobject",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Add(String, Object, Nullable&lt;DbType&gt;, Nullable&lt;ParameterDirection&gt;, Nullable&lt;Int32&gt;)',id:"-addstring-object-nullabledbtype-nullableparameterdirection-nullableint32",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Add(String, Object, Nullable&lt;DbType&gt;, Nullable&lt;ParameterDirection&gt;, Nullable&lt;Int32&gt;, Nullable&lt;Byte&gt;, Nullable&lt;Byte&gt;)',id:"-addstring-object-nullabledbtype-nullableparameterdirection-nullableint32-nullablebyte-nullablebyte",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Parameters",id:"parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SqlMapper.IDynamicParameters.AddParameters(IDbCommand, SqlMapper.Identity)',id:"-sqlmapperidynamicparametersaddparametersidbcommand-sqlmapperidentity",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Parameters",id:"parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> AddParameters(IDbCommand, SqlMapper.Identity)',id:"-addparametersidbcommand-sqlmapperidentity",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8",level:6},{value:"Parameters",id:"parameters-4",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Get&lt;T&gt;(String)',id:"-gettstring",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Output&lt;T&gt;(T, Expression&lt;Func&lt;T, Object&gt;&gt;, Nullable&lt;DbType&gt;, Nullable&lt;Int32&gt;)',id:"-outputtt-expressionfunct-object-nullabledbtype-nullableint32",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> SqlMapper.IParameterCallbacks.OnCompleted()',id:"-sqlmapperiparametercallbacksoncompleted",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11",level:6},{value:"Implements",id:"implements",level:2}],s={toc:p};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-dynamicparameters"},(0,i.kt)(n.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," DynamicParameters"),(0,i.kt)("p",null,"A bag of parameters that can be passed to the Dapper Query and Execute methods"),(0,i.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.ParamInfo.cs#L6"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class DynamicParameters : object, SqlMapper.IParameterLookup, SqlMapper.IParameterCallbacks, SqlMapper.IDynamicParameters\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"-sqlmapperiparameterlookupitemstring"},(0,i.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," SqlMapper.IParameterLookup.Item","[String]"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L21"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"object SqlMapper.IParameterLookup.this[string name] { get; }\n")),(0,i.kt)("h3",{id:"-removeunused"},(0,i.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," RemoveUnused"),(0,i.kt)("p",null,"If true, the command-text is inspected and only values that are clearly used are included on the connection"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L158"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool RemoveUnused { get; set; }\n")),(0,i.kt)("h3",{id:"-parameternames"},(0,i.kt)(n.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," ParameterNames"),(0,i.kt)("p",null,"All the names of the param in the bag, use Get to yank them out"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L304"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerable<string> ParameterNames { get; }\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"-adddynamicparamsobject"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddDynamicParams(Object)"),(0,i.kt)("p",null,"Append a whole object full of params to the dynamic\nEG: AddDynamicParams(new {A = 1, B = 2}) // will add property A and B to the dynamic"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L47"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void AddDynamicParams(object param)\n")),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"param"))))),(0,i.kt)("h3",{id:"-addstring-object-nullabledbtype-nullableparameterdirection-nullableint32"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Add(String, Object, Nullable","<","DbType",">",", Nullable","<","ParameterDirection",">",", Nullable","<","Int32",">",")"),(0,i.kt)("p",null,"Add a parameter to this dynamic parameter list."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L99"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add(string name, object value, DbType? dbType, ParameterDirection? direction, int? size)\n")),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter.")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Object")," | ",(0,i.kt)("em",{parentName:"p"},"value")," | The value of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<DbType>")," | ",(0,i.kt)("em",{parentName:"p"},"dbType")," | The type of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<ParameterDirection>")," | ",(0,i.kt)("em",{parentName:"p"},"direction")," | The in or out direction of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.Int32>")," | ",(0,i.kt)("em",{parentName:"p"},"size")," | The size of the parameter."),(0,i.kt)("p",null," |"),(0,i.kt)("h3",{id:"-addstring-object-nullabledbtype-nullableparameterdirection-nullableint32-nullablebyte-nullablebyte"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Add(String, Object, Nullable","<","DbType",">",", Nullable","<","ParameterDirection",">",", Nullable","<","Int32",">",", Nullable","<","Byte",">",", Nullable","<","Byte",">",")"),(0,i.kt)("p",null,"Add a parameter to this dynamic parameter list."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L121"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Add(string name, object value = null, DbType? dbType = null, ParameterDirection? direction = null, int? size = null, byte? precision = null, byte? scale = null)\n")),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter.")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Object")," | ",(0,i.kt)("em",{parentName:"p"},"value")," | The value of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<DbType>")," | ",(0,i.kt)("em",{parentName:"p"},"dbType")," | The type of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<ParameterDirection>")," | ",(0,i.kt)("em",{parentName:"p"},"direction")," | The in or out direction of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.Int32>")," | ",(0,i.kt)("em",{parentName:"p"},"size")," | The size of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.Byte>")," | ",(0,i.kt)("em",{parentName:"p"},"precision")," | The precision of the parameter."),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.Byte>")," | ",(0,i.kt)("em",{parentName:"p"},"scale")," | The scale of the parameter."),(0,i.kt)("p",null," |"),(0,i.kt)("h3",{id:"-sqlmapperidynamicparametersaddparametersidbcommand-sqlmapperidentity"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SqlMapper.IDynamicParameters.AddParameters(IDbCommand, SqlMapper.Identity)"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L150"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void SqlMapper.IDynamicParameters.AddParameters(IDbCommand command, SqlMapper.Identity identity)\n")),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbCommand")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"command"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"identity"))))),(0,i.kt)("h3",{id:"-addparametersidbcommand-sqlmapperidentity"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," AddParameters(IDbCommand, SqlMapper.Identity)"),(0,i.kt)("p",null,"Add all the parameters needed to the command just before it executes"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L165"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected void AddParameters(IDbCommand command, SqlMapper.Identity identity)\n")),(0,i.kt)("h5",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IDbCommand")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"command")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw command prior to execution")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.Identity"},"ServiceStack.OrmLite.Dapper.SqlMapper.Identity")," | ",(0,i.kt)("em",{parentName:"p"},"identity")," | Information about the query"),(0,i.kt)("p",null," |"),(0,i.kt)("h3",{id:"-gettstring"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Get","<","T",">","(String)"),(0,i.kt)("p",null,"Get the value of a parameter"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L312"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T Get<T>(string name)\n")),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<T>"),": The value, note DBNull.Value is not returned, instead the value is returned as null"),(0,i.kt)("h5",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"System.String")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"name"))))),(0,i.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-outputtt-expressionfunct-object-nullabledbtype-nullableint32"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Output","<","T",">","(T, Expression","<","Func","<","T, Object",">",">",", Nullable","<","DbType",">",", Nullable","<","Int32",">",")"),(0,i.kt)("p",null,"Allows you to automatically populate a target property/field from output parameters. It actually\ncreates an InputOutput parameter, so you can still pass data in."),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L338"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public DynamicParameters Output<T>(T target, Expression<Func<T, object>> expression, DbType? dbType = null, int? size = null)\n")),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../ServiceStack.OrmLite.Dapper/DynamicParameters"},"ServiceStack.OrmLite.Dapper.DynamicParameters"),": The DynamicParameters instance"),(0,i.kt)("h5",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<T>")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"target")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The object whose property/field you wish to populate.")))),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"Expression<Func<<T>,System.Object>>")," | ",(0,i.kt)("em",{parentName:"p"},"expression")," | A MemberExpression targeting a property/field of the target (or descendant thereof.)"),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<DbType>")," | ",(0,i.kt)("em",{parentName:"p"},"dbType")," | "),(0,i.kt)("p",null," |\n| ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Nullable<System.Int32>")," | ",(0,i.kt)("em",{parentName:"p"},"size")," | The size to set on the parameter. Defaults to 0, or DbString.DefaultLength in case of strings."),(0,i.kt)("p",null," |"),(0,i.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T"))),(0,i.kt)("h3",{id:"-sqlmapperiparametercallbacksoncompleted"},(0,i.kt)(n.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," SqlMapper.IParameterCallbacks.OnCompleted()"),(0,i.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/DynamicParameters.cs#L491"}," ",(0,i.kt)(n.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void SqlMapper.IParameterCallbacks.OnCompleted()\n")),(0,i.kt)("h2",{id:"implements"},"Implements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IParameterLookup"},"ServiceStack.OrmLite.Dapper.SqlMapper.IParameterLookup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IParameterCallbacks"},"ServiceStack.OrmLite.Dapper.SqlMapper.IParameterCallbacks")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../ServiceStack.OrmLite.Dapper/SqlMapper.IDynamicParameters"},"ServiceStack.OrmLite.Dapper.SqlMapper.IDynamicParameters"))))}d.isMDXComponent=!0}}]);