"use strict";(self.webpackChunkdfmg_template=self.webpackChunkdfmg_template||[]).push([[54935],{79675:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=a(83117),n=(a(67294),a(3905)),i=a(1954);const l={title:"Class SqlMapper.GridReader",sidebar_label:"SqlMapper.GridReader",description:"The grid reader provides interfaces for reading multiple result sets from a Dapper query"},o='<Icon icon="codicon:symbol-class" className="symbol-class" /> SqlMapper.GridReader',c={unversionedId:"api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader",id:"api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader",title:"Class SqlMapper.GridReader",description:"The grid reader provides interfaces for reading multiple result sets from a Dapper query",source:"@site/docs/api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader.md",sourceDirName:"api/ServiceStack.OrmLite.Dapper",slug:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.GridReader",draft:!1,tags:[],version:"current",frontMatter:{title:"Class SqlMapper.GridReader",sidebar_label:"SqlMapper.GridReader",description:"The grid reader provides interfaces for reading multiple result sets from a Dapper query"},sidebar:"apiSidebar",previous:{title:"IWrappedDataReader",permalink:"/api/ServiceStack.OrmLite.Dapper/IWrappedDataReader"},next:{title:"SqlMapper.ICustomQueryParameter",permalink:"/api/ServiceStack.OrmLite.Dapper/SqlMapper.ICustomQueryParameter"}},d={},s=[{value:"<strong>Assembly</strong>: ServiceStack.OrmLite.dll",id:"assembly-servicestackormlitedll",level:6},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source",level:6},{value:"Properties",id:"properties",level:2},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> IsConsumed',id:"-isconsumed",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1",level:6},{value:'<Icon icon="codicon:symbol-property" className="symbol-property" /> Command',id:"-command",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2",level:6},{value:"Methods",id:"methods",level:2},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadAsync(Boolean)',id:"-readasyncboolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3",level:6},{value:"Returns",id:"returns",level:5},{value:"Parameters",id:"parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstAsync()',id:"-readfirstasync",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4",level:6},{value:"Returns",id:"returns-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefaultAsync()',id:"-readfirstordefaultasync",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5",level:6},{value:"Returns",id:"returns-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleAsync()',id:"-readsingleasync",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6",level:6},{value:"Returns",id:"returns-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefaultAsync()',id:"-readsingleordefaultasync",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7",level:6},{value:"Returns",id:"returns-4",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadAsync(Type, Boolean)',id:"-readasynctype-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8",level:6},{value:"Returns",id:"returns-5",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstAsync(Type)',id:"-readfirstasynctype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9",level:6},{value:"Returns",id:"returns-6",level:5},{value:"Parameters",id:"parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefaultAsync(Type)',id:"-readfirstordefaultasynctype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10",level:6},{value:"Returns",id:"returns-7",level:5},{value:"Parameters",id:"parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleAsync(Type)',id:"-readsingleasynctype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11",level:6},{value:"Returns",id:"returns-8",level:5},{value:"Parameters",id:"parameters-4",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefaultAsync(Type)',id:"-readsingleordefaultasynctype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-12",level:6},{value:"Returns",id:"returns-9",level:5},{value:"Parameters",id:"parameters-5",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadAsync&lt;T&gt;(Boolean)',id:"-readasynctboolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-13",level:6},{value:"Returns",id:"returns-10",level:5},{value:"Parameters",id:"parameters-6",level:5},{value:"Type Parameters",id:"type-parameters",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstAsync&lt;T&gt;()',id:"-readfirstasynct",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-14",level:6},{value:"Returns",id:"returns-11",level:5},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefaultAsync&lt;T&gt;()',id:"-readfirstordefaultasynct",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-15",level:6},{value:"Returns",id:"returns-12",level:5},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleAsync&lt;T&gt;()',id:"-readsingleasynct",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-16",level:6},{value:"Returns",id:"returns-13",level:5},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefaultAsync&lt;T&gt;()',id:"-readsingleordefaultasynct",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-17",level:6},{value:"Returns",id:"returns-14",level:5},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read(Boolean)',id:"-readboolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-18",level:6},{value:"Returns",id:"returns-15",level:5},{value:"Parameters",id:"parameters-7",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirst()',id:"-readfirst",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-19",level:6},{value:"Returns",id:"returns-16",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefault()',id:"-readfirstordefault",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-20",level:6},{value:"Returns",id:"returns-17",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingle()',id:"-readsingle",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-21",level:6},{value:"Returns",id:"returns-18",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefault()',id:"-readsingleordefault",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-22",level:6},{value:"Returns",id:"returns-19",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;T&gt;(Boolean)',id:"-readtboolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-23",level:6},{value:"Returns",id:"returns-20",level:5},{value:"Parameters",id:"parameters-8",level:5},{value:"Type Parameters",id:"type-parameters-5",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirst&lt;T&gt;()',id:"-readfirstt",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-24",level:6},{value:"Returns",id:"returns-21",level:5},{value:"Type Parameters",id:"type-parameters-6",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefault&lt;T&gt;()',id:"-readfirstordefaultt",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-25",level:6},{value:"Returns",id:"returns-22",level:5},{value:"Type Parameters",id:"type-parameters-7",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingle&lt;T&gt;()',id:"-readsinglet",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-26",level:6},{value:"Returns",id:"returns-23",level:5},{value:"Type Parameters",id:"type-parameters-8",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefault&lt;T&gt;()',id:"-readsingleordefaultt",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-27",level:6},{value:"Returns",id:"returns-24",level:5},{value:"Type Parameters",id:"type-parameters-9",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read(Type, Boolean)',id:"-readtype-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-28",level:6},{value:"Returns",id:"returns-25",level:5},{value:"Parameters",id:"parameters-9",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirst(Type)',id:"-readfirsttype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-29",level:6},{value:"Returns",id:"returns-26",level:5},{value:"Parameters",id:"parameters-10",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadFirstOrDefault(Type)',id:"-readfirstordefaulttype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-30",level:6},{value:"Returns",id:"returns-27",level:5},{value:"Parameters",id:"parameters-11",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingle(Type)',id:"-readsingletype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-31",level:6},{value:"Returns",id:"returns-28",level:5},{value:"Parameters",id:"parameters-12",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> ReadSingleOrDefault(Type)',id:"-readsingleordefaulttype",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-32",level:6},{value:"Returns",id:"returns-29",level:5},{value:"Parameters",id:"parameters-13",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TReturn&gt;(Func&lt;TFirst, TSecond, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-treturnfunctfirst-tsecond-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-33",level:6},{value:"Returns",id:"returns-30",level:5},{value:"Parameters",id:"parameters-14",level:5},{value:"Type Parameters",id:"type-parameters-10",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TThird, TReturn&gt;(Func&lt;TFirst, TSecond, TThird, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-tthird-treturnfunctfirst-tsecond-tthird-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-34",level:6},{value:"Returns",id:"returns-31",level:5},{value:"Parameters",id:"parameters-15",level:5},{value:"Type Parameters",id:"type-parameters-11",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TThird, TFourth, TReturn&gt;(Func&lt;TFirst, TSecond, TThird, TFourth, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-tthird-tfourth-treturnfunctfirst-tsecond-tthird-tfourth-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-35",level:6},{value:"Returns",id:"returns-32",level:5},{value:"Parameters",id:"parameters-16",level:5},{value:"Type Parameters",id:"type-parameters-12",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TThird, TFourth, TFifth, TReturn&gt;(Func&lt;TFirst, TSecond, TThird, TFourth, TFifth, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-tthird-tfourth-tfifth-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-36",level:6},{value:"Returns",id:"returns-33",level:5},{value:"Parameters",id:"parameters-17",level:5},{value:"Type Parameters",id:"type-parameters-13",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn&gt;(Func&lt;TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-tthird-tfourth-tfifth-tsixth-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-tsixth-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-37",level:6},{value:"Returns",id:"returns-34",level:5},{value:"Parameters",id:"parameters-18",level:5},{value:"Type Parameters",id:"type-parameters-14",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn&gt;(Func&lt;TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn&gt;, String, Boolean)',id:"-readtfirst-tsecond-tthird-tfourth-tfifth-tsixth-tseventh-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-tsixth-tseventh-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-38",level:6},{value:"Returns",id:"returns-35",level:5},{value:"Parameters",id:"parameters-19",level:5},{value:"Type Parameters",id:"type-parameters-15",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Read&lt;TReturn&gt;(Type[], Func&lt;Object[], TReturn&gt;, String, Boolean)',id:"-readtreturntype-funcobject-treturn-string-boolean",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-39",level:6},{value:"Returns",id:"returns-36",level:5},{value:"Parameters",id:"parameters-20",level:5},{value:"Type Parameters",id:"type-parameters-16",level:5},{value:'<Icon icon="codicon:symbol-method" className="symbol-method" /> Dispose()',id:"-dispose",level:3},{value:' <Icon icon="codicon:github-inverted" className="github-icon" /> View Source',id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-40",level:6}],m={toc:s};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-sqlmappergridreader"},(0,n.kt)(i.JO,{icon:"codicon:symbol-class",className:"symbol-class",mdxType:"Icon"})," SqlMapper.GridReader"),(0,n.kt)("p",null,"The grid reader provides interfaces for reading multiple result sets from a Dapper query"),(0,n.kt)("h6",{id:"assembly-servicestackormlitedll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": ServiceStack.OrmLite.dll"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L13"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public class GridReader : IDisposable\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"-isconsumed"},(0,n.kt)(i.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," IsConsumed"),(0,n.kt)("p",null,"Has the underlying reader been consumed?"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L392"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public bool IsConsumed { get; }\n")),(0,n.kt)("h3",{id:"-command"},(0,n.kt)(i.JO,{icon:"codicon:symbol-property",className:"symbol-property",mdxType:"Icon"})," Command"),(0,n.kt)("p",null,"The command associated with the reader"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L397"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IDbCommand Command { get; set; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"-readasyncboolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadAsync(Boolean)"),(0,n.kt)("p",null,"Read the next grid of results, returned as a dynamic object"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L27"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<IEnumerable<dynamic>> ReadAsync(bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<IEnumerable<System.Object>>")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer the results.")))),(0,n.kt)("h3",{id:"-readfirstasync"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstAsync()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L33"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<dynamic> ReadFirstAsync()\n")),(0,n.kt)("h5",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h3",{id:"-readfirstordefaultasync"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefaultAsync()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L39"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<dynamic> ReadFirstOrDefaultAsync()\n")),(0,n.kt)("h5",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h3",{id:"-readsingleasync"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleAsync()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L45"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<dynamic> ReadSingleAsync()\n")),(0,n.kt)("h5",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h3",{id:"-readsingleordefaultasync"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefaultAsync()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-7"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L51"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<dynamic> ReadSingleOrDefaultAsync()\n")),(0,n.kt)("h5",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h3",{id:"-readasynctype-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadAsync(Type, Boolean)"),(0,n.kt)("p",null,"Read the next grid of results"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-8"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L59"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<IEnumerable<object>> ReadAsync(Type type, bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<IEnumerable<System.Object>>")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer the results.")))),(0,n.kt)("h3",{id:"-readfirstasynctype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstAsync(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-9"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L70"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<object> ReadFirstAsync(Type type)\n")),(0,n.kt)("h5",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstordefaultasynctype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefaultAsync(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-10"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L81"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<object> ReadFirstOrDefaultAsync(Type type)\n")),(0,n.kt)("h5",{id:"returns-7"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleasynctype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleAsync(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-11"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L92"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<object> ReadSingleAsync(Type type)\n")),(0,n.kt)("h5",{id:"returns-8"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h5",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleordefaultasynctype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefaultAsync(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-12"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L103"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<object> ReadSingleOrDefaultAsync(Type type)\n")),(0,n.kt)("h5",{id:"returns-9"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<System.Object>")),(0,n.kt)("h5",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readasynctboolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadAsync","<","T",">","(Boolean)"),(0,n.kt)("p",null,"Read the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-13"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L114"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<IEnumerable<T>> ReadAsync<T>(bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns-10"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<IEnumerable<<T>>>")),(0,n.kt)("h5",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether the results should be buffered in memory.")))),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstasynct"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstAsync","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-14"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L120"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<T> ReadFirstAsync<T>()\n")),(0,n.kt)("h5",{id:"returns-11"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<<T>>")),(0,n.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstordefaultasynct"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefaultAsync","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-15"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L126"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<T> ReadFirstOrDefaultAsync<T>()\n")),(0,n.kt)("h5",{id:"returns-12"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<<T>>")),(0,n.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleasynct"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleAsync","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-16"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L132"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<T> ReadSingleAsync<T>()\n")),(0,n.kt)("h5",{id:"returns-13"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<<T>>")),(0,n.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleordefaultasynct"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefaultAsync","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-17"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.Async.cs#L138"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public Task<T> ReadSingleOrDefaultAsync<T>()\n")),(0,n.kt)("h5",{id:"returns-14"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Task<<T>>")),(0,n.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readboolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read(Boolean)"),(0,n.kt)("p",null,"Read the next grid of results, returned as a dynamic object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-18"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L33"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerable<dynamic> Read(bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns-15"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<System.Object>")),(0,n.kt)("h5",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether the results should be buffered in memory.")))),(0,n.kt)("h3",{id:"-readfirst"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirst()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-19"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L39"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public dynamic ReadFirst()\n")),(0,n.kt)("h5",{id:"returns-16"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h3",{id:"-readfirstordefault"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefault()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-20"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L45"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public dynamic ReadFirstOrDefault()\n")),(0,n.kt)("h5",{id:"returns-17"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h3",{id:"-readsingle"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingle()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-21"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L51"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public dynamic ReadSingle()\n")),(0,n.kt)("h5",{id:"returns-18"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h3",{id:"-readsingleordefault"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefault()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results, returned as a dynamic object."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-22"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L57"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public dynamic ReadSingleOrDefault()\n")),(0,n.kt)("h5",{id:"returns-19"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h3",{id:"-readtboolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","T",">","(Boolean)"),(0,n.kt)("p",null,"Read the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-23"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L64"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerable<T> Read<T>(bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns-20"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<T>>")),(0,n.kt)("h5",{id:"parameters-8"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether the results should be buffered in memory.")))),(0,n.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstt"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirst","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-24"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L70"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T ReadFirst<T>()\n")),(0,n.kt)("h5",{id:"returns-21"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<T>")),(0,n.kt)("h5",{id:"type-parameters-6"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstordefaultt"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefault","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-25"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L76"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T ReadFirstOrDefault<T>()\n")),(0,n.kt)("h5",{id:"returns-22"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<T>")),(0,n.kt)("h5",{id:"type-parameters-7"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsinglet"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingle","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-26"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L82"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T ReadSingle<T>()\n")),(0,n.kt)("h5",{id:"returns-23"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<T>")),(0,n.kt)("h5",{id:"type-parameters-8"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleordefaultt"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefault","<","T",">","()"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-27"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L88"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public T ReadSingleOrDefault<T>()\n")),(0,n.kt)("h5",{id:"returns-24"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<T>")),(0,n.kt)("h5",{id:"type-parameters-9"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readtype-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read(Type, Boolean)"),(0,n.kt)("p",null,"Read the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-28"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L96"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public IEnumerable<object> Read(Type type, bool buffered = true)\n")),(0,n.kt)("h5",{id:"returns-25"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<System.Object>")),(0,n.kt)("h5",{id:"parameters-9"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer the results.")))),(0,n.kt)("h3",{id:"-readfirsttype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirst(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-29"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L107"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object ReadFirst(Type type)\n")),(0,n.kt)("h5",{id:"returns-26"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h5",{id:"parameters-10"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readfirstordefaulttype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadFirstOrDefault(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-30"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L118"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object ReadFirstOrDefault(Type type)\n")),(0,n.kt)("h5",{id:"returns-27"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h5",{id:"parameters-11"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingletype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingle(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-31"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L129"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object ReadSingle(Type type)\n")),(0,n.kt)("h5",{id:"returns-28"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h5",{id:"parameters-12"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readsingleordefaulttype"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," ReadSingleOrDefault(Type)"),(0,n.kt)("p",null,"Read an individual row of the next grid of results."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-32"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L140"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public object ReadSingleOrDefault(Type type)\n")),(0,n.kt)("h5",{id:"returns-29"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"System.Object")),(0,n.kt)("h5",{id:"parameters-13"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"type")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to read.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-treturnfunctfirst-tsecond-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TReturn",">","(Func","<","TFirst, TSecond, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-33"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L249"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TReturn>(Func<TFirst, TSecond, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-30"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-14"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-10"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-tthird-treturnfunctfirst-tsecond-tthird-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TThird, TReturn",">","(Func","<","TFirst, TSecond, TThird, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-34"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L265"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TThird, TReturn>(Func<TFirst, TSecond, TThird, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-31"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-15"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TThird>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-11"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TThird")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The third type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-tthird-tfourth-treturnfunctfirst-tsecond-tthird-tfourth-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TThird, TFourth, TReturn",">","(Func","<","TFirst, TSecond, TThird, TFourth, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-35"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L282"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TThird, TFourth, TReturn>(Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-32"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-16"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TThird>,<TFourth>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-12"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TThird")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The third type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFourth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fourth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-tthird-tfourth-tfifth-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TThird, TFourth, TFifth, TReturn",">","(Func","<","TFirst, TSecond, TThird, TFourth, TFifth, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-36"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L300"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-33"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-17"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TThird>,<TFourth>,<TFifth>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-13"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TThird")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The third type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFourth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fourth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFifth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fifth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-tthird-tfourth-tfifth-tsixth-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-tsixth-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn",">","(Func","<","TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-37"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L319"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn>(Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-34"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-18"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TThird>,<TFourth>,<TFifth>,<TSixth>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-14"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TThird")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The third type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFourth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fourth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFifth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fifth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSixth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The sixth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtfirst-tsecond-tthird-tfourth-tfifth-tsixth-tseventh-treturnfunctfirst-tsecond-tthird-tfourth-tfifth-tsixth-tseventh-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn",">","(Func","<","TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-38"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L339"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn>(Func<TFirst, TSecond, TThird, TFourth, TFifth, TSixth, TSeventh, TReturn> func, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-35"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-19"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<<TFirst>,<TSecond>,<TThird>,<TFourth>,<TFifth>,<TSixth>,<TSeventh>,<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"func")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-15"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFirst")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The first type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSecond")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The second type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TThird")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The third type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFourth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fourth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TFifth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The fifth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSixth")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The sixth type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TSeventh")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The seventh type in the record set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-readtreturntype-funcobject-treturn-string-boolean"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Read","<","TReturn",">","(Type[], Func","<","Object[], TReturn",">",", String, Boolean)"),(0,n.kt)("p",null,"Read multiple objects from a single record set on the grid"),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-39"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L353"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},'public IEnumerable<TReturn> Read<TReturn>(Type[] types, Func<object[], TReturn> map, string splitOn = "id", bool buffered = true)\n')),(0,n.kt)("h5",{id:"returns-36"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"IEnumerable<<TReturn>>")),(0,n.kt)("h5",{id:"parameters-20"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Type[]")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"types")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The types to read from the result set.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Func<System.Object[],<TReturn>>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"map")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mapping function from the read types to the return type.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.String")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"splitOn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The field(s) we should split and read the second object from (defaults to ",'"',"id",'"',")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"System.Boolean")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"buffered")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether to buffer results in memory.")))),(0,n.kt)("h5",{id:"type-parameters-16"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TReturn")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type to return from the record set.")))),(0,n.kt)("h3",{id:"-dispose"},(0,n.kt)(i.JO,{icon:"codicon:symbol-method",className:"symbol-method",mdxType:"Icon"})," Dispose()"),(0,n.kt)("p",null,"Dispose the grid, closing and disposing both the underlying reader and command."),(0,n.kt)("h6",{id:"-icon-iconcodicongithub-inverted-classnamegithub-icon--view-source-40"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.OrmLite/src/ServiceStack.OrmLite/Dapper/SqlMapper.GridReader.cs#L421"}," ",(0,n.kt)(i.JO,{icon:"codicon:github-inverted",className:"github-icon",mdxType:"Icon"})," View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Dispose()\n")))}p.isMDXComponent=!0}}]);